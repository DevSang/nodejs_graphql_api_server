module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.1). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateAnswer_types {
  count: Int!
}

type AggregateApp_server_sync {
  count: Int!
}

type AggregateCalibration {
  count: Int!
}

type AggregateCompany {
  count: Int!
}

type AggregateCountry {
  count: Int!
}

type AggregateCup {
  count: Int!
}

type AggregateCup_app_sync {
  count: Int!
}

type AggregateCup_data {
  count: Int!
}

type AggregateCup_data_answer {
  count: Int!
}

type AggregateCup_data_colour_calc {
  count: Int!
}

type AggregateCup_data_colour_calib {
  count: Int!
}

type AggregateCup_data_man_mdates {
  count: Int!
}

type AggregateCup_data_proc_flow {
  count: Int!
}

type AggregateCup_data_proc_mdates {
  count: Int!
}

type AggregateCup_data_proc_volume {
  count: Int!
}

type AggregateCup_data_qa_response {
  count: Int!
}

type AggregateCup_data_question {
  count: Int!
}

type AggregateCup_data_raw {
  count: Int!
}

type AggregateCup_data_rejection {
  count: Int!
}

type AggregateCup_data_user_remove {
  count: Int!
}

type AggregateCup_data_user_remove_explain {
  count: Int!
}

type AggregateEthnicity {
  count: Int!
}

type AggregateFirmware {
  count: Int!
}

type AggregateHardware {
  count: Int!
}

type AggregatePlatform_comp {
  count: Int!
}

type AggregateUser_coin_history {
  count: Int!
}

type AggregateUser_cups {
  count: Int!
}

type AggregateUser_interview_data {
  count: Int!
}

type AggregateUser_interview_questions {
  count: Int!
}

type AggregateUser_record_data_by_day {
  count: Int!
}

type AggregateUser_record_data_by_period {
  count: Int!
}

type AggregateUser_record_data_by_time {
  count: Int!
}

type AggregateUsers {
  count: Int!
}

type AggregateUsers_data_analysis {
  count: Int!
}

type Answer_types {
  id: Int!
  answer_type: String!
  user_interview_questions(where: User_interview_questionsWhereInput, orderBy: User_interview_questionsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_interview_questions!]
}

type Answer_typesConnection {
  pageInfo: PageInfo!
  edges: [Answer_typesEdge]!
  aggregate: AggregateAnswer_types!
}

input Answer_typesCreateInput {
  id: Int
  answer_type: String!
  user_interview_questions: User_interview_questionsCreateManyWithoutAnswer_typeInput
}

input Answer_typesCreateOneWithoutUser_interview_questionsInput {
  create: Answer_typesCreateWithoutUser_interview_questionsInput
  connect: Answer_typesWhereUniqueInput
}

input Answer_typesCreateWithoutUser_interview_questionsInput {
  id: Int
  answer_type: String!
}

type Answer_typesEdge {
  node: Answer_types!
  cursor: String!
}

enum Answer_typesOrderByInput {
  id_ASC
  id_DESC
  answer_type_ASC
  answer_type_DESC
}

type Answer_typesPreviousValues {
  id: Int!
  answer_type: String!
}

type Answer_typesSubscriptionPayload {
  mutation: MutationType!
  node: Answer_types
  updatedFields: [String!]
  previousValues: Answer_typesPreviousValues
}

input Answer_typesSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Answer_typesWhereInput
  AND: [Answer_typesSubscriptionWhereInput!]
  OR: [Answer_typesSubscriptionWhereInput!]
  NOT: [Answer_typesSubscriptionWhereInput!]
}

input Answer_typesUpdateInput {
  answer_type: String
  user_interview_questions: User_interview_questionsUpdateManyWithoutAnswer_typeInput
}

input Answer_typesUpdateManyMutationInput {
  answer_type: String
}

input Answer_typesUpdateOneWithoutUser_interview_questionsInput {
  create: Answer_typesCreateWithoutUser_interview_questionsInput
  update: Answer_typesUpdateWithoutUser_interview_questionsDataInput
  upsert: Answer_typesUpsertWithoutUser_interview_questionsInput
  delete: Boolean
  disconnect: Boolean
  connect: Answer_typesWhereUniqueInput
}

input Answer_typesUpdateWithoutUser_interview_questionsDataInput {
  answer_type: String
}

input Answer_typesUpsertWithoutUser_interview_questionsInput {
  update: Answer_typesUpdateWithoutUser_interview_questionsDataInput!
  create: Answer_typesCreateWithoutUser_interview_questionsInput!
}

input Answer_typesWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  answer_type: String
  answer_type_not: String
  answer_type_in: [String!]
  answer_type_not_in: [String!]
  answer_type_lt: String
  answer_type_lte: String
  answer_type_gt: String
  answer_type_gte: String
  answer_type_contains: String
  answer_type_not_contains: String
  answer_type_starts_with: String
  answer_type_not_starts_with: String
  answer_type_ends_with: String
  answer_type_not_ends_with: String
  user_interview_questions_every: User_interview_questionsWhereInput
  user_interview_questions_some: User_interview_questionsWhereInput
  user_interview_questions_none: User_interview_questionsWhereInput
  AND: [Answer_typesWhereInput!]
  OR: [Answer_typesWhereInput!]
  NOT: [Answer_typesWhereInput!]
}

input Answer_typesWhereUniqueInput {
  id: Int
}

type App_server_sync {
  id: Int!
  server_synch_time: DateTime!
  user: Users
}

type App_server_syncConnection {
  pageInfo: PageInfo!
  edges: [App_server_syncEdge]!
  aggregate: AggregateApp_server_sync!
}

input App_server_syncCreateInput {
  id: Int
  server_synch_time: DateTime!
  user: UsersCreateOneWithoutApp_server_syncsInput
}

input App_server_syncCreateManyWithoutUserInput {
  create: [App_server_syncCreateWithoutUserInput!]
  connect: [App_server_syncWhereUniqueInput!]
}

input App_server_syncCreateWithoutUserInput {
  id: Int
  server_synch_time: DateTime!
}

type App_server_syncEdge {
  node: App_server_sync!
  cursor: String!
}

enum App_server_syncOrderByInput {
  id_ASC
  id_DESC
  server_synch_time_ASC
  server_synch_time_DESC
}

type App_server_syncPreviousValues {
  id: Int!
  server_synch_time: DateTime!
}

input App_server_syncScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  server_synch_time: DateTime
  server_synch_time_not: DateTime
  server_synch_time_in: [DateTime!]
  server_synch_time_not_in: [DateTime!]
  server_synch_time_lt: DateTime
  server_synch_time_lte: DateTime
  server_synch_time_gt: DateTime
  server_synch_time_gte: DateTime
  AND: [App_server_syncScalarWhereInput!]
  OR: [App_server_syncScalarWhereInput!]
  NOT: [App_server_syncScalarWhereInput!]
}

type App_server_syncSubscriptionPayload {
  mutation: MutationType!
  node: App_server_sync
  updatedFields: [String!]
  previousValues: App_server_syncPreviousValues
}

input App_server_syncSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: App_server_syncWhereInput
  AND: [App_server_syncSubscriptionWhereInput!]
  OR: [App_server_syncSubscriptionWhereInput!]
  NOT: [App_server_syncSubscriptionWhereInput!]
}

input App_server_syncUpdateInput {
  server_synch_time: DateTime
  user: UsersUpdateOneWithoutApp_server_syncsInput
}

input App_server_syncUpdateManyDataInput {
  server_synch_time: DateTime
}

input App_server_syncUpdateManyMutationInput {
  server_synch_time: DateTime
}

input App_server_syncUpdateManyWithoutUserInput {
  create: [App_server_syncCreateWithoutUserInput!]
  delete: [App_server_syncWhereUniqueInput!]
  connect: [App_server_syncWhereUniqueInput!]
  set: [App_server_syncWhereUniqueInput!]
  disconnect: [App_server_syncWhereUniqueInput!]
  update: [App_server_syncUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [App_server_syncUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [App_server_syncScalarWhereInput!]
  updateMany: [App_server_syncUpdateManyWithWhereNestedInput!]
}

input App_server_syncUpdateManyWithWhereNestedInput {
  where: App_server_syncScalarWhereInput!
  data: App_server_syncUpdateManyDataInput!
}

input App_server_syncUpdateWithoutUserDataInput {
  server_synch_time: DateTime
}

input App_server_syncUpdateWithWhereUniqueWithoutUserInput {
  where: App_server_syncWhereUniqueInput!
  data: App_server_syncUpdateWithoutUserDataInput!
}

input App_server_syncUpsertWithWhereUniqueWithoutUserInput {
  where: App_server_syncWhereUniqueInput!
  update: App_server_syncUpdateWithoutUserDataInput!
  create: App_server_syncCreateWithoutUserInput!
}

input App_server_syncWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  server_synch_time: DateTime
  server_synch_time_not: DateTime
  server_synch_time_in: [DateTime!]
  server_synch_time_not_in: [DateTime!]
  server_synch_time_lt: DateTime
  server_synch_time_lte: DateTime
  server_synch_time_gt: DateTime
  server_synch_time_gte: DateTime
  user: UsersWhereInput
  AND: [App_server_syncWhereInput!]
  OR: [App_server_syncWhereInput!]
  NOT: [App_server_syncWhereInput!]
}

input App_server_syncWhereUniqueInput {
  id: Int
}

type BatchPayload {
  count: Long!
}

type Calibration {
  id: Int!
  calib_version: String!
  cups(where: CupWhereInput, orderBy: CupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup!]
}

type CalibrationConnection {
  pageInfo: PageInfo!
  edges: [CalibrationEdge]!
  aggregate: AggregateCalibration!
}

input CalibrationCreateInput {
  id: Int
  calib_version: String!
  cups: CupCreateManyWithoutCalibInput
}

input CalibrationCreateOneWithoutCupsInput {
  create: CalibrationCreateWithoutCupsInput
  connect: CalibrationWhereUniqueInput
}

input CalibrationCreateWithoutCupsInput {
  id: Int
  calib_version: String!
}

type CalibrationEdge {
  node: Calibration!
  cursor: String!
}

enum CalibrationOrderByInput {
  id_ASC
  id_DESC
  calib_version_ASC
  calib_version_DESC
}

type CalibrationPreviousValues {
  id: Int!
  calib_version: String!
}

type CalibrationSubscriptionPayload {
  mutation: MutationType!
  node: Calibration
  updatedFields: [String!]
  previousValues: CalibrationPreviousValues
}

input CalibrationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CalibrationWhereInput
  AND: [CalibrationSubscriptionWhereInput!]
  OR: [CalibrationSubscriptionWhereInput!]
  NOT: [CalibrationSubscriptionWhereInput!]
}

input CalibrationUpdateInput {
  calib_version: String
  cups: CupUpdateManyWithoutCalibInput
}

input CalibrationUpdateManyMutationInput {
  calib_version: String
}

input CalibrationUpdateOneWithoutCupsInput {
  create: CalibrationCreateWithoutCupsInput
  update: CalibrationUpdateWithoutCupsDataInput
  upsert: CalibrationUpsertWithoutCupsInput
  delete: Boolean
  disconnect: Boolean
  connect: CalibrationWhereUniqueInput
}

input CalibrationUpdateWithoutCupsDataInput {
  calib_version: String
}

input CalibrationUpsertWithoutCupsInput {
  update: CalibrationUpdateWithoutCupsDataInput!
  create: CalibrationCreateWithoutCupsInput!
}

input CalibrationWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  calib_version: String
  calib_version_not: String
  calib_version_in: [String!]
  calib_version_not_in: [String!]
  calib_version_lt: String
  calib_version_lte: String
  calib_version_gt: String
  calib_version_gte: String
  calib_version_contains: String
  calib_version_not_contains: String
  calib_version_starts_with: String
  calib_version_not_starts_with: String
  calib_version_ends_with: String
  calib_version_not_ends_with: String
  cups_every: CupWhereInput
  cups_some: CupWhereInput
  cups_none: CupWhereInput
  AND: [CalibrationWhereInput!]
  OR: [CalibrationWhereInput!]
  NOT: [CalibrationWhereInput!]
}

input CalibrationWhereUniqueInput {
  id: Int
}

type Company {
  id: Int!
  company_name: String!
  cups(where: CupWhereInput, orderBy: CupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup!]
}

type CompanyConnection {
  pageInfo: PageInfo!
  edges: [CompanyEdge]!
  aggregate: AggregateCompany!
}

input CompanyCreateInput {
  id: Int
  company_name: String!
  cups: CupCreateManyWithoutCompanyInput
}

input CompanyCreateOneWithoutCupsInput {
  create: CompanyCreateWithoutCupsInput
  connect: CompanyWhereUniqueInput
}

input CompanyCreateWithoutCupsInput {
  id: Int
  company_name: String!
}

type CompanyEdge {
  node: Company!
  cursor: String!
}

enum CompanyOrderByInput {
  id_ASC
  id_DESC
  company_name_ASC
  company_name_DESC
}

type CompanyPreviousValues {
  id: Int!
  company_name: String!
}

type CompanySubscriptionPayload {
  mutation: MutationType!
  node: Company
  updatedFields: [String!]
  previousValues: CompanyPreviousValues
}

input CompanySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CompanyWhereInput
  AND: [CompanySubscriptionWhereInput!]
  OR: [CompanySubscriptionWhereInput!]
  NOT: [CompanySubscriptionWhereInput!]
}

input CompanyUpdateInput {
  company_name: String
  cups: CupUpdateManyWithoutCompanyInput
}

input CompanyUpdateManyMutationInput {
  company_name: String
}

input CompanyUpdateOneWithoutCupsInput {
  create: CompanyCreateWithoutCupsInput
  update: CompanyUpdateWithoutCupsDataInput
  upsert: CompanyUpsertWithoutCupsInput
  delete: Boolean
  disconnect: Boolean
  connect: CompanyWhereUniqueInput
}

input CompanyUpdateWithoutCupsDataInput {
  company_name: String
}

input CompanyUpsertWithoutCupsInput {
  update: CompanyUpdateWithoutCupsDataInput!
  create: CompanyCreateWithoutCupsInput!
}

input CompanyWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  company_name: String
  company_name_not: String
  company_name_in: [String!]
  company_name_not_in: [String!]
  company_name_lt: String
  company_name_lte: String
  company_name_gt: String
  company_name_gte: String
  company_name_contains: String
  company_name_not_contains: String
  company_name_starts_with: String
  company_name_not_starts_with: String
  company_name_ends_with: String
  company_name_not_ends_with: String
  cups_every: CupWhereInput
  cups_some: CupWhereInput
  cups_none: CupWhereInput
  AND: [CompanyWhereInput!]
  OR: [CompanyWhereInput!]
  NOT: [CompanyWhereInput!]
}

input CompanyWhereUniqueInput {
  id: Int
}

type Country {
  id: Int!
  country_name: String!
  users(where: UsersWhereInput, orderBy: UsersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Users!]
}

type CountryConnection {
  pageInfo: PageInfo!
  edges: [CountryEdge]!
  aggregate: AggregateCountry!
}

input CountryCreateInput {
  id: Int
  country_name: String!
  users: UsersCreateManyWithoutCountryInput
}

input CountryCreateOneWithoutUsersInput {
  create: CountryCreateWithoutUsersInput
  connect: CountryWhereUniqueInput
}

input CountryCreateWithoutUsersInput {
  id: Int
  country_name: String!
}

type CountryEdge {
  node: Country!
  cursor: String!
}

enum CountryOrderByInput {
  id_ASC
  id_DESC
  country_name_ASC
  country_name_DESC
}

type CountryPreviousValues {
  id: Int!
  country_name: String!
}

type CountrySubscriptionPayload {
  mutation: MutationType!
  node: Country
  updatedFields: [String!]
  previousValues: CountryPreviousValues
}

input CountrySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CountryWhereInput
  AND: [CountrySubscriptionWhereInput!]
  OR: [CountrySubscriptionWhereInput!]
  NOT: [CountrySubscriptionWhereInput!]
}

input CountryUpdateInput {
  country_name: String
  users: UsersUpdateManyWithoutCountryInput
}

input CountryUpdateManyMutationInput {
  country_name: String
}

input CountryUpdateOneWithoutUsersInput {
  create: CountryCreateWithoutUsersInput
  update: CountryUpdateWithoutUsersDataInput
  upsert: CountryUpsertWithoutUsersInput
  delete: Boolean
  disconnect: Boolean
  connect: CountryWhereUniqueInput
}

input CountryUpdateWithoutUsersDataInput {
  country_name: String
}

input CountryUpsertWithoutUsersInput {
  update: CountryUpdateWithoutUsersDataInput!
  create: CountryCreateWithoutUsersInput!
}

input CountryWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  country_name: String
  country_name_not: String
  country_name_in: [String!]
  country_name_not_in: [String!]
  country_name_lt: String
  country_name_lte: String
  country_name_gt: String
  country_name_gte: String
  country_name_contains: String
  country_name_not_contains: String
  country_name_starts_with: String
  country_name_not_starts_with: String
  country_name_ends_with: String
  country_name_not_ends_with: String
  users_every: UsersWhereInput
  users_some: UsersWhereInput
  users_none: UsersWhereInput
  AND: [CountryWhereInput!]
  OR: [CountryWhereInput!]
  NOT: [CountryWhereInput!]
}

input CountryWhereUniqueInput {
  id: Int
}

type Cup {
  id: Int!
  anon_serial_number: Int!
  calib: Calibration
  company: Company
  cup_app_syncs(where: Cup_app_syncWhereInput, orderBy: Cup_app_syncOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_app_sync!]
  cup_data(where: Cup_dataWhereInput, orderBy: Cup_dataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data!]
  cup_data_colour_calibs(where: Cup_data_colour_calibWhereInput, orderBy: Cup_data_colour_calibOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_colour_calib!]
  cup_data_raws(where: Cup_data_rawWhereInput, orderBy: Cup_data_rawOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_raw!]
  cup_data_user_removes(where: Cup_data_user_removeWhereInput, orderBy: Cup_data_user_removeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_user_remove!]
  encryption_key: Int!
  fw: Firmware
  hw: Hardware
  user_cups(where: User_cupsWhereInput, orderBy: User_cupsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_cups!]
}

type Cup_app_sync {
  id: Int!
  app_synch_time: DateTime!
  serial_number: Cup
}

type Cup_app_syncConnection {
  pageInfo: PageInfo!
  edges: [Cup_app_syncEdge]!
  aggregate: AggregateCup_app_sync!
}

input Cup_app_syncCreateInput {
  id: Int
  app_synch_time: DateTime!
  serial_number: CupCreateOneWithoutCup_app_syncsInput
}

input Cup_app_syncCreateManyWithoutSerial_numberInput {
  create: [Cup_app_syncCreateWithoutSerial_numberInput!]
  connect: [Cup_app_syncWhereUniqueInput!]
}

input Cup_app_syncCreateWithoutSerial_numberInput {
  id: Int
  app_synch_time: DateTime!
}

type Cup_app_syncEdge {
  node: Cup_app_sync!
  cursor: String!
}

enum Cup_app_syncOrderByInput {
  id_ASC
  id_DESC
  app_synch_time_ASC
  app_synch_time_DESC
}

type Cup_app_syncPreviousValues {
  id: Int!
  app_synch_time: DateTime!
}

input Cup_app_syncScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  app_synch_time: DateTime
  app_synch_time_not: DateTime
  app_synch_time_in: [DateTime!]
  app_synch_time_not_in: [DateTime!]
  app_synch_time_lt: DateTime
  app_synch_time_lte: DateTime
  app_synch_time_gt: DateTime
  app_synch_time_gte: DateTime
  AND: [Cup_app_syncScalarWhereInput!]
  OR: [Cup_app_syncScalarWhereInput!]
  NOT: [Cup_app_syncScalarWhereInput!]
}

type Cup_app_syncSubscriptionPayload {
  mutation: MutationType!
  node: Cup_app_sync
  updatedFields: [String!]
  previousValues: Cup_app_syncPreviousValues
}

input Cup_app_syncSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_app_syncWhereInput
  AND: [Cup_app_syncSubscriptionWhereInput!]
  OR: [Cup_app_syncSubscriptionWhereInput!]
  NOT: [Cup_app_syncSubscriptionWhereInput!]
}

input Cup_app_syncUpdateInput {
  app_synch_time: DateTime
  serial_number: CupUpdateOneWithoutCup_app_syncsInput
}

input Cup_app_syncUpdateManyDataInput {
  app_synch_time: DateTime
}

input Cup_app_syncUpdateManyMutationInput {
  app_synch_time: DateTime
}

input Cup_app_syncUpdateManyWithoutSerial_numberInput {
  create: [Cup_app_syncCreateWithoutSerial_numberInput!]
  delete: [Cup_app_syncWhereUniqueInput!]
  connect: [Cup_app_syncWhereUniqueInput!]
  set: [Cup_app_syncWhereUniqueInput!]
  disconnect: [Cup_app_syncWhereUniqueInput!]
  update: [Cup_app_syncUpdateWithWhereUniqueWithoutSerial_numberInput!]
  upsert: [Cup_app_syncUpsertWithWhereUniqueWithoutSerial_numberInput!]
  deleteMany: [Cup_app_syncScalarWhereInput!]
  updateMany: [Cup_app_syncUpdateManyWithWhereNestedInput!]
}

input Cup_app_syncUpdateManyWithWhereNestedInput {
  where: Cup_app_syncScalarWhereInput!
  data: Cup_app_syncUpdateManyDataInput!
}

input Cup_app_syncUpdateWithoutSerial_numberDataInput {
  app_synch_time: DateTime
}

input Cup_app_syncUpdateWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_app_syncWhereUniqueInput!
  data: Cup_app_syncUpdateWithoutSerial_numberDataInput!
}

input Cup_app_syncUpsertWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_app_syncWhereUniqueInput!
  update: Cup_app_syncUpdateWithoutSerial_numberDataInput!
  create: Cup_app_syncCreateWithoutSerial_numberInput!
}

input Cup_app_syncWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  app_synch_time: DateTime
  app_synch_time_not: DateTime
  app_synch_time_in: [DateTime!]
  app_synch_time_not_in: [DateTime!]
  app_synch_time_lt: DateTime
  app_synch_time_lte: DateTime
  app_synch_time_gt: DateTime
  app_synch_time_gte: DateTime
  serial_number: CupWhereInput
  AND: [Cup_app_syncWhereInput!]
  OR: [Cup_app_syncWhereInput!]
  NOT: [Cup_app_syncWhereInput!]
}

input Cup_app_syncWhereUniqueInput {
  id: Int
}

type Cup_data {
  id: Int!
  battery: Int!
  calib_flag: Boolean!
  ch1: Int!
  ch10: Int!
  ch11: Int!
  ch12: Int!
  ch13: Int!
  ch14: Int!
  ch2: Int!
  ch3: Int!
  ch4: Int!
  ch5: Int!
  ch6: Int!
  ch7: Int!
  ch8: Int!
  ch9: Int!
  colour_b: Int!
  colour_c: Int!
  colour_g: Int!
  colour_r: Int!
  cup_data_colour_calcs(where: Cup_data_colour_calcWhereInput, orderBy: Cup_data_colour_calcOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_colour_calc!]
  cup_data_proc_volumes(where: Cup_data_proc_volumeWhereInput, orderBy: Cup_data_proc_volumeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_proc_volume!]
  date: DateTime!
  day: Int!
  hour: Int!
  line: Int!
  minute: Int!
  month: Int!
  page: Int!
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  serial_number: Cup
  temperature: Int!
  x: Int!
  y: Int!
  year: Int!
  z: Int!
}

type Cup_data_answer {
  id: Int!
  answer_text: String!
  cup_data_qa_responses(where: Cup_data_qa_responseWhereInput, orderBy: Cup_data_qa_responseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_qa_response!]
  question: Cup_data_question
}

type Cup_data_answerConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_answerEdge]!
  aggregate: AggregateCup_data_answer!
}

input Cup_data_answerCreateInput {
  id: Int
  answer_text: String!
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutAnswerInput
  question: Cup_data_questionCreateOneWithoutCup_data_answersInput
}

input Cup_data_answerCreateManyWithoutQuestionInput {
  create: [Cup_data_answerCreateWithoutQuestionInput!]
  connect: [Cup_data_answerWhereUniqueInput!]
}

input Cup_data_answerCreateOneWithoutCup_data_qa_responsesInput {
  create: Cup_data_answerCreateWithoutCup_data_qa_responsesInput
  connect: Cup_data_answerWhereUniqueInput
}

input Cup_data_answerCreateWithoutCup_data_qa_responsesInput {
  id: Int
  answer_text: String!
  question: Cup_data_questionCreateOneWithoutCup_data_answersInput
}

input Cup_data_answerCreateWithoutQuestionInput {
  id: Int
  answer_text: String!
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutAnswerInput
}

type Cup_data_answerEdge {
  node: Cup_data_answer!
  cursor: String!
}

enum Cup_data_answerOrderByInput {
  id_ASC
  id_DESC
  answer_text_ASC
  answer_text_DESC
}

type Cup_data_answerPreviousValues {
  id: Int!
  answer_text: String!
}

input Cup_data_answerScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  answer_text: String
  answer_text_not: String
  answer_text_in: [String!]
  answer_text_not_in: [String!]
  answer_text_lt: String
  answer_text_lte: String
  answer_text_gt: String
  answer_text_gte: String
  answer_text_contains: String
  answer_text_not_contains: String
  answer_text_starts_with: String
  answer_text_not_starts_with: String
  answer_text_ends_with: String
  answer_text_not_ends_with: String
  AND: [Cup_data_answerScalarWhereInput!]
  OR: [Cup_data_answerScalarWhereInput!]
  NOT: [Cup_data_answerScalarWhereInput!]
}

type Cup_data_answerSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_answer
  updatedFields: [String!]
  previousValues: Cup_data_answerPreviousValues
}

input Cup_data_answerSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_answerWhereInput
  AND: [Cup_data_answerSubscriptionWhereInput!]
  OR: [Cup_data_answerSubscriptionWhereInput!]
  NOT: [Cup_data_answerSubscriptionWhereInput!]
}

input Cup_data_answerUpdateInput {
  answer_text: String
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutAnswerInput
  question: Cup_data_questionUpdateOneWithoutCup_data_answersInput
}

input Cup_data_answerUpdateManyDataInput {
  answer_text: String
}

input Cup_data_answerUpdateManyMutationInput {
  answer_text: String
}

input Cup_data_answerUpdateManyWithoutQuestionInput {
  create: [Cup_data_answerCreateWithoutQuestionInput!]
  delete: [Cup_data_answerWhereUniqueInput!]
  connect: [Cup_data_answerWhereUniqueInput!]
  set: [Cup_data_answerWhereUniqueInput!]
  disconnect: [Cup_data_answerWhereUniqueInput!]
  update: [Cup_data_answerUpdateWithWhereUniqueWithoutQuestionInput!]
  upsert: [Cup_data_answerUpsertWithWhereUniqueWithoutQuestionInput!]
  deleteMany: [Cup_data_answerScalarWhereInput!]
  updateMany: [Cup_data_answerUpdateManyWithWhereNestedInput!]
}

input Cup_data_answerUpdateManyWithWhereNestedInput {
  where: Cup_data_answerScalarWhereInput!
  data: Cup_data_answerUpdateManyDataInput!
}

input Cup_data_answerUpdateOneWithoutCup_data_qa_responsesInput {
  create: Cup_data_answerCreateWithoutCup_data_qa_responsesInput
  update: Cup_data_answerUpdateWithoutCup_data_qa_responsesDataInput
  upsert: Cup_data_answerUpsertWithoutCup_data_qa_responsesInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_data_answerWhereUniqueInput
}

input Cup_data_answerUpdateWithoutCup_data_qa_responsesDataInput {
  answer_text: String
  question: Cup_data_questionUpdateOneWithoutCup_data_answersInput
}

input Cup_data_answerUpdateWithoutQuestionDataInput {
  answer_text: String
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutAnswerInput
}

input Cup_data_answerUpdateWithWhereUniqueWithoutQuestionInput {
  where: Cup_data_answerWhereUniqueInput!
  data: Cup_data_answerUpdateWithoutQuestionDataInput!
}

input Cup_data_answerUpsertWithoutCup_data_qa_responsesInput {
  update: Cup_data_answerUpdateWithoutCup_data_qa_responsesDataInput!
  create: Cup_data_answerCreateWithoutCup_data_qa_responsesInput!
}

input Cup_data_answerUpsertWithWhereUniqueWithoutQuestionInput {
  where: Cup_data_answerWhereUniqueInput!
  update: Cup_data_answerUpdateWithoutQuestionDataInput!
  create: Cup_data_answerCreateWithoutQuestionInput!
}

input Cup_data_answerWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  answer_text: String
  answer_text_not: String
  answer_text_in: [String!]
  answer_text_not_in: [String!]
  answer_text_lt: String
  answer_text_lte: String
  answer_text_gt: String
  answer_text_gte: String
  answer_text_contains: String
  answer_text_not_contains: String
  answer_text_starts_with: String
  answer_text_not_starts_with: String
  answer_text_ends_with: String
  answer_text_not_ends_with: String
  cup_data_qa_responses_every: Cup_data_qa_responseWhereInput
  cup_data_qa_responses_some: Cup_data_qa_responseWhereInput
  cup_data_qa_responses_none: Cup_data_qa_responseWhereInput
  question: Cup_data_questionWhereInput
  AND: [Cup_data_answerWhereInput!]
  OR: [Cup_data_answerWhereInput!]
  NOT: [Cup_data_answerWhereInput!]
}

input Cup_data_answerWhereUniqueInput {
  id: Int
}

type Cup_data_colour_calc {
  id: Int!
  blue: Int!
  cup_data_row: Cup_data
  green: Int!
  red: Int!
}

type Cup_data_colour_calcConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_colour_calcEdge]!
  aggregate: AggregateCup_data_colour_calc!
}

input Cup_data_colour_calcCreateInput {
  id: Int
  blue: Int!
  cup_data_row: Cup_dataCreateOneWithoutCup_data_colour_calcsInput
  green: Int!
  red: Int!
}

input Cup_data_colour_calcCreateManyWithoutCup_data_rowInput {
  create: [Cup_data_colour_calcCreateWithoutCup_data_rowInput!]
  connect: [Cup_data_colour_calcWhereUniqueInput!]
}

input Cup_data_colour_calcCreateWithoutCup_data_rowInput {
  id: Int
  blue: Int!
  green: Int!
  red: Int!
}

type Cup_data_colour_calcEdge {
  node: Cup_data_colour_calc!
  cursor: String!
}

enum Cup_data_colour_calcOrderByInput {
  id_ASC
  id_DESC
  blue_ASC
  blue_DESC
  green_ASC
  green_DESC
  red_ASC
  red_DESC
}

type Cup_data_colour_calcPreviousValues {
  id: Int!
  blue: Int!
  green: Int!
  red: Int!
}

input Cup_data_colour_calcScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  blue: Int
  blue_not: Int
  blue_in: [Int!]
  blue_not_in: [Int!]
  blue_lt: Int
  blue_lte: Int
  blue_gt: Int
  blue_gte: Int
  green: Int
  green_not: Int
  green_in: [Int!]
  green_not_in: [Int!]
  green_lt: Int
  green_lte: Int
  green_gt: Int
  green_gte: Int
  red: Int
  red_not: Int
  red_in: [Int!]
  red_not_in: [Int!]
  red_lt: Int
  red_lte: Int
  red_gt: Int
  red_gte: Int
  AND: [Cup_data_colour_calcScalarWhereInput!]
  OR: [Cup_data_colour_calcScalarWhereInput!]
  NOT: [Cup_data_colour_calcScalarWhereInput!]
}

type Cup_data_colour_calcSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_colour_calc
  updatedFields: [String!]
  previousValues: Cup_data_colour_calcPreviousValues
}

input Cup_data_colour_calcSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_colour_calcWhereInput
  AND: [Cup_data_colour_calcSubscriptionWhereInput!]
  OR: [Cup_data_colour_calcSubscriptionWhereInput!]
  NOT: [Cup_data_colour_calcSubscriptionWhereInput!]
}

input Cup_data_colour_calcUpdateInput {
  blue: Int
  cup_data_row: Cup_dataUpdateOneWithoutCup_data_colour_calcsInput
  green: Int
  red: Int
}

input Cup_data_colour_calcUpdateManyDataInput {
  blue: Int
  green: Int
  red: Int
}

input Cup_data_colour_calcUpdateManyMutationInput {
  blue: Int
  green: Int
  red: Int
}

input Cup_data_colour_calcUpdateManyWithoutCup_data_rowInput {
  create: [Cup_data_colour_calcCreateWithoutCup_data_rowInput!]
  delete: [Cup_data_colour_calcWhereUniqueInput!]
  connect: [Cup_data_colour_calcWhereUniqueInput!]
  set: [Cup_data_colour_calcWhereUniqueInput!]
  disconnect: [Cup_data_colour_calcWhereUniqueInput!]
  update: [Cup_data_colour_calcUpdateWithWhereUniqueWithoutCup_data_rowInput!]
  upsert: [Cup_data_colour_calcUpsertWithWhereUniqueWithoutCup_data_rowInput!]
  deleteMany: [Cup_data_colour_calcScalarWhereInput!]
  updateMany: [Cup_data_colour_calcUpdateManyWithWhereNestedInput!]
}

input Cup_data_colour_calcUpdateManyWithWhereNestedInput {
  where: Cup_data_colour_calcScalarWhereInput!
  data: Cup_data_colour_calcUpdateManyDataInput!
}

input Cup_data_colour_calcUpdateWithoutCup_data_rowDataInput {
  blue: Int
  green: Int
  red: Int
}

input Cup_data_colour_calcUpdateWithWhereUniqueWithoutCup_data_rowInput {
  where: Cup_data_colour_calcWhereUniqueInput!
  data: Cup_data_colour_calcUpdateWithoutCup_data_rowDataInput!
}

input Cup_data_colour_calcUpsertWithWhereUniqueWithoutCup_data_rowInput {
  where: Cup_data_colour_calcWhereUniqueInput!
  update: Cup_data_colour_calcUpdateWithoutCup_data_rowDataInput!
  create: Cup_data_colour_calcCreateWithoutCup_data_rowInput!
}

input Cup_data_colour_calcWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  blue: Int
  blue_not: Int
  blue_in: [Int!]
  blue_not_in: [Int!]
  blue_lt: Int
  blue_lte: Int
  blue_gt: Int
  blue_gte: Int
  cup_data_row: Cup_dataWhereInput
  green: Int
  green_not: Int
  green_in: [Int!]
  green_not_in: [Int!]
  green_lt: Int
  green_lte: Int
  green_gt: Int
  green_gte: Int
  red: Int
  red_not: Int
  red_in: [Int!]
  red_not_in: [Int!]
  red_lt: Int
  red_lte: Int
  red_gt: Int
  red_gte: Int
  AND: [Cup_data_colour_calcWhereInput!]
  OR: [Cup_data_colour_calcWhereInput!]
  NOT: [Cup_data_colour_calcWhereInput!]
}

input Cup_data_colour_calcWhereUniqueInput {
  id: Int
}

type Cup_data_colour_calib {
  id: Int!
  blue: Int!
  c: Int!
  green: Int!
  red: Int!
  serial_number: Cup
}

type Cup_data_colour_calibConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_colour_calibEdge]!
  aggregate: AggregateCup_data_colour_calib!
}

input Cup_data_colour_calibCreateInput {
  id: Int
  blue: Int!
  c: Int!
  green: Int!
  red: Int!
  serial_number: CupCreateOneWithoutCup_data_colour_calibsInput
}

input Cup_data_colour_calibCreateManyWithoutSerial_numberInput {
  create: [Cup_data_colour_calibCreateWithoutSerial_numberInput!]
  connect: [Cup_data_colour_calibWhereUniqueInput!]
}

input Cup_data_colour_calibCreateWithoutSerial_numberInput {
  id: Int
  blue: Int!
  c: Int!
  green: Int!
  red: Int!
}

type Cup_data_colour_calibEdge {
  node: Cup_data_colour_calib!
  cursor: String!
}

enum Cup_data_colour_calibOrderByInput {
  id_ASC
  id_DESC
  blue_ASC
  blue_DESC
  c_ASC
  c_DESC
  green_ASC
  green_DESC
  red_ASC
  red_DESC
}

type Cup_data_colour_calibPreviousValues {
  id: Int!
  blue: Int!
  c: Int!
  green: Int!
  red: Int!
}

input Cup_data_colour_calibScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  blue: Int
  blue_not: Int
  blue_in: [Int!]
  blue_not_in: [Int!]
  blue_lt: Int
  blue_lte: Int
  blue_gt: Int
  blue_gte: Int
  c: Int
  c_not: Int
  c_in: [Int!]
  c_not_in: [Int!]
  c_lt: Int
  c_lte: Int
  c_gt: Int
  c_gte: Int
  green: Int
  green_not: Int
  green_in: [Int!]
  green_not_in: [Int!]
  green_lt: Int
  green_lte: Int
  green_gt: Int
  green_gte: Int
  red: Int
  red_not: Int
  red_in: [Int!]
  red_not_in: [Int!]
  red_lt: Int
  red_lte: Int
  red_gt: Int
  red_gte: Int
  AND: [Cup_data_colour_calibScalarWhereInput!]
  OR: [Cup_data_colour_calibScalarWhereInput!]
  NOT: [Cup_data_colour_calibScalarWhereInput!]
}

type Cup_data_colour_calibSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_colour_calib
  updatedFields: [String!]
  previousValues: Cup_data_colour_calibPreviousValues
}

input Cup_data_colour_calibSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_colour_calibWhereInput
  AND: [Cup_data_colour_calibSubscriptionWhereInput!]
  OR: [Cup_data_colour_calibSubscriptionWhereInput!]
  NOT: [Cup_data_colour_calibSubscriptionWhereInput!]
}

input Cup_data_colour_calibUpdateInput {
  blue: Int
  c: Int
  green: Int
  red: Int
  serial_number: CupUpdateOneWithoutCup_data_colour_calibsInput
}

input Cup_data_colour_calibUpdateManyDataInput {
  blue: Int
  c: Int
  green: Int
  red: Int
}

input Cup_data_colour_calibUpdateManyMutationInput {
  blue: Int
  c: Int
  green: Int
  red: Int
}

input Cup_data_colour_calibUpdateManyWithoutSerial_numberInput {
  create: [Cup_data_colour_calibCreateWithoutSerial_numberInput!]
  delete: [Cup_data_colour_calibWhereUniqueInput!]
  connect: [Cup_data_colour_calibWhereUniqueInput!]
  set: [Cup_data_colour_calibWhereUniqueInput!]
  disconnect: [Cup_data_colour_calibWhereUniqueInput!]
  update: [Cup_data_colour_calibUpdateWithWhereUniqueWithoutSerial_numberInput!]
  upsert: [Cup_data_colour_calibUpsertWithWhereUniqueWithoutSerial_numberInput!]
  deleteMany: [Cup_data_colour_calibScalarWhereInput!]
  updateMany: [Cup_data_colour_calibUpdateManyWithWhereNestedInput!]
}

input Cup_data_colour_calibUpdateManyWithWhereNestedInput {
  where: Cup_data_colour_calibScalarWhereInput!
  data: Cup_data_colour_calibUpdateManyDataInput!
}

input Cup_data_colour_calibUpdateWithoutSerial_numberDataInput {
  blue: Int
  c: Int
  green: Int
  red: Int
}

input Cup_data_colour_calibUpdateWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_data_colour_calibWhereUniqueInput!
  data: Cup_data_colour_calibUpdateWithoutSerial_numberDataInput!
}

input Cup_data_colour_calibUpsertWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_data_colour_calibWhereUniqueInput!
  update: Cup_data_colour_calibUpdateWithoutSerial_numberDataInput!
  create: Cup_data_colour_calibCreateWithoutSerial_numberInput!
}

input Cup_data_colour_calibWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  blue: Int
  blue_not: Int
  blue_in: [Int!]
  blue_not_in: [Int!]
  blue_lt: Int
  blue_lte: Int
  blue_gt: Int
  blue_gte: Int
  c: Int
  c_not: Int
  c_in: [Int!]
  c_not_in: [Int!]
  c_lt: Int
  c_lte: Int
  c_gt: Int
  c_gte: Int
  green: Int
  green_not: Int
  green_in: [Int!]
  green_not_in: [Int!]
  green_lt: Int
  green_lte: Int
  green_gt: Int
  green_gte: Int
  red: Int
  red_not: Int
  red_in: [Int!]
  red_not_in: [Int!]
  red_lt: Int
  red_lte: Int
  red_gt: Int
  red_gte: Int
  serial_number: CupWhereInput
  AND: [Cup_data_colour_calibWhereInput!]
  OR: [Cup_data_colour_calibWhereInput!]
  NOT: [Cup_data_colour_calibWhereInput!]
}

input Cup_data_colour_calibWhereUniqueInput {
  id: Int
}

type Cup_data_man_mdates {
  id: Int!
  mdate_row: Cup_data_proc_mdates
  men_finish: DateTime
  men_start: DateTime
}

type Cup_data_man_mdatesConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_man_mdatesEdge]!
  aggregate: AggregateCup_data_man_mdates!
}

input Cup_data_man_mdatesCreateInput {
  id: Int
  mdate_row: Cup_data_proc_mdatesCreateOneWithoutCup_data_man_mdatesInput
  men_finish: DateTime
  men_start: DateTime
}

input Cup_data_man_mdatesCreateManyWithoutMdate_rowInput {
  create: [Cup_data_man_mdatesCreateWithoutMdate_rowInput!]
  connect: [Cup_data_man_mdatesWhereUniqueInput!]
}

input Cup_data_man_mdatesCreateWithoutMdate_rowInput {
  id: Int
  men_finish: DateTime
  men_start: DateTime
}

type Cup_data_man_mdatesEdge {
  node: Cup_data_man_mdates!
  cursor: String!
}

enum Cup_data_man_mdatesOrderByInput {
  id_ASC
  id_DESC
  men_finish_ASC
  men_finish_DESC
  men_start_ASC
  men_start_DESC
}

type Cup_data_man_mdatesPreviousValues {
  id: Int!
  men_finish: DateTime
  men_start: DateTime
}

input Cup_data_man_mdatesScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  men_finish: DateTime
  men_finish_not: DateTime
  men_finish_in: [DateTime!]
  men_finish_not_in: [DateTime!]
  men_finish_lt: DateTime
  men_finish_lte: DateTime
  men_finish_gt: DateTime
  men_finish_gte: DateTime
  men_start: DateTime
  men_start_not: DateTime
  men_start_in: [DateTime!]
  men_start_not_in: [DateTime!]
  men_start_lt: DateTime
  men_start_lte: DateTime
  men_start_gt: DateTime
  men_start_gte: DateTime
  AND: [Cup_data_man_mdatesScalarWhereInput!]
  OR: [Cup_data_man_mdatesScalarWhereInput!]
  NOT: [Cup_data_man_mdatesScalarWhereInput!]
}

type Cup_data_man_mdatesSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_man_mdates
  updatedFields: [String!]
  previousValues: Cup_data_man_mdatesPreviousValues
}

input Cup_data_man_mdatesSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_man_mdatesWhereInput
  AND: [Cup_data_man_mdatesSubscriptionWhereInput!]
  OR: [Cup_data_man_mdatesSubscriptionWhereInput!]
  NOT: [Cup_data_man_mdatesSubscriptionWhereInput!]
}

input Cup_data_man_mdatesUpdateInput {
  mdate_row: Cup_data_proc_mdatesUpdateOneWithoutCup_data_man_mdatesInput
  men_finish: DateTime
  men_start: DateTime
}

input Cup_data_man_mdatesUpdateManyDataInput {
  men_finish: DateTime
  men_start: DateTime
}

input Cup_data_man_mdatesUpdateManyMutationInput {
  men_finish: DateTime
  men_start: DateTime
}

input Cup_data_man_mdatesUpdateManyWithoutMdate_rowInput {
  create: [Cup_data_man_mdatesCreateWithoutMdate_rowInput!]
  delete: [Cup_data_man_mdatesWhereUniqueInput!]
  connect: [Cup_data_man_mdatesWhereUniqueInput!]
  set: [Cup_data_man_mdatesWhereUniqueInput!]
  disconnect: [Cup_data_man_mdatesWhereUniqueInput!]
  update: [Cup_data_man_mdatesUpdateWithWhereUniqueWithoutMdate_rowInput!]
  upsert: [Cup_data_man_mdatesUpsertWithWhereUniqueWithoutMdate_rowInput!]
  deleteMany: [Cup_data_man_mdatesScalarWhereInput!]
  updateMany: [Cup_data_man_mdatesUpdateManyWithWhereNestedInput!]
}

input Cup_data_man_mdatesUpdateManyWithWhereNestedInput {
  where: Cup_data_man_mdatesScalarWhereInput!
  data: Cup_data_man_mdatesUpdateManyDataInput!
}

input Cup_data_man_mdatesUpdateWithoutMdate_rowDataInput {
  men_finish: DateTime
  men_start: DateTime
}

input Cup_data_man_mdatesUpdateWithWhereUniqueWithoutMdate_rowInput {
  where: Cup_data_man_mdatesWhereUniqueInput!
  data: Cup_data_man_mdatesUpdateWithoutMdate_rowDataInput!
}

input Cup_data_man_mdatesUpsertWithWhereUniqueWithoutMdate_rowInput {
  where: Cup_data_man_mdatesWhereUniqueInput!
  update: Cup_data_man_mdatesUpdateWithoutMdate_rowDataInput!
  create: Cup_data_man_mdatesCreateWithoutMdate_rowInput!
}

input Cup_data_man_mdatesWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  mdate_row: Cup_data_proc_mdatesWhereInput
  men_finish: DateTime
  men_finish_not: DateTime
  men_finish_in: [DateTime!]
  men_finish_not_in: [DateTime!]
  men_finish_lt: DateTime
  men_finish_lte: DateTime
  men_finish_gt: DateTime
  men_finish_gte: DateTime
  men_start: DateTime
  men_start_not: DateTime
  men_start_in: [DateTime!]
  men_start_not_in: [DateTime!]
  men_start_lt: DateTime
  men_start_lte: DateTime
  men_start_gt: DateTime
  men_start_gte: DateTime
  AND: [Cup_data_man_mdatesWhereInput!]
  OR: [Cup_data_man_mdatesWhereInput!]
  NOT: [Cup_data_man_mdatesWhereInput!]
}

input Cup_data_man_mdatesWhereUniqueInput {
  id: Int
}

type Cup_data_proc_flow {
  id: Int!
  date: DateTime!
  hourly_flow: Int!
  mdate_row: Cup_data_proc_mdates
  user: Users
}

type Cup_data_proc_flowConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_proc_flowEdge]!
  aggregate: AggregateCup_data_proc_flow!
}

input Cup_data_proc_flowCreateInput {
  id: Int
  date: DateTime!
  hourly_flow: Int!
  mdate_row: Cup_data_proc_mdatesCreateOneWithoutCup_data_proc_flowsInput
  user: UsersCreateOneWithoutCup_data_proc_flowsInput
}

input Cup_data_proc_flowCreateManyWithoutMdate_rowInput {
  create: [Cup_data_proc_flowCreateWithoutMdate_rowInput!]
  connect: [Cup_data_proc_flowWhereUniqueInput!]
}

input Cup_data_proc_flowCreateManyWithoutUserInput {
  create: [Cup_data_proc_flowCreateWithoutUserInput!]
  connect: [Cup_data_proc_flowWhereUniqueInput!]
}

input Cup_data_proc_flowCreateWithoutMdate_rowInput {
  id: Int
  date: DateTime!
  hourly_flow: Int!
  user: UsersCreateOneWithoutCup_data_proc_flowsInput
}

input Cup_data_proc_flowCreateWithoutUserInput {
  id: Int
  date: DateTime!
  hourly_flow: Int!
  mdate_row: Cup_data_proc_mdatesCreateOneWithoutCup_data_proc_flowsInput
}

type Cup_data_proc_flowEdge {
  node: Cup_data_proc_flow!
  cursor: String!
}

enum Cup_data_proc_flowOrderByInput {
  id_ASC
  id_DESC
  date_ASC
  date_DESC
  hourly_flow_ASC
  hourly_flow_DESC
}

type Cup_data_proc_flowPreviousValues {
  id: Int!
  date: DateTime!
  hourly_flow: Int!
}

input Cup_data_proc_flowScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  hourly_flow: Int
  hourly_flow_not: Int
  hourly_flow_in: [Int!]
  hourly_flow_not_in: [Int!]
  hourly_flow_lt: Int
  hourly_flow_lte: Int
  hourly_flow_gt: Int
  hourly_flow_gte: Int
  AND: [Cup_data_proc_flowScalarWhereInput!]
  OR: [Cup_data_proc_flowScalarWhereInput!]
  NOT: [Cup_data_proc_flowScalarWhereInput!]
}

type Cup_data_proc_flowSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_proc_flow
  updatedFields: [String!]
  previousValues: Cup_data_proc_flowPreviousValues
}

input Cup_data_proc_flowSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_proc_flowWhereInput
  AND: [Cup_data_proc_flowSubscriptionWhereInput!]
  OR: [Cup_data_proc_flowSubscriptionWhereInput!]
  NOT: [Cup_data_proc_flowSubscriptionWhereInput!]
}

input Cup_data_proc_flowUpdateInput {
  date: DateTime
  hourly_flow: Int
  mdate_row: Cup_data_proc_mdatesUpdateOneWithoutCup_data_proc_flowsInput
  user: UsersUpdateOneWithoutCup_data_proc_flowsInput
}

input Cup_data_proc_flowUpdateManyDataInput {
  date: DateTime
  hourly_flow: Int
}

input Cup_data_proc_flowUpdateManyMutationInput {
  date: DateTime
  hourly_flow: Int
}

input Cup_data_proc_flowUpdateManyWithoutMdate_rowInput {
  create: [Cup_data_proc_flowCreateWithoutMdate_rowInput!]
  delete: [Cup_data_proc_flowWhereUniqueInput!]
  connect: [Cup_data_proc_flowWhereUniqueInput!]
  set: [Cup_data_proc_flowWhereUniqueInput!]
  disconnect: [Cup_data_proc_flowWhereUniqueInput!]
  update: [Cup_data_proc_flowUpdateWithWhereUniqueWithoutMdate_rowInput!]
  upsert: [Cup_data_proc_flowUpsertWithWhereUniqueWithoutMdate_rowInput!]
  deleteMany: [Cup_data_proc_flowScalarWhereInput!]
  updateMany: [Cup_data_proc_flowUpdateManyWithWhereNestedInput!]
}

input Cup_data_proc_flowUpdateManyWithoutUserInput {
  create: [Cup_data_proc_flowCreateWithoutUserInput!]
  delete: [Cup_data_proc_flowWhereUniqueInput!]
  connect: [Cup_data_proc_flowWhereUniqueInput!]
  set: [Cup_data_proc_flowWhereUniqueInput!]
  disconnect: [Cup_data_proc_flowWhereUniqueInput!]
  update: [Cup_data_proc_flowUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [Cup_data_proc_flowUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [Cup_data_proc_flowScalarWhereInput!]
  updateMany: [Cup_data_proc_flowUpdateManyWithWhereNestedInput!]
}

input Cup_data_proc_flowUpdateManyWithWhereNestedInput {
  where: Cup_data_proc_flowScalarWhereInput!
  data: Cup_data_proc_flowUpdateManyDataInput!
}

input Cup_data_proc_flowUpdateWithoutMdate_rowDataInput {
  date: DateTime
  hourly_flow: Int
  user: UsersUpdateOneWithoutCup_data_proc_flowsInput
}

input Cup_data_proc_flowUpdateWithoutUserDataInput {
  date: DateTime
  hourly_flow: Int
  mdate_row: Cup_data_proc_mdatesUpdateOneWithoutCup_data_proc_flowsInput
}

input Cup_data_proc_flowUpdateWithWhereUniqueWithoutMdate_rowInput {
  where: Cup_data_proc_flowWhereUniqueInput!
  data: Cup_data_proc_flowUpdateWithoutMdate_rowDataInput!
}

input Cup_data_proc_flowUpdateWithWhereUniqueWithoutUserInput {
  where: Cup_data_proc_flowWhereUniqueInput!
  data: Cup_data_proc_flowUpdateWithoutUserDataInput!
}

input Cup_data_proc_flowUpsertWithWhereUniqueWithoutMdate_rowInput {
  where: Cup_data_proc_flowWhereUniqueInput!
  update: Cup_data_proc_flowUpdateWithoutMdate_rowDataInput!
  create: Cup_data_proc_flowCreateWithoutMdate_rowInput!
}

input Cup_data_proc_flowUpsertWithWhereUniqueWithoutUserInput {
  where: Cup_data_proc_flowWhereUniqueInput!
  update: Cup_data_proc_flowUpdateWithoutUserDataInput!
  create: Cup_data_proc_flowCreateWithoutUserInput!
}

input Cup_data_proc_flowWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  hourly_flow: Int
  hourly_flow_not: Int
  hourly_flow_in: [Int!]
  hourly_flow_not_in: [Int!]
  hourly_flow_lt: Int
  hourly_flow_lte: Int
  hourly_flow_gt: Int
  hourly_flow_gte: Int
  mdate_row: Cup_data_proc_mdatesWhereInput
  user: UsersWhereInput
  AND: [Cup_data_proc_flowWhereInput!]
  OR: [Cup_data_proc_flowWhereInput!]
  NOT: [Cup_data_proc_flowWhereInput!]
}

input Cup_data_proc_flowWhereUniqueInput {
  id: Int
}

type Cup_data_proc_mdates {
  id: Int!
  cup_data_man_mdates(where: Cup_data_man_mdatesWhereInput, orderBy: Cup_data_man_mdatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_man_mdates!]
  cup_data_proc_flows(where: Cup_data_proc_flowWhereInput, orderBy: Cup_data_proc_flowOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_proc_flow!]
  data_rejected: Boolean
  data_verified: Boolean!
  men_finish: DateTime!
  men_start: DateTime!
  reject: Cup_data_rejection
  reward_amount: Int
  user: Users
}

type Cup_data_proc_mdatesConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_proc_mdatesEdge]!
  aggregate: AggregateCup_data_proc_mdates!
}

input Cup_data_proc_mdatesCreateInput {
  id: Int
  cup_data_man_mdates: Cup_data_man_mdatesCreateManyWithoutMdate_rowInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean!
  men_finish: DateTime!
  men_start: DateTime!
  reject: Cup_data_rejectionCreateOneWithoutCup_data_proc_mdatesInput
  reward_amount: Int
  user: UsersCreateOneWithoutCup_data_proc_mdatesInput
}

input Cup_data_proc_mdatesCreateManyWithoutRejectInput {
  create: [Cup_data_proc_mdatesCreateWithoutRejectInput!]
  connect: [Cup_data_proc_mdatesWhereUniqueInput!]
}

input Cup_data_proc_mdatesCreateManyWithoutUserInput {
  create: [Cup_data_proc_mdatesCreateWithoutUserInput!]
  connect: [Cup_data_proc_mdatesWhereUniqueInput!]
}

input Cup_data_proc_mdatesCreateOneWithoutCup_data_man_mdatesInput {
  create: Cup_data_proc_mdatesCreateWithoutCup_data_man_mdatesInput
  connect: Cup_data_proc_mdatesWhereUniqueInput
}

input Cup_data_proc_mdatesCreateOneWithoutCup_data_proc_flowsInput {
  create: Cup_data_proc_mdatesCreateWithoutCup_data_proc_flowsInput
  connect: Cup_data_proc_mdatesWhereUniqueInput
}

input Cup_data_proc_mdatesCreateWithoutCup_data_man_mdatesInput {
  id: Int
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean!
  men_finish: DateTime!
  men_start: DateTime!
  reject: Cup_data_rejectionCreateOneWithoutCup_data_proc_mdatesInput
  reward_amount: Int
  user: UsersCreateOneWithoutCup_data_proc_mdatesInput
}

input Cup_data_proc_mdatesCreateWithoutCup_data_proc_flowsInput {
  id: Int
  cup_data_man_mdates: Cup_data_man_mdatesCreateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean!
  men_finish: DateTime!
  men_start: DateTime!
  reject: Cup_data_rejectionCreateOneWithoutCup_data_proc_mdatesInput
  reward_amount: Int
  user: UsersCreateOneWithoutCup_data_proc_mdatesInput
}

input Cup_data_proc_mdatesCreateWithoutRejectInput {
  id: Int
  cup_data_man_mdates: Cup_data_man_mdatesCreateManyWithoutMdate_rowInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean!
  men_finish: DateTime!
  men_start: DateTime!
  reward_amount: Int
  user: UsersCreateOneWithoutCup_data_proc_mdatesInput
}

input Cup_data_proc_mdatesCreateWithoutUserInput {
  id: Int
  cup_data_man_mdates: Cup_data_man_mdatesCreateManyWithoutMdate_rowInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean!
  men_finish: DateTime!
  men_start: DateTime!
  reject: Cup_data_rejectionCreateOneWithoutCup_data_proc_mdatesInput
  reward_amount: Int
}

type Cup_data_proc_mdatesEdge {
  node: Cup_data_proc_mdates!
  cursor: String!
}

enum Cup_data_proc_mdatesOrderByInput {
  id_ASC
  id_DESC
  data_rejected_ASC
  data_rejected_DESC
  data_verified_ASC
  data_verified_DESC
  men_finish_ASC
  men_finish_DESC
  men_start_ASC
  men_start_DESC
  reward_amount_ASC
  reward_amount_DESC
}

type Cup_data_proc_mdatesPreviousValues {
  id: Int!
  data_rejected: Boolean
  data_verified: Boolean!
  men_finish: DateTime!
  men_start: DateTime!
  reward_amount: Int
}

input Cup_data_proc_mdatesScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  data_rejected: Boolean
  data_rejected_not: Boolean
  data_verified: Boolean
  data_verified_not: Boolean
  men_finish: DateTime
  men_finish_not: DateTime
  men_finish_in: [DateTime!]
  men_finish_not_in: [DateTime!]
  men_finish_lt: DateTime
  men_finish_lte: DateTime
  men_finish_gt: DateTime
  men_finish_gte: DateTime
  men_start: DateTime
  men_start_not: DateTime
  men_start_in: [DateTime!]
  men_start_not_in: [DateTime!]
  men_start_lt: DateTime
  men_start_lte: DateTime
  men_start_gt: DateTime
  men_start_gte: DateTime
  reward_amount: Int
  reward_amount_not: Int
  reward_amount_in: [Int!]
  reward_amount_not_in: [Int!]
  reward_amount_lt: Int
  reward_amount_lte: Int
  reward_amount_gt: Int
  reward_amount_gte: Int
  AND: [Cup_data_proc_mdatesScalarWhereInput!]
  OR: [Cup_data_proc_mdatesScalarWhereInput!]
  NOT: [Cup_data_proc_mdatesScalarWhereInput!]
}

type Cup_data_proc_mdatesSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_proc_mdates
  updatedFields: [String!]
  previousValues: Cup_data_proc_mdatesPreviousValues
}

input Cup_data_proc_mdatesSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_proc_mdatesWhereInput
  AND: [Cup_data_proc_mdatesSubscriptionWhereInput!]
  OR: [Cup_data_proc_mdatesSubscriptionWhereInput!]
  NOT: [Cup_data_proc_mdatesSubscriptionWhereInput!]
}

input Cup_data_proc_mdatesUpdateInput {
  cup_data_man_mdates: Cup_data_man_mdatesUpdateManyWithoutMdate_rowInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean
  men_finish: DateTime
  men_start: DateTime
  reject: Cup_data_rejectionUpdateOneWithoutCup_data_proc_mdatesInput
  reward_amount: Int
  user: UsersUpdateOneWithoutCup_data_proc_mdatesInput
}

input Cup_data_proc_mdatesUpdateManyDataInput {
  data_rejected: Boolean
  data_verified: Boolean
  men_finish: DateTime
  men_start: DateTime
  reward_amount: Int
}

input Cup_data_proc_mdatesUpdateManyMutationInput {
  data_rejected: Boolean
  data_verified: Boolean
  men_finish: DateTime
  men_start: DateTime
  reward_amount: Int
}

input Cup_data_proc_mdatesUpdateManyWithoutRejectInput {
  create: [Cup_data_proc_mdatesCreateWithoutRejectInput!]
  delete: [Cup_data_proc_mdatesWhereUniqueInput!]
  connect: [Cup_data_proc_mdatesWhereUniqueInput!]
  set: [Cup_data_proc_mdatesWhereUniqueInput!]
  disconnect: [Cup_data_proc_mdatesWhereUniqueInput!]
  update: [Cup_data_proc_mdatesUpdateWithWhereUniqueWithoutRejectInput!]
  upsert: [Cup_data_proc_mdatesUpsertWithWhereUniqueWithoutRejectInput!]
  deleteMany: [Cup_data_proc_mdatesScalarWhereInput!]
  updateMany: [Cup_data_proc_mdatesUpdateManyWithWhereNestedInput!]
}

input Cup_data_proc_mdatesUpdateManyWithoutUserInput {
  create: [Cup_data_proc_mdatesCreateWithoutUserInput!]
  delete: [Cup_data_proc_mdatesWhereUniqueInput!]
  connect: [Cup_data_proc_mdatesWhereUniqueInput!]
  set: [Cup_data_proc_mdatesWhereUniqueInput!]
  disconnect: [Cup_data_proc_mdatesWhereUniqueInput!]
  update: [Cup_data_proc_mdatesUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [Cup_data_proc_mdatesUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [Cup_data_proc_mdatesScalarWhereInput!]
  updateMany: [Cup_data_proc_mdatesUpdateManyWithWhereNestedInput!]
}

input Cup_data_proc_mdatesUpdateManyWithWhereNestedInput {
  where: Cup_data_proc_mdatesScalarWhereInput!
  data: Cup_data_proc_mdatesUpdateManyDataInput!
}

input Cup_data_proc_mdatesUpdateOneWithoutCup_data_man_mdatesInput {
  create: Cup_data_proc_mdatesCreateWithoutCup_data_man_mdatesInput
  update: Cup_data_proc_mdatesUpdateWithoutCup_data_man_mdatesDataInput
  upsert: Cup_data_proc_mdatesUpsertWithoutCup_data_man_mdatesInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_data_proc_mdatesWhereUniqueInput
}

input Cup_data_proc_mdatesUpdateOneWithoutCup_data_proc_flowsInput {
  create: Cup_data_proc_mdatesCreateWithoutCup_data_proc_flowsInput
  update: Cup_data_proc_mdatesUpdateWithoutCup_data_proc_flowsDataInput
  upsert: Cup_data_proc_mdatesUpsertWithoutCup_data_proc_flowsInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_data_proc_mdatesWhereUniqueInput
}

input Cup_data_proc_mdatesUpdateWithoutCup_data_man_mdatesDataInput {
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean
  men_finish: DateTime
  men_start: DateTime
  reject: Cup_data_rejectionUpdateOneWithoutCup_data_proc_mdatesInput
  reward_amount: Int
  user: UsersUpdateOneWithoutCup_data_proc_mdatesInput
}

input Cup_data_proc_mdatesUpdateWithoutCup_data_proc_flowsDataInput {
  cup_data_man_mdates: Cup_data_man_mdatesUpdateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean
  men_finish: DateTime
  men_start: DateTime
  reject: Cup_data_rejectionUpdateOneWithoutCup_data_proc_mdatesInput
  reward_amount: Int
  user: UsersUpdateOneWithoutCup_data_proc_mdatesInput
}

input Cup_data_proc_mdatesUpdateWithoutRejectDataInput {
  cup_data_man_mdates: Cup_data_man_mdatesUpdateManyWithoutMdate_rowInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean
  men_finish: DateTime
  men_start: DateTime
  reward_amount: Int
  user: UsersUpdateOneWithoutCup_data_proc_mdatesInput
}

input Cup_data_proc_mdatesUpdateWithoutUserDataInput {
  cup_data_man_mdates: Cup_data_man_mdatesUpdateManyWithoutMdate_rowInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutMdate_rowInput
  data_rejected: Boolean
  data_verified: Boolean
  men_finish: DateTime
  men_start: DateTime
  reject: Cup_data_rejectionUpdateOneWithoutCup_data_proc_mdatesInput
  reward_amount: Int
}

input Cup_data_proc_mdatesUpdateWithWhereUniqueWithoutRejectInput {
  where: Cup_data_proc_mdatesWhereUniqueInput!
  data: Cup_data_proc_mdatesUpdateWithoutRejectDataInput!
}

input Cup_data_proc_mdatesUpdateWithWhereUniqueWithoutUserInput {
  where: Cup_data_proc_mdatesWhereUniqueInput!
  data: Cup_data_proc_mdatesUpdateWithoutUserDataInput!
}

input Cup_data_proc_mdatesUpsertWithoutCup_data_man_mdatesInput {
  update: Cup_data_proc_mdatesUpdateWithoutCup_data_man_mdatesDataInput!
  create: Cup_data_proc_mdatesCreateWithoutCup_data_man_mdatesInput!
}

input Cup_data_proc_mdatesUpsertWithoutCup_data_proc_flowsInput {
  update: Cup_data_proc_mdatesUpdateWithoutCup_data_proc_flowsDataInput!
  create: Cup_data_proc_mdatesCreateWithoutCup_data_proc_flowsInput!
}

input Cup_data_proc_mdatesUpsertWithWhereUniqueWithoutRejectInput {
  where: Cup_data_proc_mdatesWhereUniqueInput!
  update: Cup_data_proc_mdatesUpdateWithoutRejectDataInput!
  create: Cup_data_proc_mdatesCreateWithoutRejectInput!
}

input Cup_data_proc_mdatesUpsertWithWhereUniqueWithoutUserInput {
  where: Cup_data_proc_mdatesWhereUniqueInput!
  update: Cup_data_proc_mdatesUpdateWithoutUserDataInput!
  create: Cup_data_proc_mdatesCreateWithoutUserInput!
}

input Cup_data_proc_mdatesWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cup_data_man_mdates_every: Cup_data_man_mdatesWhereInput
  cup_data_man_mdates_some: Cup_data_man_mdatesWhereInput
  cup_data_man_mdates_none: Cup_data_man_mdatesWhereInput
  cup_data_proc_flows_every: Cup_data_proc_flowWhereInput
  cup_data_proc_flows_some: Cup_data_proc_flowWhereInput
  cup_data_proc_flows_none: Cup_data_proc_flowWhereInput
  data_rejected: Boolean
  data_rejected_not: Boolean
  data_verified: Boolean
  data_verified_not: Boolean
  men_finish: DateTime
  men_finish_not: DateTime
  men_finish_in: [DateTime!]
  men_finish_not_in: [DateTime!]
  men_finish_lt: DateTime
  men_finish_lte: DateTime
  men_finish_gt: DateTime
  men_finish_gte: DateTime
  men_start: DateTime
  men_start_not: DateTime
  men_start_in: [DateTime!]
  men_start_not_in: [DateTime!]
  men_start_lt: DateTime
  men_start_lte: DateTime
  men_start_gt: DateTime
  men_start_gte: DateTime
  reject: Cup_data_rejectionWhereInput
  reward_amount: Int
  reward_amount_not: Int
  reward_amount_in: [Int!]
  reward_amount_not_in: [Int!]
  reward_amount_lt: Int
  reward_amount_lte: Int
  reward_amount_gt: Int
  reward_amount_gte: Int
  user: UsersWhereInput
  AND: [Cup_data_proc_mdatesWhereInput!]
  OR: [Cup_data_proc_mdatesWhereInput!]
  NOT: [Cup_data_proc_mdatesWhereInput!]
}

input Cup_data_proc_mdatesWhereUniqueInput {
  id: Int
}

type Cup_data_proc_volume {
  id: Int!
  confidence_l: Int
  confidence_r: Int
  cup_data_row: Cup_data
  in_vitro: Boolean!
  volume: Int
  volume_adj: Int
  volume_l: Int
  volume_r: Int
}

type Cup_data_proc_volumeConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_proc_volumeEdge]!
  aggregate: AggregateCup_data_proc_volume!
}

input Cup_data_proc_volumeCreateInput {
  id: Int
  confidence_l: Int
  confidence_r: Int
  cup_data_row: Cup_dataCreateOneWithoutCup_data_proc_volumesInput
  in_vitro: Boolean!
  volume: Int
  volume_adj: Int
  volume_l: Int
  volume_r: Int
}

input Cup_data_proc_volumeCreateManyWithoutCup_data_rowInput {
  create: [Cup_data_proc_volumeCreateWithoutCup_data_rowInput!]
  connect: [Cup_data_proc_volumeWhereUniqueInput!]
}

input Cup_data_proc_volumeCreateWithoutCup_data_rowInput {
  id: Int
  confidence_l: Int
  confidence_r: Int
  in_vitro: Boolean!
  volume: Int
  volume_adj: Int
  volume_l: Int
  volume_r: Int
}

type Cup_data_proc_volumeEdge {
  node: Cup_data_proc_volume!
  cursor: String!
}

enum Cup_data_proc_volumeOrderByInput {
  id_ASC
  id_DESC
  confidence_l_ASC
  confidence_l_DESC
  confidence_r_ASC
  confidence_r_DESC
  in_vitro_ASC
  in_vitro_DESC
  volume_ASC
  volume_DESC
  volume_adj_ASC
  volume_adj_DESC
  volume_l_ASC
  volume_l_DESC
  volume_r_ASC
  volume_r_DESC
}

type Cup_data_proc_volumePreviousValues {
  id: Int!
  confidence_l: Int
  confidence_r: Int
  in_vitro: Boolean!
  volume: Int
  volume_adj: Int
  volume_l: Int
  volume_r: Int
}

input Cup_data_proc_volumeScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  confidence_l: Int
  confidence_l_not: Int
  confidence_l_in: [Int!]
  confidence_l_not_in: [Int!]
  confidence_l_lt: Int
  confidence_l_lte: Int
  confidence_l_gt: Int
  confidence_l_gte: Int
  confidence_r: Int
  confidence_r_not: Int
  confidence_r_in: [Int!]
  confidence_r_not_in: [Int!]
  confidence_r_lt: Int
  confidence_r_lte: Int
  confidence_r_gt: Int
  confidence_r_gte: Int
  in_vitro: Boolean
  in_vitro_not: Boolean
  volume: Int
  volume_not: Int
  volume_in: [Int!]
  volume_not_in: [Int!]
  volume_lt: Int
  volume_lte: Int
  volume_gt: Int
  volume_gte: Int
  volume_adj: Int
  volume_adj_not: Int
  volume_adj_in: [Int!]
  volume_adj_not_in: [Int!]
  volume_adj_lt: Int
  volume_adj_lte: Int
  volume_adj_gt: Int
  volume_adj_gte: Int
  volume_l: Int
  volume_l_not: Int
  volume_l_in: [Int!]
  volume_l_not_in: [Int!]
  volume_l_lt: Int
  volume_l_lte: Int
  volume_l_gt: Int
  volume_l_gte: Int
  volume_r: Int
  volume_r_not: Int
  volume_r_in: [Int!]
  volume_r_not_in: [Int!]
  volume_r_lt: Int
  volume_r_lte: Int
  volume_r_gt: Int
  volume_r_gte: Int
  AND: [Cup_data_proc_volumeScalarWhereInput!]
  OR: [Cup_data_proc_volumeScalarWhereInput!]
  NOT: [Cup_data_proc_volumeScalarWhereInput!]
}

type Cup_data_proc_volumeSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_proc_volume
  updatedFields: [String!]
  previousValues: Cup_data_proc_volumePreviousValues
}

input Cup_data_proc_volumeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_proc_volumeWhereInput
  AND: [Cup_data_proc_volumeSubscriptionWhereInput!]
  OR: [Cup_data_proc_volumeSubscriptionWhereInput!]
  NOT: [Cup_data_proc_volumeSubscriptionWhereInput!]
}

input Cup_data_proc_volumeUpdateInput {
  confidence_l: Int
  confidence_r: Int
  cup_data_row: Cup_dataUpdateOneWithoutCup_data_proc_volumesInput
  in_vitro: Boolean
  volume: Int
  volume_adj: Int
  volume_l: Int
  volume_r: Int
}

input Cup_data_proc_volumeUpdateManyDataInput {
  confidence_l: Int
  confidence_r: Int
  in_vitro: Boolean
  volume: Int
  volume_adj: Int
  volume_l: Int
  volume_r: Int
}

input Cup_data_proc_volumeUpdateManyMutationInput {
  confidence_l: Int
  confidence_r: Int
  in_vitro: Boolean
  volume: Int
  volume_adj: Int
  volume_l: Int
  volume_r: Int
}

input Cup_data_proc_volumeUpdateManyWithoutCup_data_rowInput {
  create: [Cup_data_proc_volumeCreateWithoutCup_data_rowInput!]
  delete: [Cup_data_proc_volumeWhereUniqueInput!]
  connect: [Cup_data_proc_volumeWhereUniqueInput!]
  set: [Cup_data_proc_volumeWhereUniqueInput!]
  disconnect: [Cup_data_proc_volumeWhereUniqueInput!]
  update: [Cup_data_proc_volumeUpdateWithWhereUniqueWithoutCup_data_rowInput!]
  upsert: [Cup_data_proc_volumeUpsertWithWhereUniqueWithoutCup_data_rowInput!]
  deleteMany: [Cup_data_proc_volumeScalarWhereInput!]
  updateMany: [Cup_data_proc_volumeUpdateManyWithWhereNestedInput!]
}

input Cup_data_proc_volumeUpdateManyWithWhereNestedInput {
  where: Cup_data_proc_volumeScalarWhereInput!
  data: Cup_data_proc_volumeUpdateManyDataInput!
}

input Cup_data_proc_volumeUpdateWithoutCup_data_rowDataInput {
  confidence_l: Int
  confidence_r: Int
  in_vitro: Boolean
  volume: Int
  volume_adj: Int
  volume_l: Int
  volume_r: Int
}

input Cup_data_proc_volumeUpdateWithWhereUniqueWithoutCup_data_rowInput {
  where: Cup_data_proc_volumeWhereUniqueInput!
  data: Cup_data_proc_volumeUpdateWithoutCup_data_rowDataInput!
}

input Cup_data_proc_volumeUpsertWithWhereUniqueWithoutCup_data_rowInput {
  where: Cup_data_proc_volumeWhereUniqueInput!
  update: Cup_data_proc_volumeUpdateWithoutCup_data_rowDataInput!
  create: Cup_data_proc_volumeCreateWithoutCup_data_rowInput!
}

input Cup_data_proc_volumeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  confidence_l: Int
  confidence_l_not: Int
  confidence_l_in: [Int!]
  confidence_l_not_in: [Int!]
  confidence_l_lt: Int
  confidence_l_lte: Int
  confidence_l_gt: Int
  confidence_l_gte: Int
  confidence_r: Int
  confidence_r_not: Int
  confidence_r_in: [Int!]
  confidence_r_not_in: [Int!]
  confidence_r_lt: Int
  confidence_r_lte: Int
  confidence_r_gt: Int
  confidence_r_gte: Int
  cup_data_row: Cup_dataWhereInput
  in_vitro: Boolean
  in_vitro_not: Boolean
  volume: Int
  volume_not: Int
  volume_in: [Int!]
  volume_not_in: [Int!]
  volume_lt: Int
  volume_lte: Int
  volume_gt: Int
  volume_gte: Int
  volume_adj: Int
  volume_adj_not: Int
  volume_adj_in: [Int!]
  volume_adj_not_in: [Int!]
  volume_adj_lt: Int
  volume_adj_lte: Int
  volume_adj_gt: Int
  volume_adj_gte: Int
  volume_l: Int
  volume_l_not: Int
  volume_l_in: [Int!]
  volume_l_not_in: [Int!]
  volume_l_lt: Int
  volume_l_lte: Int
  volume_l_gt: Int
  volume_l_gte: Int
  volume_r: Int
  volume_r_not: Int
  volume_r_in: [Int!]
  volume_r_not_in: [Int!]
  volume_r_lt: Int
  volume_r_lte: Int
  volume_r_gt: Int
  volume_r_gte: Int
  AND: [Cup_data_proc_volumeWhereInput!]
  OR: [Cup_data_proc_volumeWhereInput!]
  NOT: [Cup_data_proc_volumeWhereInput!]
}

input Cup_data_proc_volumeWhereUniqueInput {
  id: Int
}

type Cup_data_qa_response {
  id: Int!
  answer: Cup_data_answer
  qa_date: DateTime!
  question: Cup_data_question
  user: Users
}

type Cup_data_qa_responseConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_qa_responseEdge]!
  aggregate: AggregateCup_data_qa_response!
}

input Cup_data_qa_responseCreateInput {
  id: Int
  answer: Cup_data_answerCreateOneWithoutCup_data_qa_responsesInput
  qa_date: DateTime!
  question: Cup_data_questionCreateOneWithoutCup_data_qa_responsesInput
  user: UsersCreateOneWithoutCup_data_qa_responsesInput
}

input Cup_data_qa_responseCreateManyWithoutAnswerInput {
  create: [Cup_data_qa_responseCreateWithoutAnswerInput!]
  connect: [Cup_data_qa_responseWhereUniqueInput!]
}

input Cup_data_qa_responseCreateManyWithoutQuestionInput {
  create: [Cup_data_qa_responseCreateWithoutQuestionInput!]
  connect: [Cup_data_qa_responseWhereUniqueInput!]
}

input Cup_data_qa_responseCreateManyWithoutUserInput {
  create: [Cup_data_qa_responseCreateWithoutUserInput!]
  connect: [Cup_data_qa_responseWhereUniqueInput!]
}

input Cup_data_qa_responseCreateWithoutAnswerInput {
  id: Int
  qa_date: DateTime!
  question: Cup_data_questionCreateOneWithoutCup_data_qa_responsesInput
  user: UsersCreateOneWithoutCup_data_qa_responsesInput
}

input Cup_data_qa_responseCreateWithoutQuestionInput {
  id: Int
  answer: Cup_data_answerCreateOneWithoutCup_data_qa_responsesInput
  qa_date: DateTime!
  user: UsersCreateOneWithoutCup_data_qa_responsesInput
}

input Cup_data_qa_responseCreateWithoutUserInput {
  id: Int
  answer: Cup_data_answerCreateOneWithoutCup_data_qa_responsesInput
  qa_date: DateTime!
  question: Cup_data_questionCreateOneWithoutCup_data_qa_responsesInput
}

type Cup_data_qa_responseEdge {
  node: Cup_data_qa_response!
  cursor: String!
}

enum Cup_data_qa_responseOrderByInput {
  id_ASC
  id_DESC
  qa_date_ASC
  qa_date_DESC
}

type Cup_data_qa_responsePreviousValues {
  id: Int!
  qa_date: DateTime!
}

input Cup_data_qa_responseScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  qa_date: DateTime
  qa_date_not: DateTime
  qa_date_in: [DateTime!]
  qa_date_not_in: [DateTime!]
  qa_date_lt: DateTime
  qa_date_lte: DateTime
  qa_date_gt: DateTime
  qa_date_gte: DateTime
  AND: [Cup_data_qa_responseScalarWhereInput!]
  OR: [Cup_data_qa_responseScalarWhereInput!]
  NOT: [Cup_data_qa_responseScalarWhereInput!]
}

type Cup_data_qa_responseSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_qa_response
  updatedFields: [String!]
  previousValues: Cup_data_qa_responsePreviousValues
}

input Cup_data_qa_responseSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_qa_responseWhereInput
  AND: [Cup_data_qa_responseSubscriptionWhereInput!]
  OR: [Cup_data_qa_responseSubscriptionWhereInput!]
  NOT: [Cup_data_qa_responseSubscriptionWhereInput!]
}

input Cup_data_qa_responseUpdateInput {
  answer: Cup_data_answerUpdateOneWithoutCup_data_qa_responsesInput
  qa_date: DateTime
  question: Cup_data_questionUpdateOneWithoutCup_data_qa_responsesInput
  user: UsersUpdateOneWithoutCup_data_qa_responsesInput
}

input Cup_data_qa_responseUpdateManyDataInput {
  qa_date: DateTime
}

input Cup_data_qa_responseUpdateManyMutationInput {
  qa_date: DateTime
}

input Cup_data_qa_responseUpdateManyWithoutAnswerInput {
  create: [Cup_data_qa_responseCreateWithoutAnswerInput!]
  delete: [Cup_data_qa_responseWhereUniqueInput!]
  connect: [Cup_data_qa_responseWhereUniqueInput!]
  set: [Cup_data_qa_responseWhereUniqueInput!]
  disconnect: [Cup_data_qa_responseWhereUniqueInput!]
  update: [Cup_data_qa_responseUpdateWithWhereUniqueWithoutAnswerInput!]
  upsert: [Cup_data_qa_responseUpsertWithWhereUniqueWithoutAnswerInput!]
  deleteMany: [Cup_data_qa_responseScalarWhereInput!]
  updateMany: [Cup_data_qa_responseUpdateManyWithWhereNestedInput!]
}

input Cup_data_qa_responseUpdateManyWithoutQuestionInput {
  create: [Cup_data_qa_responseCreateWithoutQuestionInput!]
  delete: [Cup_data_qa_responseWhereUniqueInput!]
  connect: [Cup_data_qa_responseWhereUniqueInput!]
  set: [Cup_data_qa_responseWhereUniqueInput!]
  disconnect: [Cup_data_qa_responseWhereUniqueInput!]
  update: [Cup_data_qa_responseUpdateWithWhereUniqueWithoutQuestionInput!]
  upsert: [Cup_data_qa_responseUpsertWithWhereUniqueWithoutQuestionInput!]
  deleteMany: [Cup_data_qa_responseScalarWhereInput!]
  updateMany: [Cup_data_qa_responseUpdateManyWithWhereNestedInput!]
}

input Cup_data_qa_responseUpdateManyWithoutUserInput {
  create: [Cup_data_qa_responseCreateWithoutUserInput!]
  delete: [Cup_data_qa_responseWhereUniqueInput!]
  connect: [Cup_data_qa_responseWhereUniqueInput!]
  set: [Cup_data_qa_responseWhereUniqueInput!]
  disconnect: [Cup_data_qa_responseWhereUniqueInput!]
  update: [Cup_data_qa_responseUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [Cup_data_qa_responseUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [Cup_data_qa_responseScalarWhereInput!]
  updateMany: [Cup_data_qa_responseUpdateManyWithWhereNestedInput!]
}

input Cup_data_qa_responseUpdateManyWithWhereNestedInput {
  where: Cup_data_qa_responseScalarWhereInput!
  data: Cup_data_qa_responseUpdateManyDataInput!
}

input Cup_data_qa_responseUpdateWithoutAnswerDataInput {
  qa_date: DateTime
  question: Cup_data_questionUpdateOneWithoutCup_data_qa_responsesInput
  user: UsersUpdateOneWithoutCup_data_qa_responsesInput
}

input Cup_data_qa_responseUpdateWithoutQuestionDataInput {
  answer: Cup_data_answerUpdateOneWithoutCup_data_qa_responsesInput
  qa_date: DateTime
  user: UsersUpdateOneWithoutCup_data_qa_responsesInput
}

input Cup_data_qa_responseUpdateWithoutUserDataInput {
  answer: Cup_data_answerUpdateOneWithoutCup_data_qa_responsesInput
  qa_date: DateTime
  question: Cup_data_questionUpdateOneWithoutCup_data_qa_responsesInput
}

input Cup_data_qa_responseUpdateWithWhereUniqueWithoutAnswerInput {
  where: Cup_data_qa_responseWhereUniqueInput!
  data: Cup_data_qa_responseUpdateWithoutAnswerDataInput!
}

input Cup_data_qa_responseUpdateWithWhereUniqueWithoutQuestionInput {
  where: Cup_data_qa_responseWhereUniqueInput!
  data: Cup_data_qa_responseUpdateWithoutQuestionDataInput!
}

input Cup_data_qa_responseUpdateWithWhereUniqueWithoutUserInput {
  where: Cup_data_qa_responseWhereUniqueInput!
  data: Cup_data_qa_responseUpdateWithoutUserDataInput!
}

input Cup_data_qa_responseUpsertWithWhereUniqueWithoutAnswerInput {
  where: Cup_data_qa_responseWhereUniqueInput!
  update: Cup_data_qa_responseUpdateWithoutAnswerDataInput!
  create: Cup_data_qa_responseCreateWithoutAnswerInput!
}

input Cup_data_qa_responseUpsertWithWhereUniqueWithoutQuestionInput {
  where: Cup_data_qa_responseWhereUniqueInput!
  update: Cup_data_qa_responseUpdateWithoutQuestionDataInput!
  create: Cup_data_qa_responseCreateWithoutQuestionInput!
}

input Cup_data_qa_responseUpsertWithWhereUniqueWithoutUserInput {
  where: Cup_data_qa_responseWhereUniqueInput!
  update: Cup_data_qa_responseUpdateWithoutUserDataInput!
  create: Cup_data_qa_responseCreateWithoutUserInput!
}

input Cup_data_qa_responseWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  answer: Cup_data_answerWhereInput
  qa_date: DateTime
  qa_date_not: DateTime
  qa_date_in: [DateTime!]
  qa_date_not_in: [DateTime!]
  qa_date_lt: DateTime
  qa_date_lte: DateTime
  qa_date_gt: DateTime
  qa_date_gte: DateTime
  question: Cup_data_questionWhereInput
  user: UsersWhereInput
  AND: [Cup_data_qa_responseWhereInput!]
  OR: [Cup_data_qa_responseWhereInput!]
  NOT: [Cup_data_qa_responseWhereInput!]
}

input Cup_data_qa_responseWhereUniqueInput {
  id: Int
}

type Cup_data_question {
  id: Int!
  cup_data_answers(where: Cup_data_answerWhereInput, orderBy: Cup_data_answerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_answer!]
  cup_data_qa_responses(where: Cup_data_qa_responseWhereInput, orderBy: Cup_data_qa_responseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_qa_response!]
  question_text: String!
}

type Cup_data_questionConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_questionEdge]!
  aggregate: AggregateCup_data_question!
}

input Cup_data_questionCreateInput {
  id: Int
  cup_data_answers: Cup_data_answerCreateManyWithoutQuestionInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutQuestionInput
  question_text: String!
}

input Cup_data_questionCreateOneWithoutCup_data_answersInput {
  create: Cup_data_questionCreateWithoutCup_data_answersInput
  connect: Cup_data_questionWhereUniqueInput
}

input Cup_data_questionCreateOneWithoutCup_data_qa_responsesInput {
  create: Cup_data_questionCreateWithoutCup_data_qa_responsesInput
  connect: Cup_data_questionWhereUniqueInput
}

input Cup_data_questionCreateWithoutCup_data_answersInput {
  id: Int
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutQuestionInput
  question_text: String!
}

input Cup_data_questionCreateWithoutCup_data_qa_responsesInput {
  id: Int
  cup_data_answers: Cup_data_answerCreateManyWithoutQuestionInput
  question_text: String!
}

type Cup_data_questionEdge {
  node: Cup_data_question!
  cursor: String!
}

enum Cup_data_questionOrderByInput {
  id_ASC
  id_DESC
  question_text_ASC
  question_text_DESC
}

type Cup_data_questionPreviousValues {
  id: Int!
  question_text: String!
}

type Cup_data_questionSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_question
  updatedFields: [String!]
  previousValues: Cup_data_questionPreviousValues
}

input Cup_data_questionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_questionWhereInput
  AND: [Cup_data_questionSubscriptionWhereInput!]
  OR: [Cup_data_questionSubscriptionWhereInput!]
  NOT: [Cup_data_questionSubscriptionWhereInput!]
}

input Cup_data_questionUpdateInput {
  cup_data_answers: Cup_data_answerUpdateManyWithoutQuestionInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutQuestionInput
  question_text: String
}

input Cup_data_questionUpdateManyMutationInput {
  question_text: String
}

input Cup_data_questionUpdateOneWithoutCup_data_answersInput {
  create: Cup_data_questionCreateWithoutCup_data_answersInput
  update: Cup_data_questionUpdateWithoutCup_data_answersDataInput
  upsert: Cup_data_questionUpsertWithoutCup_data_answersInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_data_questionWhereUniqueInput
}

input Cup_data_questionUpdateOneWithoutCup_data_qa_responsesInput {
  create: Cup_data_questionCreateWithoutCup_data_qa_responsesInput
  update: Cup_data_questionUpdateWithoutCup_data_qa_responsesDataInput
  upsert: Cup_data_questionUpsertWithoutCup_data_qa_responsesInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_data_questionWhereUniqueInput
}

input Cup_data_questionUpdateWithoutCup_data_answersDataInput {
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutQuestionInput
  question_text: String
}

input Cup_data_questionUpdateWithoutCup_data_qa_responsesDataInput {
  cup_data_answers: Cup_data_answerUpdateManyWithoutQuestionInput
  question_text: String
}

input Cup_data_questionUpsertWithoutCup_data_answersInput {
  update: Cup_data_questionUpdateWithoutCup_data_answersDataInput!
  create: Cup_data_questionCreateWithoutCup_data_answersInput!
}

input Cup_data_questionUpsertWithoutCup_data_qa_responsesInput {
  update: Cup_data_questionUpdateWithoutCup_data_qa_responsesDataInput!
  create: Cup_data_questionCreateWithoutCup_data_qa_responsesInput!
}

input Cup_data_questionWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cup_data_answers_every: Cup_data_answerWhereInput
  cup_data_answers_some: Cup_data_answerWhereInput
  cup_data_answers_none: Cup_data_answerWhereInput
  cup_data_qa_responses_every: Cup_data_qa_responseWhereInput
  cup_data_qa_responses_some: Cup_data_qa_responseWhereInput
  cup_data_qa_responses_none: Cup_data_qa_responseWhereInput
  question_text: String
  question_text_not: String
  question_text_in: [String!]
  question_text_not_in: [String!]
  question_text_lt: String
  question_text_lte: String
  question_text_gt: String
  question_text_gte: String
  question_text_contains: String
  question_text_not_contains: String
  question_text_starts_with: String
  question_text_not_starts_with: String
  question_text_ends_with: String
  question_text_not_ends_with: String
  AND: [Cup_data_questionWhereInput!]
  OR: [Cup_data_questionWhereInput!]
  NOT: [Cup_data_questionWhereInput!]
}

input Cup_data_questionWhereUniqueInput {
  id: Int
}

type Cup_data_raw {
  id: Int!
  page_data: String!
  serial_number: Cup
}

type Cup_data_rawConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_rawEdge]!
  aggregate: AggregateCup_data_raw!
}

input Cup_data_rawCreateInput {
  id: Int
  page_data: String!
  serial_number: CupCreateOneWithoutCup_data_rawsInput
}

input Cup_data_rawCreateManyWithoutSerial_numberInput {
  create: [Cup_data_rawCreateWithoutSerial_numberInput!]
  connect: [Cup_data_rawWhereUniqueInput!]
}

input Cup_data_rawCreateWithoutSerial_numberInput {
  id: Int
  page_data: String!
}

type Cup_data_rawEdge {
  node: Cup_data_raw!
  cursor: String!
}

enum Cup_data_rawOrderByInput {
  id_ASC
  id_DESC
  page_data_ASC
  page_data_DESC
}

type Cup_data_rawPreviousValues {
  id: Int!
  page_data: String!
}

input Cup_data_rawScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  page_data: String
  page_data_not: String
  page_data_in: [String!]
  page_data_not_in: [String!]
  page_data_lt: String
  page_data_lte: String
  page_data_gt: String
  page_data_gte: String
  page_data_contains: String
  page_data_not_contains: String
  page_data_starts_with: String
  page_data_not_starts_with: String
  page_data_ends_with: String
  page_data_not_ends_with: String
  AND: [Cup_data_rawScalarWhereInput!]
  OR: [Cup_data_rawScalarWhereInput!]
  NOT: [Cup_data_rawScalarWhereInput!]
}

type Cup_data_rawSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_raw
  updatedFields: [String!]
  previousValues: Cup_data_rawPreviousValues
}

input Cup_data_rawSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_rawWhereInput
  AND: [Cup_data_rawSubscriptionWhereInput!]
  OR: [Cup_data_rawSubscriptionWhereInput!]
  NOT: [Cup_data_rawSubscriptionWhereInput!]
}

input Cup_data_rawUpdateInput {
  page_data: String
  serial_number: CupUpdateOneWithoutCup_data_rawsInput
}

input Cup_data_rawUpdateManyDataInput {
  page_data: String
}

input Cup_data_rawUpdateManyMutationInput {
  page_data: String
}

input Cup_data_rawUpdateManyWithoutSerial_numberInput {
  create: [Cup_data_rawCreateWithoutSerial_numberInput!]
  delete: [Cup_data_rawWhereUniqueInput!]
  connect: [Cup_data_rawWhereUniqueInput!]
  set: [Cup_data_rawWhereUniqueInput!]
  disconnect: [Cup_data_rawWhereUniqueInput!]
  update: [Cup_data_rawUpdateWithWhereUniqueWithoutSerial_numberInput!]
  upsert: [Cup_data_rawUpsertWithWhereUniqueWithoutSerial_numberInput!]
  deleteMany: [Cup_data_rawScalarWhereInput!]
  updateMany: [Cup_data_rawUpdateManyWithWhereNestedInput!]
}

input Cup_data_rawUpdateManyWithWhereNestedInput {
  where: Cup_data_rawScalarWhereInput!
  data: Cup_data_rawUpdateManyDataInput!
}

input Cup_data_rawUpdateWithoutSerial_numberDataInput {
  page_data: String
}

input Cup_data_rawUpdateWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_data_rawWhereUniqueInput!
  data: Cup_data_rawUpdateWithoutSerial_numberDataInput!
}

input Cup_data_rawUpsertWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_data_rawWhereUniqueInput!
  update: Cup_data_rawUpdateWithoutSerial_numberDataInput!
  create: Cup_data_rawCreateWithoutSerial_numberInput!
}

input Cup_data_rawWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  page_data: String
  page_data_not: String
  page_data_in: [String!]
  page_data_not_in: [String!]
  page_data_lt: String
  page_data_lte: String
  page_data_gt: String
  page_data_gte: String
  page_data_contains: String
  page_data_not_contains: String
  page_data_starts_with: String
  page_data_not_starts_with: String
  page_data_ends_with: String
  page_data_not_ends_with: String
  serial_number: CupWhereInput
  AND: [Cup_data_rawWhereInput!]
  OR: [Cup_data_rawWhereInput!]
  NOT: [Cup_data_rawWhereInput!]
}

input Cup_data_rawWhereUniqueInput {
  id: Int
}

type Cup_data_rejection {
  id: Int!
  cup_data_proc_mdates(where: Cup_data_proc_mdatesWhereInput, orderBy: Cup_data_proc_mdatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_proc_mdates!]
  rejection_description: String!
}

type Cup_data_rejectionConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_rejectionEdge]!
  aggregate: AggregateCup_data_rejection!
}

input Cup_data_rejectionCreateInput {
  id: Int
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutRejectInput
  rejection_description: String!
}

input Cup_data_rejectionCreateOneWithoutCup_data_proc_mdatesInput {
  create: Cup_data_rejectionCreateWithoutCup_data_proc_mdatesInput
  connect: Cup_data_rejectionWhereUniqueInput
}

input Cup_data_rejectionCreateWithoutCup_data_proc_mdatesInput {
  id: Int
  rejection_description: String!
}

type Cup_data_rejectionEdge {
  node: Cup_data_rejection!
  cursor: String!
}

enum Cup_data_rejectionOrderByInput {
  id_ASC
  id_DESC
  rejection_description_ASC
  rejection_description_DESC
}

type Cup_data_rejectionPreviousValues {
  id: Int!
  rejection_description: String!
}

type Cup_data_rejectionSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_rejection
  updatedFields: [String!]
  previousValues: Cup_data_rejectionPreviousValues
}

input Cup_data_rejectionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_rejectionWhereInput
  AND: [Cup_data_rejectionSubscriptionWhereInput!]
  OR: [Cup_data_rejectionSubscriptionWhereInput!]
  NOT: [Cup_data_rejectionSubscriptionWhereInput!]
}

input Cup_data_rejectionUpdateInput {
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutRejectInput
  rejection_description: String
}

input Cup_data_rejectionUpdateManyMutationInput {
  rejection_description: String
}

input Cup_data_rejectionUpdateOneWithoutCup_data_proc_mdatesInput {
  create: Cup_data_rejectionCreateWithoutCup_data_proc_mdatesInput
  update: Cup_data_rejectionUpdateWithoutCup_data_proc_mdatesDataInput
  upsert: Cup_data_rejectionUpsertWithoutCup_data_proc_mdatesInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_data_rejectionWhereUniqueInput
}

input Cup_data_rejectionUpdateWithoutCup_data_proc_mdatesDataInput {
  rejection_description: String
}

input Cup_data_rejectionUpsertWithoutCup_data_proc_mdatesInput {
  update: Cup_data_rejectionUpdateWithoutCup_data_proc_mdatesDataInput!
  create: Cup_data_rejectionCreateWithoutCup_data_proc_mdatesInput!
}

input Cup_data_rejectionWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cup_data_proc_mdates_every: Cup_data_proc_mdatesWhereInput
  cup_data_proc_mdates_some: Cup_data_proc_mdatesWhereInput
  cup_data_proc_mdates_none: Cup_data_proc_mdatesWhereInput
  rejection_description: String
  rejection_description_not: String
  rejection_description_in: [String!]
  rejection_description_not_in: [String!]
  rejection_description_lt: String
  rejection_description_lte: String
  rejection_description_gt: String
  rejection_description_gte: String
  rejection_description_contains: String
  rejection_description_not_contains: String
  rejection_description_starts_with: String
  rejection_description_not_starts_with: String
  rejection_description_ends_with: String
  rejection_description_not_ends_with: String
  AND: [Cup_data_rejectionWhereInput!]
  OR: [Cup_data_rejectionWhereInput!]
  NOT: [Cup_data_rejectionWhereInput!]
}

input Cup_data_rejectionWhereUniqueInput {
  id: Int
}

type Cup_data_user_remove {
  id: Int!
  change_time: DateTime!
  explain: Cup_data_user_remove_explain
  serial_number: Cup
  user: Users
}

type Cup_data_user_remove_explain {
  id: Int!
  cup_data_user_removes(where: Cup_data_user_removeWhereInput, orderBy: Cup_data_user_removeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_user_remove!]
  explain: String!
}

type Cup_data_user_remove_explainConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_user_remove_explainEdge]!
  aggregate: AggregateCup_data_user_remove_explain!
}

input Cup_data_user_remove_explainCreateInput {
  id: Int
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutExplainInput
  explain: String!
}

input Cup_data_user_remove_explainCreateOneWithoutCup_data_user_removesInput {
  create: Cup_data_user_remove_explainCreateWithoutCup_data_user_removesInput
  connect: Cup_data_user_remove_explainWhereUniqueInput
}

input Cup_data_user_remove_explainCreateWithoutCup_data_user_removesInput {
  id: Int
  explain: String!
}

type Cup_data_user_remove_explainEdge {
  node: Cup_data_user_remove_explain!
  cursor: String!
}

enum Cup_data_user_remove_explainOrderByInput {
  id_ASC
  id_DESC
  explain_ASC
  explain_DESC
}

type Cup_data_user_remove_explainPreviousValues {
  id: Int!
  explain: String!
}

type Cup_data_user_remove_explainSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_user_remove_explain
  updatedFields: [String!]
  previousValues: Cup_data_user_remove_explainPreviousValues
}

input Cup_data_user_remove_explainSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_user_remove_explainWhereInput
  AND: [Cup_data_user_remove_explainSubscriptionWhereInput!]
  OR: [Cup_data_user_remove_explainSubscriptionWhereInput!]
  NOT: [Cup_data_user_remove_explainSubscriptionWhereInput!]
}

input Cup_data_user_remove_explainUpdateInput {
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutExplainInput
  explain: String
}

input Cup_data_user_remove_explainUpdateManyMutationInput {
  explain: String
}

input Cup_data_user_remove_explainUpdateOneWithoutCup_data_user_removesInput {
  create: Cup_data_user_remove_explainCreateWithoutCup_data_user_removesInput
  update: Cup_data_user_remove_explainUpdateWithoutCup_data_user_removesDataInput
  upsert: Cup_data_user_remove_explainUpsertWithoutCup_data_user_removesInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_data_user_remove_explainWhereUniqueInput
}

input Cup_data_user_remove_explainUpdateWithoutCup_data_user_removesDataInput {
  explain: String
}

input Cup_data_user_remove_explainUpsertWithoutCup_data_user_removesInput {
  update: Cup_data_user_remove_explainUpdateWithoutCup_data_user_removesDataInput!
  create: Cup_data_user_remove_explainCreateWithoutCup_data_user_removesInput!
}

input Cup_data_user_remove_explainWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cup_data_user_removes_every: Cup_data_user_removeWhereInput
  cup_data_user_removes_some: Cup_data_user_removeWhereInput
  cup_data_user_removes_none: Cup_data_user_removeWhereInput
  explain: String
  explain_not: String
  explain_in: [String!]
  explain_not_in: [String!]
  explain_lt: String
  explain_lte: String
  explain_gt: String
  explain_gte: String
  explain_contains: String
  explain_not_contains: String
  explain_starts_with: String
  explain_not_starts_with: String
  explain_ends_with: String
  explain_not_ends_with: String
  AND: [Cup_data_user_remove_explainWhereInput!]
  OR: [Cup_data_user_remove_explainWhereInput!]
  NOT: [Cup_data_user_remove_explainWhereInput!]
}

input Cup_data_user_remove_explainWhereUniqueInput {
  id: Int
}

type Cup_data_user_removeConnection {
  pageInfo: PageInfo!
  edges: [Cup_data_user_removeEdge]!
  aggregate: AggregateCup_data_user_remove!
}

input Cup_data_user_removeCreateInput {
  id: Int
  change_time: DateTime!
  explain: Cup_data_user_remove_explainCreateOneWithoutCup_data_user_removesInput
  serial_number: CupCreateOneWithoutCup_data_user_removesInput
  user: UsersCreateOneWithoutCup_data_user_removesInput
}

input Cup_data_user_removeCreateManyWithoutExplainInput {
  create: [Cup_data_user_removeCreateWithoutExplainInput!]
  connect: [Cup_data_user_removeWhereUniqueInput!]
}

input Cup_data_user_removeCreateManyWithoutSerial_numberInput {
  create: [Cup_data_user_removeCreateWithoutSerial_numberInput!]
  connect: [Cup_data_user_removeWhereUniqueInput!]
}

input Cup_data_user_removeCreateManyWithoutUserInput {
  create: [Cup_data_user_removeCreateWithoutUserInput!]
  connect: [Cup_data_user_removeWhereUniqueInput!]
}

input Cup_data_user_removeCreateWithoutExplainInput {
  id: Int
  change_time: DateTime!
  serial_number: CupCreateOneWithoutCup_data_user_removesInput
  user: UsersCreateOneWithoutCup_data_user_removesInput
}

input Cup_data_user_removeCreateWithoutSerial_numberInput {
  id: Int
  change_time: DateTime!
  explain: Cup_data_user_remove_explainCreateOneWithoutCup_data_user_removesInput
  user: UsersCreateOneWithoutCup_data_user_removesInput
}

input Cup_data_user_removeCreateWithoutUserInput {
  id: Int
  change_time: DateTime!
  explain: Cup_data_user_remove_explainCreateOneWithoutCup_data_user_removesInput
  serial_number: CupCreateOneWithoutCup_data_user_removesInput
}

type Cup_data_user_removeEdge {
  node: Cup_data_user_remove!
  cursor: String!
}

enum Cup_data_user_removeOrderByInput {
  id_ASC
  id_DESC
  change_time_ASC
  change_time_DESC
}

type Cup_data_user_removePreviousValues {
  id: Int!
  change_time: DateTime!
}

input Cup_data_user_removeScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  change_time: DateTime
  change_time_not: DateTime
  change_time_in: [DateTime!]
  change_time_not_in: [DateTime!]
  change_time_lt: DateTime
  change_time_lte: DateTime
  change_time_gt: DateTime
  change_time_gte: DateTime
  AND: [Cup_data_user_removeScalarWhereInput!]
  OR: [Cup_data_user_removeScalarWhereInput!]
  NOT: [Cup_data_user_removeScalarWhereInput!]
}

type Cup_data_user_removeSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data_user_remove
  updatedFields: [String!]
  previousValues: Cup_data_user_removePreviousValues
}

input Cup_data_user_removeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_data_user_removeWhereInput
  AND: [Cup_data_user_removeSubscriptionWhereInput!]
  OR: [Cup_data_user_removeSubscriptionWhereInput!]
  NOT: [Cup_data_user_removeSubscriptionWhereInput!]
}

input Cup_data_user_removeUpdateInput {
  change_time: DateTime
  explain: Cup_data_user_remove_explainUpdateOneWithoutCup_data_user_removesInput
  serial_number: CupUpdateOneWithoutCup_data_user_removesInput
  user: UsersUpdateOneWithoutCup_data_user_removesInput
}

input Cup_data_user_removeUpdateManyDataInput {
  change_time: DateTime
}

input Cup_data_user_removeUpdateManyMutationInput {
  change_time: DateTime
}

input Cup_data_user_removeUpdateManyWithoutExplainInput {
  create: [Cup_data_user_removeCreateWithoutExplainInput!]
  delete: [Cup_data_user_removeWhereUniqueInput!]
  connect: [Cup_data_user_removeWhereUniqueInput!]
  set: [Cup_data_user_removeWhereUniqueInput!]
  disconnect: [Cup_data_user_removeWhereUniqueInput!]
  update: [Cup_data_user_removeUpdateWithWhereUniqueWithoutExplainInput!]
  upsert: [Cup_data_user_removeUpsertWithWhereUniqueWithoutExplainInput!]
  deleteMany: [Cup_data_user_removeScalarWhereInput!]
  updateMany: [Cup_data_user_removeUpdateManyWithWhereNestedInput!]
}

input Cup_data_user_removeUpdateManyWithoutSerial_numberInput {
  create: [Cup_data_user_removeCreateWithoutSerial_numberInput!]
  delete: [Cup_data_user_removeWhereUniqueInput!]
  connect: [Cup_data_user_removeWhereUniqueInput!]
  set: [Cup_data_user_removeWhereUniqueInput!]
  disconnect: [Cup_data_user_removeWhereUniqueInput!]
  update: [Cup_data_user_removeUpdateWithWhereUniqueWithoutSerial_numberInput!]
  upsert: [Cup_data_user_removeUpsertWithWhereUniqueWithoutSerial_numberInput!]
  deleteMany: [Cup_data_user_removeScalarWhereInput!]
  updateMany: [Cup_data_user_removeUpdateManyWithWhereNestedInput!]
}

input Cup_data_user_removeUpdateManyWithoutUserInput {
  create: [Cup_data_user_removeCreateWithoutUserInput!]
  delete: [Cup_data_user_removeWhereUniqueInput!]
  connect: [Cup_data_user_removeWhereUniqueInput!]
  set: [Cup_data_user_removeWhereUniqueInput!]
  disconnect: [Cup_data_user_removeWhereUniqueInput!]
  update: [Cup_data_user_removeUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [Cup_data_user_removeUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [Cup_data_user_removeScalarWhereInput!]
  updateMany: [Cup_data_user_removeUpdateManyWithWhereNestedInput!]
}

input Cup_data_user_removeUpdateManyWithWhereNestedInput {
  where: Cup_data_user_removeScalarWhereInput!
  data: Cup_data_user_removeUpdateManyDataInput!
}

input Cup_data_user_removeUpdateWithoutExplainDataInput {
  change_time: DateTime
  serial_number: CupUpdateOneWithoutCup_data_user_removesInput
  user: UsersUpdateOneWithoutCup_data_user_removesInput
}

input Cup_data_user_removeUpdateWithoutSerial_numberDataInput {
  change_time: DateTime
  explain: Cup_data_user_remove_explainUpdateOneWithoutCup_data_user_removesInput
  user: UsersUpdateOneWithoutCup_data_user_removesInput
}

input Cup_data_user_removeUpdateWithoutUserDataInput {
  change_time: DateTime
  explain: Cup_data_user_remove_explainUpdateOneWithoutCup_data_user_removesInput
  serial_number: CupUpdateOneWithoutCup_data_user_removesInput
}

input Cup_data_user_removeUpdateWithWhereUniqueWithoutExplainInput {
  where: Cup_data_user_removeWhereUniqueInput!
  data: Cup_data_user_removeUpdateWithoutExplainDataInput!
}

input Cup_data_user_removeUpdateWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_data_user_removeWhereUniqueInput!
  data: Cup_data_user_removeUpdateWithoutSerial_numberDataInput!
}

input Cup_data_user_removeUpdateWithWhereUniqueWithoutUserInput {
  where: Cup_data_user_removeWhereUniqueInput!
  data: Cup_data_user_removeUpdateWithoutUserDataInput!
}

input Cup_data_user_removeUpsertWithWhereUniqueWithoutExplainInput {
  where: Cup_data_user_removeWhereUniqueInput!
  update: Cup_data_user_removeUpdateWithoutExplainDataInput!
  create: Cup_data_user_removeCreateWithoutExplainInput!
}

input Cup_data_user_removeUpsertWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_data_user_removeWhereUniqueInput!
  update: Cup_data_user_removeUpdateWithoutSerial_numberDataInput!
  create: Cup_data_user_removeCreateWithoutSerial_numberInput!
}

input Cup_data_user_removeUpsertWithWhereUniqueWithoutUserInput {
  where: Cup_data_user_removeWhereUniqueInput!
  update: Cup_data_user_removeUpdateWithoutUserDataInput!
  create: Cup_data_user_removeCreateWithoutUserInput!
}

input Cup_data_user_removeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  change_time: DateTime
  change_time_not: DateTime
  change_time_in: [DateTime!]
  change_time_not_in: [DateTime!]
  change_time_lt: DateTime
  change_time_lte: DateTime
  change_time_gt: DateTime
  change_time_gte: DateTime
  explain: Cup_data_user_remove_explainWhereInput
  serial_number: CupWhereInput
  user: UsersWhereInput
  AND: [Cup_data_user_removeWhereInput!]
  OR: [Cup_data_user_removeWhereInput!]
  NOT: [Cup_data_user_removeWhereInput!]
}

input Cup_data_user_removeWhereUniqueInput {
  id: Int
}

type Cup_dataConnection {
  pageInfo: PageInfo!
  edges: [Cup_dataEdge]!
  aggregate: AggregateCup_data!
}

input Cup_dataCreateInput {
  id: Int
  battery: Int!
  calib_flag: Boolean!
  ch1: Int!
  ch10: Int!
  ch11: Int!
  ch12: Int!
  ch13: Int!
  ch14: Int!
  ch2: Int!
  ch3: Int!
  ch4: Int!
  ch5: Int!
  ch6: Int!
  ch7: Int!
  ch8: Int!
  ch9: Int!
  colour_b: Int!
  colour_c: Int!
  colour_g: Int!
  colour_r: Int!
  cup_data_colour_calcs: Cup_data_colour_calcCreateManyWithoutCup_data_rowInput
  cup_data_proc_volumes: Cup_data_proc_volumeCreateManyWithoutCup_data_rowInput
  date: DateTime!
  day: Int!
  hour: Int!
  line: Int!
  minute: Int!
  month: Int!
  page: Int!
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  serial_number: CupCreateOneWithoutCup_dataInput
  temperature: Int!
  x: Int!
  y: Int!
  year: Int!
  z: Int!
}

input Cup_dataCreateManyWithoutSerial_numberInput {
  create: [Cup_dataCreateWithoutSerial_numberInput!]
  connect: [Cup_dataWhereUniqueInput!]
}

input Cup_dataCreateOneWithoutCup_data_colour_calcsInput {
  create: Cup_dataCreateWithoutCup_data_colour_calcsInput
  connect: Cup_dataWhereUniqueInput
}

input Cup_dataCreateOneWithoutCup_data_proc_volumesInput {
  create: Cup_dataCreateWithoutCup_data_proc_volumesInput
  connect: Cup_dataWhereUniqueInput
}

input Cup_dataCreateWithoutCup_data_colour_calcsInput {
  id: Int
  battery: Int!
  calib_flag: Boolean!
  ch1: Int!
  ch10: Int!
  ch11: Int!
  ch12: Int!
  ch13: Int!
  ch14: Int!
  ch2: Int!
  ch3: Int!
  ch4: Int!
  ch5: Int!
  ch6: Int!
  ch7: Int!
  ch8: Int!
  ch9: Int!
  colour_b: Int!
  colour_c: Int!
  colour_g: Int!
  colour_r: Int!
  cup_data_proc_volumes: Cup_data_proc_volumeCreateManyWithoutCup_data_rowInput
  date: DateTime!
  day: Int!
  hour: Int!
  line: Int!
  minute: Int!
  month: Int!
  page: Int!
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  serial_number: CupCreateOneWithoutCup_dataInput
  temperature: Int!
  x: Int!
  y: Int!
  year: Int!
  z: Int!
}

input Cup_dataCreateWithoutCup_data_proc_volumesInput {
  id: Int
  battery: Int!
  calib_flag: Boolean!
  ch1: Int!
  ch10: Int!
  ch11: Int!
  ch12: Int!
  ch13: Int!
  ch14: Int!
  ch2: Int!
  ch3: Int!
  ch4: Int!
  ch5: Int!
  ch6: Int!
  ch7: Int!
  ch8: Int!
  ch9: Int!
  colour_b: Int!
  colour_c: Int!
  colour_g: Int!
  colour_r: Int!
  cup_data_colour_calcs: Cup_data_colour_calcCreateManyWithoutCup_data_rowInput
  date: DateTime!
  day: Int!
  hour: Int!
  line: Int!
  minute: Int!
  month: Int!
  page: Int!
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  serial_number: CupCreateOneWithoutCup_dataInput
  temperature: Int!
  x: Int!
  y: Int!
  year: Int!
  z: Int!
}

input Cup_dataCreateWithoutSerial_numberInput {
  id: Int
  battery: Int!
  calib_flag: Boolean!
  ch1: Int!
  ch10: Int!
  ch11: Int!
  ch12: Int!
  ch13: Int!
  ch14: Int!
  ch2: Int!
  ch3: Int!
  ch4: Int!
  ch5: Int!
  ch6: Int!
  ch7: Int!
  ch8: Int!
  ch9: Int!
  colour_b: Int!
  colour_c: Int!
  colour_g: Int!
  colour_r: Int!
  cup_data_colour_calcs: Cup_data_colour_calcCreateManyWithoutCup_data_rowInput
  cup_data_proc_volumes: Cup_data_proc_volumeCreateManyWithoutCup_data_rowInput
  date: DateTime!
  day: Int!
  hour: Int!
  line: Int!
  minute: Int!
  month: Int!
  page: Int!
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  temperature: Int!
  x: Int!
  y: Int!
  year: Int!
  z: Int!
}

type Cup_dataEdge {
  node: Cup_data!
  cursor: String!
}

enum Cup_dataOrderByInput {
  id_ASC
  id_DESC
  battery_ASC
  battery_DESC
  calib_flag_ASC
  calib_flag_DESC
  ch1_ASC
  ch1_DESC
  ch10_ASC
  ch10_DESC
  ch11_ASC
  ch11_DESC
  ch12_ASC
  ch12_DESC
  ch13_ASC
  ch13_DESC
  ch14_ASC
  ch14_DESC
  ch2_ASC
  ch2_DESC
  ch3_ASC
  ch3_DESC
  ch4_ASC
  ch4_DESC
  ch5_ASC
  ch5_DESC
  ch6_ASC
  ch6_DESC
  ch7_ASC
  ch7_DESC
  ch8_ASC
  ch8_DESC
  ch9_ASC
  ch9_DESC
  colour_b_ASC
  colour_b_DESC
  colour_c_ASC
  colour_c_DESC
  colour_g_ASC
  colour_g_DESC
  colour_r_ASC
  colour_r_DESC
  date_ASC
  date_DESC
  day_ASC
  day_DESC
  hour_ASC
  hour_DESC
  line_ASC
  line_DESC
  minute_ASC
  minute_DESC
  month_ASC
  month_DESC
  page_ASC
  page_DESC
  raw_total_volume_ASC
  raw_total_volume_DESC
  raw_volume_l_ASC
  raw_volume_l_DESC
  raw_volume_r_ASC
  raw_volume_r_DESC
  temperature_ASC
  temperature_DESC
  x_ASC
  x_DESC
  y_ASC
  y_DESC
  year_ASC
  year_DESC
  z_ASC
  z_DESC
}

type Cup_dataPreviousValues {
  id: Int!
  battery: Int!
  calib_flag: Boolean!
  ch1: Int!
  ch10: Int!
  ch11: Int!
  ch12: Int!
  ch13: Int!
  ch14: Int!
  ch2: Int!
  ch3: Int!
  ch4: Int!
  ch5: Int!
  ch6: Int!
  ch7: Int!
  ch8: Int!
  ch9: Int!
  colour_b: Int!
  colour_c: Int!
  colour_g: Int!
  colour_r: Int!
  date: DateTime!
  day: Int!
  hour: Int!
  line: Int!
  minute: Int!
  month: Int!
  page: Int!
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  temperature: Int!
  x: Int!
  y: Int!
  year: Int!
  z: Int!
}

input Cup_dataScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  battery: Int
  battery_not: Int
  battery_in: [Int!]
  battery_not_in: [Int!]
  battery_lt: Int
  battery_lte: Int
  battery_gt: Int
  battery_gte: Int
  calib_flag: Boolean
  calib_flag_not: Boolean
  ch1: Int
  ch1_not: Int
  ch1_in: [Int!]
  ch1_not_in: [Int!]
  ch1_lt: Int
  ch1_lte: Int
  ch1_gt: Int
  ch1_gte: Int
  ch10: Int
  ch10_not: Int
  ch10_in: [Int!]
  ch10_not_in: [Int!]
  ch10_lt: Int
  ch10_lte: Int
  ch10_gt: Int
  ch10_gte: Int
  ch11: Int
  ch11_not: Int
  ch11_in: [Int!]
  ch11_not_in: [Int!]
  ch11_lt: Int
  ch11_lte: Int
  ch11_gt: Int
  ch11_gte: Int
  ch12: Int
  ch12_not: Int
  ch12_in: [Int!]
  ch12_not_in: [Int!]
  ch12_lt: Int
  ch12_lte: Int
  ch12_gt: Int
  ch12_gte: Int
  ch13: Int
  ch13_not: Int
  ch13_in: [Int!]
  ch13_not_in: [Int!]
  ch13_lt: Int
  ch13_lte: Int
  ch13_gt: Int
  ch13_gte: Int
  ch14: Int
  ch14_not: Int
  ch14_in: [Int!]
  ch14_not_in: [Int!]
  ch14_lt: Int
  ch14_lte: Int
  ch14_gt: Int
  ch14_gte: Int
  ch2: Int
  ch2_not: Int
  ch2_in: [Int!]
  ch2_not_in: [Int!]
  ch2_lt: Int
  ch2_lte: Int
  ch2_gt: Int
  ch2_gte: Int
  ch3: Int
  ch3_not: Int
  ch3_in: [Int!]
  ch3_not_in: [Int!]
  ch3_lt: Int
  ch3_lte: Int
  ch3_gt: Int
  ch3_gte: Int
  ch4: Int
  ch4_not: Int
  ch4_in: [Int!]
  ch4_not_in: [Int!]
  ch4_lt: Int
  ch4_lte: Int
  ch4_gt: Int
  ch4_gte: Int
  ch5: Int
  ch5_not: Int
  ch5_in: [Int!]
  ch5_not_in: [Int!]
  ch5_lt: Int
  ch5_lte: Int
  ch5_gt: Int
  ch5_gte: Int
  ch6: Int
  ch6_not: Int
  ch6_in: [Int!]
  ch6_not_in: [Int!]
  ch6_lt: Int
  ch6_lte: Int
  ch6_gt: Int
  ch6_gte: Int
  ch7: Int
  ch7_not: Int
  ch7_in: [Int!]
  ch7_not_in: [Int!]
  ch7_lt: Int
  ch7_lte: Int
  ch7_gt: Int
  ch7_gte: Int
  ch8: Int
  ch8_not: Int
  ch8_in: [Int!]
  ch8_not_in: [Int!]
  ch8_lt: Int
  ch8_lte: Int
  ch8_gt: Int
  ch8_gte: Int
  ch9: Int
  ch9_not: Int
  ch9_in: [Int!]
  ch9_not_in: [Int!]
  ch9_lt: Int
  ch9_lte: Int
  ch9_gt: Int
  ch9_gte: Int
  colour_b: Int
  colour_b_not: Int
  colour_b_in: [Int!]
  colour_b_not_in: [Int!]
  colour_b_lt: Int
  colour_b_lte: Int
  colour_b_gt: Int
  colour_b_gte: Int
  colour_c: Int
  colour_c_not: Int
  colour_c_in: [Int!]
  colour_c_not_in: [Int!]
  colour_c_lt: Int
  colour_c_lte: Int
  colour_c_gt: Int
  colour_c_gte: Int
  colour_g: Int
  colour_g_not: Int
  colour_g_in: [Int!]
  colour_g_not_in: [Int!]
  colour_g_lt: Int
  colour_g_lte: Int
  colour_g_gt: Int
  colour_g_gte: Int
  colour_r: Int
  colour_r_not: Int
  colour_r_in: [Int!]
  colour_r_not_in: [Int!]
  colour_r_lt: Int
  colour_r_lte: Int
  colour_r_gt: Int
  colour_r_gte: Int
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  day: Int
  day_not: Int
  day_in: [Int!]
  day_not_in: [Int!]
  day_lt: Int
  day_lte: Int
  day_gt: Int
  day_gte: Int
  hour: Int
  hour_not: Int
  hour_in: [Int!]
  hour_not_in: [Int!]
  hour_lt: Int
  hour_lte: Int
  hour_gt: Int
  hour_gte: Int
  line: Int
  line_not: Int
  line_in: [Int!]
  line_not_in: [Int!]
  line_lt: Int
  line_lte: Int
  line_gt: Int
  line_gte: Int
  minute: Int
  minute_not: Int
  minute_in: [Int!]
  minute_not_in: [Int!]
  minute_lt: Int
  minute_lte: Int
  minute_gt: Int
  minute_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  page: Int
  page_not: Int
  page_in: [Int!]
  page_not_in: [Int!]
  page_lt: Int
  page_lte: Int
  page_gt: Int
  page_gte: Int
  raw_total_volume: Int
  raw_total_volume_not: Int
  raw_total_volume_in: [Int!]
  raw_total_volume_not_in: [Int!]
  raw_total_volume_lt: Int
  raw_total_volume_lte: Int
  raw_total_volume_gt: Int
  raw_total_volume_gte: Int
  raw_volume_l: Int
  raw_volume_l_not: Int
  raw_volume_l_in: [Int!]
  raw_volume_l_not_in: [Int!]
  raw_volume_l_lt: Int
  raw_volume_l_lte: Int
  raw_volume_l_gt: Int
  raw_volume_l_gte: Int
  raw_volume_r: Int
  raw_volume_r_not: Int
  raw_volume_r_in: [Int!]
  raw_volume_r_not_in: [Int!]
  raw_volume_r_lt: Int
  raw_volume_r_lte: Int
  raw_volume_r_gt: Int
  raw_volume_r_gte: Int
  temperature: Int
  temperature_not: Int
  temperature_in: [Int!]
  temperature_not_in: [Int!]
  temperature_lt: Int
  temperature_lte: Int
  temperature_gt: Int
  temperature_gte: Int
  x: Int
  x_not: Int
  x_in: [Int!]
  x_not_in: [Int!]
  x_lt: Int
  x_lte: Int
  x_gt: Int
  x_gte: Int
  y: Int
  y_not: Int
  y_in: [Int!]
  y_not_in: [Int!]
  y_lt: Int
  y_lte: Int
  y_gt: Int
  y_gte: Int
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  z: Int
  z_not: Int
  z_in: [Int!]
  z_not_in: [Int!]
  z_lt: Int
  z_lte: Int
  z_gt: Int
  z_gte: Int
  AND: [Cup_dataScalarWhereInput!]
  OR: [Cup_dataScalarWhereInput!]
  NOT: [Cup_dataScalarWhereInput!]
}

type Cup_dataSubscriptionPayload {
  mutation: MutationType!
  node: Cup_data
  updatedFields: [String!]
  previousValues: Cup_dataPreviousValues
}

input Cup_dataSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Cup_dataWhereInput
  AND: [Cup_dataSubscriptionWhereInput!]
  OR: [Cup_dataSubscriptionWhereInput!]
  NOT: [Cup_dataSubscriptionWhereInput!]
}

input Cup_dataUpdateInput {
  battery: Int
  calib_flag: Boolean
  ch1: Int
  ch10: Int
  ch11: Int
  ch12: Int
  ch13: Int
  ch14: Int
  ch2: Int
  ch3: Int
  ch4: Int
  ch5: Int
  ch6: Int
  ch7: Int
  ch8: Int
  ch9: Int
  colour_b: Int
  colour_c: Int
  colour_g: Int
  colour_r: Int
  cup_data_colour_calcs: Cup_data_colour_calcUpdateManyWithoutCup_data_rowInput
  cup_data_proc_volumes: Cup_data_proc_volumeUpdateManyWithoutCup_data_rowInput
  date: DateTime
  day: Int
  hour: Int
  line: Int
  minute: Int
  month: Int
  page: Int
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  serial_number: CupUpdateOneWithoutCup_dataInput
  temperature: Int
  x: Int
  y: Int
  year: Int
  z: Int
}

input Cup_dataUpdateManyDataInput {
  battery: Int
  calib_flag: Boolean
  ch1: Int
  ch10: Int
  ch11: Int
  ch12: Int
  ch13: Int
  ch14: Int
  ch2: Int
  ch3: Int
  ch4: Int
  ch5: Int
  ch6: Int
  ch7: Int
  ch8: Int
  ch9: Int
  colour_b: Int
  colour_c: Int
  colour_g: Int
  colour_r: Int
  date: DateTime
  day: Int
  hour: Int
  line: Int
  minute: Int
  month: Int
  page: Int
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  temperature: Int
  x: Int
  y: Int
  year: Int
  z: Int
}

input Cup_dataUpdateManyMutationInput {
  battery: Int
  calib_flag: Boolean
  ch1: Int
  ch10: Int
  ch11: Int
  ch12: Int
  ch13: Int
  ch14: Int
  ch2: Int
  ch3: Int
  ch4: Int
  ch5: Int
  ch6: Int
  ch7: Int
  ch8: Int
  ch9: Int
  colour_b: Int
  colour_c: Int
  colour_g: Int
  colour_r: Int
  date: DateTime
  day: Int
  hour: Int
  line: Int
  minute: Int
  month: Int
  page: Int
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  temperature: Int
  x: Int
  y: Int
  year: Int
  z: Int
}

input Cup_dataUpdateManyWithoutSerial_numberInput {
  create: [Cup_dataCreateWithoutSerial_numberInput!]
  delete: [Cup_dataWhereUniqueInput!]
  connect: [Cup_dataWhereUniqueInput!]
  set: [Cup_dataWhereUniqueInput!]
  disconnect: [Cup_dataWhereUniqueInput!]
  update: [Cup_dataUpdateWithWhereUniqueWithoutSerial_numberInput!]
  upsert: [Cup_dataUpsertWithWhereUniqueWithoutSerial_numberInput!]
  deleteMany: [Cup_dataScalarWhereInput!]
  updateMany: [Cup_dataUpdateManyWithWhereNestedInput!]
}

input Cup_dataUpdateManyWithWhereNestedInput {
  where: Cup_dataScalarWhereInput!
  data: Cup_dataUpdateManyDataInput!
}

input Cup_dataUpdateOneWithoutCup_data_colour_calcsInput {
  create: Cup_dataCreateWithoutCup_data_colour_calcsInput
  update: Cup_dataUpdateWithoutCup_data_colour_calcsDataInput
  upsert: Cup_dataUpsertWithoutCup_data_colour_calcsInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_dataWhereUniqueInput
}

input Cup_dataUpdateOneWithoutCup_data_proc_volumesInput {
  create: Cup_dataCreateWithoutCup_data_proc_volumesInput
  update: Cup_dataUpdateWithoutCup_data_proc_volumesDataInput
  upsert: Cup_dataUpsertWithoutCup_data_proc_volumesInput
  delete: Boolean
  disconnect: Boolean
  connect: Cup_dataWhereUniqueInput
}

input Cup_dataUpdateWithoutCup_data_colour_calcsDataInput {
  battery: Int
  calib_flag: Boolean
  ch1: Int
  ch10: Int
  ch11: Int
  ch12: Int
  ch13: Int
  ch14: Int
  ch2: Int
  ch3: Int
  ch4: Int
  ch5: Int
  ch6: Int
  ch7: Int
  ch8: Int
  ch9: Int
  colour_b: Int
  colour_c: Int
  colour_g: Int
  colour_r: Int
  cup_data_proc_volumes: Cup_data_proc_volumeUpdateManyWithoutCup_data_rowInput
  date: DateTime
  day: Int
  hour: Int
  line: Int
  minute: Int
  month: Int
  page: Int
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  serial_number: CupUpdateOneWithoutCup_dataInput
  temperature: Int
  x: Int
  y: Int
  year: Int
  z: Int
}

input Cup_dataUpdateWithoutCup_data_proc_volumesDataInput {
  battery: Int
  calib_flag: Boolean
  ch1: Int
  ch10: Int
  ch11: Int
  ch12: Int
  ch13: Int
  ch14: Int
  ch2: Int
  ch3: Int
  ch4: Int
  ch5: Int
  ch6: Int
  ch7: Int
  ch8: Int
  ch9: Int
  colour_b: Int
  colour_c: Int
  colour_g: Int
  colour_r: Int
  cup_data_colour_calcs: Cup_data_colour_calcUpdateManyWithoutCup_data_rowInput
  date: DateTime
  day: Int
  hour: Int
  line: Int
  minute: Int
  month: Int
  page: Int
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  serial_number: CupUpdateOneWithoutCup_dataInput
  temperature: Int
  x: Int
  y: Int
  year: Int
  z: Int
}

input Cup_dataUpdateWithoutSerial_numberDataInput {
  battery: Int
  calib_flag: Boolean
  ch1: Int
  ch10: Int
  ch11: Int
  ch12: Int
  ch13: Int
  ch14: Int
  ch2: Int
  ch3: Int
  ch4: Int
  ch5: Int
  ch6: Int
  ch7: Int
  ch8: Int
  ch9: Int
  colour_b: Int
  colour_c: Int
  colour_g: Int
  colour_r: Int
  cup_data_colour_calcs: Cup_data_colour_calcUpdateManyWithoutCup_data_rowInput
  cup_data_proc_volumes: Cup_data_proc_volumeUpdateManyWithoutCup_data_rowInput
  date: DateTime
  day: Int
  hour: Int
  line: Int
  minute: Int
  month: Int
  page: Int
  raw_total_volume: Int
  raw_volume_l: Int
  raw_volume_r: Int
  temperature: Int
  x: Int
  y: Int
  year: Int
  z: Int
}

input Cup_dataUpdateWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_dataWhereUniqueInput!
  data: Cup_dataUpdateWithoutSerial_numberDataInput!
}

input Cup_dataUpsertWithoutCup_data_colour_calcsInput {
  update: Cup_dataUpdateWithoutCup_data_colour_calcsDataInput!
  create: Cup_dataCreateWithoutCup_data_colour_calcsInput!
}

input Cup_dataUpsertWithoutCup_data_proc_volumesInput {
  update: Cup_dataUpdateWithoutCup_data_proc_volumesDataInput!
  create: Cup_dataCreateWithoutCup_data_proc_volumesInput!
}

input Cup_dataUpsertWithWhereUniqueWithoutSerial_numberInput {
  where: Cup_dataWhereUniqueInput!
  update: Cup_dataUpdateWithoutSerial_numberDataInput!
  create: Cup_dataCreateWithoutSerial_numberInput!
}

input Cup_dataWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  battery: Int
  battery_not: Int
  battery_in: [Int!]
  battery_not_in: [Int!]
  battery_lt: Int
  battery_lte: Int
  battery_gt: Int
  battery_gte: Int
  calib_flag: Boolean
  calib_flag_not: Boolean
  ch1: Int
  ch1_not: Int
  ch1_in: [Int!]
  ch1_not_in: [Int!]
  ch1_lt: Int
  ch1_lte: Int
  ch1_gt: Int
  ch1_gte: Int
  ch10: Int
  ch10_not: Int
  ch10_in: [Int!]
  ch10_not_in: [Int!]
  ch10_lt: Int
  ch10_lte: Int
  ch10_gt: Int
  ch10_gte: Int
  ch11: Int
  ch11_not: Int
  ch11_in: [Int!]
  ch11_not_in: [Int!]
  ch11_lt: Int
  ch11_lte: Int
  ch11_gt: Int
  ch11_gte: Int
  ch12: Int
  ch12_not: Int
  ch12_in: [Int!]
  ch12_not_in: [Int!]
  ch12_lt: Int
  ch12_lte: Int
  ch12_gt: Int
  ch12_gte: Int
  ch13: Int
  ch13_not: Int
  ch13_in: [Int!]
  ch13_not_in: [Int!]
  ch13_lt: Int
  ch13_lte: Int
  ch13_gt: Int
  ch13_gte: Int
  ch14: Int
  ch14_not: Int
  ch14_in: [Int!]
  ch14_not_in: [Int!]
  ch14_lt: Int
  ch14_lte: Int
  ch14_gt: Int
  ch14_gte: Int
  ch2: Int
  ch2_not: Int
  ch2_in: [Int!]
  ch2_not_in: [Int!]
  ch2_lt: Int
  ch2_lte: Int
  ch2_gt: Int
  ch2_gte: Int
  ch3: Int
  ch3_not: Int
  ch3_in: [Int!]
  ch3_not_in: [Int!]
  ch3_lt: Int
  ch3_lte: Int
  ch3_gt: Int
  ch3_gte: Int
  ch4: Int
  ch4_not: Int
  ch4_in: [Int!]
  ch4_not_in: [Int!]
  ch4_lt: Int
  ch4_lte: Int
  ch4_gt: Int
  ch4_gte: Int
  ch5: Int
  ch5_not: Int
  ch5_in: [Int!]
  ch5_not_in: [Int!]
  ch5_lt: Int
  ch5_lte: Int
  ch5_gt: Int
  ch5_gte: Int
  ch6: Int
  ch6_not: Int
  ch6_in: [Int!]
  ch6_not_in: [Int!]
  ch6_lt: Int
  ch6_lte: Int
  ch6_gt: Int
  ch6_gte: Int
  ch7: Int
  ch7_not: Int
  ch7_in: [Int!]
  ch7_not_in: [Int!]
  ch7_lt: Int
  ch7_lte: Int
  ch7_gt: Int
  ch7_gte: Int
  ch8: Int
  ch8_not: Int
  ch8_in: [Int!]
  ch8_not_in: [Int!]
  ch8_lt: Int
  ch8_lte: Int
  ch8_gt: Int
  ch8_gte: Int
  ch9: Int
  ch9_not: Int
  ch9_in: [Int!]
  ch9_not_in: [Int!]
  ch9_lt: Int
  ch9_lte: Int
  ch9_gt: Int
  ch9_gte: Int
  colour_b: Int
  colour_b_not: Int
  colour_b_in: [Int!]
  colour_b_not_in: [Int!]
  colour_b_lt: Int
  colour_b_lte: Int
  colour_b_gt: Int
  colour_b_gte: Int
  colour_c: Int
  colour_c_not: Int
  colour_c_in: [Int!]
  colour_c_not_in: [Int!]
  colour_c_lt: Int
  colour_c_lte: Int
  colour_c_gt: Int
  colour_c_gte: Int
  colour_g: Int
  colour_g_not: Int
  colour_g_in: [Int!]
  colour_g_not_in: [Int!]
  colour_g_lt: Int
  colour_g_lte: Int
  colour_g_gt: Int
  colour_g_gte: Int
  colour_r: Int
  colour_r_not: Int
  colour_r_in: [Int!]
  colour_r_not_in: [Int!]
  colour_r_lt: Int
  colour_r_lte: Int
  colour_r_gt: Int
  colour_r_gte: Int
  cup_data_colour_calcs_every: Cup_data_colour_calcWhereInput
  cup_data_colour_calcs_some: Cup_data_colour_calcWhereInput
  cup_data_colour_calcs_none: Cup_data_colour_calcWhereInput
  cup_data_proc_volumes_every: Cup_data_proc_volumeWhereInput
  cup_data_proc_volumes_some: Cup_data_proc_volumeWhereInput
  cup_data_proc_volumes_none: Cup_data_proc_volumeWhereInput
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  day: Int
  day_not: Int
  day_in: [Int!]
  day_not_in: [Int!]
  day_lt: Int
  day_lte: Int
  day_gt: Int
  day_gte: Int
  hour: Int
  hour_not: Int
  hour_in: [Int!]
  hour_not_in: [Int!]
  hour_lt: Int
  hour_lte: Int
  hour_gt: Int
  hour_gte: Int
  line: Int
  line_not: Int
  line_in: [Int!]
  line_not_in: [Int!]
  line_lt: Int
  line_lte: Int
  line_gt: Int
  line_gte: Int
  minute: Int
  minute_not: Int
  minute_in: [Int!]
  minute_not_in: [Int!]
  minute_lt: Int
  minute_lte: Int
  minute_gt: Int
  minute_gte: Int
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  page: Int
  page_not: Int
  page_in: [Int!]
  page_not_in: [Int!]
  page_lt: Int
  page_lte: Int
  page_gt: Int
  page_gte: Int
  raw_total_volume: Int
  raw_total_volume_not: Int
  raw_total_volume_in: [Int!]
  raw_total_volume_not_in: [Int!]
  raw_total_volume_lt: Int
  raw_total_volume_lte: Int
  raw_total_volume_gt: Int
  raw_total_volume_gte: Int
  raw_volume_l: Int
  raw_volume_l_not: Int
  raw_volume_l_in: [Int!]
  raw_volume_l_not_in: [Int!]
  raw_volume_l_lt: Int
  raw_volume_l_lte: Int
  raw_volume_l_gt: Int
  raw_volume_l_gte: Int
  raw_volume_r: Int
  raw_volume_r_not: Int
  raw_volume_r_in: [Int!]
  raw_volume_r_not_in: [Int!]
  raw_volume_r_lt: Int
  raw_volume_r_lte: Int
  raw_volume_r_gt: Int
  raw_volume_r_gte: Int
  serial_number: CupWhereInput
  temperature: Int
  temperature_not: Int
  temperature_in: [Int!]
  temperature_not_in: [Int!]
  temperature_lt: Int
  temperature_lte: Int
  temperature_gt: Int
  temperature_gte: Int
  x: Int
  x_not: Int
  x_in: [Int!]
  x_not_in: [Int!]
  x_lt: Int
  x_lte: Int
  x_gt: Int
  x_gte: Int
  y: Int
  y_not: Int
  y_in: [Int!]
  y_not_in: [Int!]
  y_lt: Int
  y_lte: Int
  y_gt: Int
  y_gte: Int
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  z: Int
  z_not: Int
  z_in: [Int!]
  z_not_in: [Int!]
  z_lt: Int
  z_lte: Int
  z_gt: Int
  z_gte: Int
  AND: [Cup_dataWhereInput!]
  OR: [Cup_dataWhereInput!]
  NOT: [Cup_dataWhereInput!]
}

input Cup_dataWhereUniqueInput {
  id: Int
}

type CupConnection {
  pageInfo: PageInfo!
  edges: [CupEdge]!
  aggregate: AggregateCup!
}

input CupCreateInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateManyWithoutCalibInput {
  create: [CupCreateWithoutCalibInput!]
  connect: [CupWhereUniqueInput!]
}

input CupCreateManyWithoutCompanyInput {
  create: [CupCreateWithoutCompanyInput!]
  connect: [CupWhereUniqueInput!]
}

input CupCreateManyWithoutFwInput {
  create: [CupCreateWithoutFwInput!]
  connect: [CupWhereUniqueInput!]
}

input CupCreateManyWithoutHwInput {
  create: [CupCreateWithoutHwInput!]
  connect: [CupWhereUniqueInput!]
}

input CupCreateOneWithoutCup_app_syncsInput {
  create: CupCreateWithoutCup_app_syncsInput
  connect: CupWhereUniqueInput
}

input CupCreateOneWithoutCup_data_colour_calibsInput {
  create: CupCreateWithoutCup_data_colour_calibsInput
  connect: CupWhereUniqueInput
}

input CupCreateOneWithoutCup_data_rawsInput {
  create: CupCreateWithoutCup_data_rawsInput
  connect: CupWhereUniqueInput
}

input CupCreateOneWithoutCup_data_user_removesInput {
  create: CupCreateWithoutCup_data_user_removesInput
  connect: CupWhereUniqueInput
}

input CupCreateOneWithoutCup_dataInput {
  create: CupCreateWithoutCup_dataInput
  connect: CupWhereUniqueInput
}

input CupCreateOneWithoutUser_cupsInput {
  create: CupCreateWithoutUser_cupsInput
  connect: CupWhereUniqueInput
}

input CupCreateWithoutCalibInput {
  id: Int
  anon_serial_number: Int!
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutCompanyInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutCup_app_syncsInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutCup_data_colour_calibsInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutCup_data_rawsInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutCup_data_user_removesInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutCup_dataInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutFwInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  hw: HardwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutHwInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  user_cups: User_cupsCreateManyWithoutSerial_numberInput
}

input CupCreateWithoutUser_cupsInput {
  id: Int
  anon_serial_number: Int!
  calib: CalibrationCreateOneWithoutCupsInput
  company: CompanyCreateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncCreateManyWithoutSerial_numberInput
  cup_data: Cup_dataCreateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibCreateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawCreateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutSerial_numberInput
  encryption_key: Int!
  fw: FirmwareCreateOneWithoutCupsInput
  hw: HardwareCreateOneWithoutCupsInput
}

type CupEdge {
  node: Cup!
  cursor: String!
}

enum CupOrderByInput {
  id_ASC
  id_DESC
  anon_serial_number_ASC
  anon_serial_number_DESC
  encryption_key_ASC
  encryption_key_DESC
}

type CupPreviousValues {
  id: Int!
  anon_serial_number: Int!
  encryption_key: Int!
}

input CupScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  anon_serial_number: Int
  anon_serial_number_not: Int
  anon_serial_number_in: [Int!]
  anon_serial_number_not_in: [Int!]
  anon_serial_number_lt: Int
  anon_serial_number_lte: Int
  anon_serial_number_gt: Int
  anon_serial_number_gte: Int
  encryption_key: Int
  encryption_key_not: Int
  encryption_key_in: [Int!]
  encryption_key_not_in: [Int!]
  encryption_key_lt: Int
  encryption_key_lte: Int
  encryption_key_gt: Int
  encryption_key_gte: Int
  AND: [CupScalarWhereInput!]
  OR: [CupScalarWhereInput!]
  NOT: [CupScalarWhereInput!]
}

type CupSubscriptionPayload {
  mutation: MutationType!
  node: Cup
  updatedFields: [String!]
  previousValues: CupPreviousValues
}

input CupSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CupWhereInput
  AND: [CupSubscriptionWhereInput!]
  OR: [CupSubscriptionWhereInput!]
  NOT: [CupSubscriptionWhereInput!]
}

input CupUpdateInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateManyDataInput {
  anon_serial_number: Int
  encryption_key: Int
}

input CupUpdateManyMutationInput {
  anon_serial_number: Int
  encryption_key: Int
}

input CupUpdateManyWithoutCalibInput {
  create: [CupCreateWithoutCalibInput!]
  delete: [CupWhereUniqueInput!]
  connect: [CupWhereUniqueInput!]
  set: [CupWhereUniqueInput!]
  disconnect: [CupWhereUniqueInput!]
  update: [CupUpdateWithWhereUniqueWithoutCalibInput!]
  upsert: [CupUpsertWithWhereUniqueWithoutCalibInput!]
  deleteMany: [CupScalarWhereInput!]
  updateMany: [CupUpdateManyWithWhereNestedInput!]
}

input CupUpdateManyWithoutCompanyInput {
  create: [CupCreateWithoutCompanyInput!]
  delete: [CupWhereUniqueInput!]
  connect: [CupWhereUniqueInput!]
  set: [CupWhereUniqueInput!]
  disconnect: [CupWhereUniqueInput!]
  update: [CupUpdateWithWhereUniqueWithoutCompanyInput!]
  upsert: [CupUpsertWithWhereUniqueWithoutCompanyInput!]
  deleteMany: [CupScalarWhereInput!]
  updateMany: [CupUpdateManyWithWhereNestedInput!]
}

input CupUpdateManyWithoutFwInput {
  create: [CupCreateWithoutFwInput!]
  delete: [CupWhereUniqueInput!]
  connect: [CupWhereUniqueInput!]
  set: [CupWhereUniqueInput!]
  disconnect: [CupWhereUniqueInput!]
  update: [CupUpdateWithWhereUniqueWithoutFwInput!]
  upsert: [CupUpsertWithWhereUniqueWithoutFwInput!]
  deleteMany: [CupScalarWhereInput!]
  updateMany: [CupUpdateManyWithWhereNestedInput!]
}

input CupUpdateManyWithoutHwInput {
  create: [CupCreateWithoutHwInput!]
  delete: [CupWhereUniqueInput!]
  connect: [CupWhereUniqueInput!]
  set: [CupWhereUniqueInput!]
  disconnect: [CupWhereUniqueInput!]
  update: [CupUpdateWithWhereUniqueWithoutHwInput!]
  upsert: [CupUpsertWithWhereUniqueWithoutHwInput!]
  deleteMany: [CupScalarWhereInput!]
  updateMany: [CupUpdateManyWithWhereNestedInput!]
}

input CupUpdateManyWithWhereNestedInput {
  where: CupScalarWhereInput!
  data: CupUpdateManyDataInput!
}

input CupUpdateOneWithoutCup_app_syncsInput {
  create: CupCreateWithoutCup_app_syncsInput
  update: CupUpdateWithoutCup_app_syncsDataInput
  upsert: CupUpsertWithoutCup_app_syncsInput
  delete: Boolean
  disconnect: Boolean
  connect: CupWhereUniqueInput
}

input CupUpdateOneWithoutCup_data_colour_calibsInput {
  create: CupCreateWithoutCup_data_colour_calibsInput
  update: CupUpdateWithoutCup_data_colour_calibsDataInput
  upsert: CupUpsertWithoutCup_data_colour_calibsInput
  delete: Boolean
  disconnect: Boolean
  connect: CupWhereUniqueInput
}

input CupUpdateOneWithoutCup_data_rawsInput {
  create: CupCreateWithoutCup_data_rawsInput
  update: CupUpdateWithoutCup_data_rawsDataInput
  upsert: CupUpsertWithoutCup_data_rawsInput
  delete: Boolean
  disconnect: Boolean
  connect: CupWhereUniqueInput
}

input CupUpdateOneWithoutCup_data_user_removesInput {
  create: CupCreateWithoutCup_data_user_removesInput
  update: CupUpdateWithoutCup_data_user_removesDataInput
  upsert: CupUpsertWithoutCup_data_user_removesInput
  delete: Boolean
  disconnect: Boolean
  connect: CupWhereUniqueInput
}

input CupUpdateOneWithoutCup_dataInput {
  create: CupCreateWithoutCup_dataInput
  update: CupUpdateWithoutCup_dataDataInput
  upsert: CupUpsertWithoutCup_dataInput
  delete: Boolean
  disconnect: Boolean
  connect: CupWhereUniqueInput
}

input CupUpdateOneWithoutUser_cupsInput {
  create: CupCreateWithoutUser_cupsInput
  update: CupUpdateWithoutUser_cupsDataInput
  upsert: CupUpsertWithoutUser_cupsInput
  delete: Boolean
  disconnect: Boolean
  connect: CupWhereUniqueInput
}

input CupUpdateWithoutCalibDataInput {
  anon_serial_number: Int
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutCompanyDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutCup_app_syncsDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutCup_data_colour_calibsDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutCup_data_rawsDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutCup_data_user_removesDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutCup_dataDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutFwDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  hw: HardwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutHwDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  user_cups: User_cupsUpdateManyWithoutSerial_numberInput
}

input CupUpdateWithoutUser_cupsDataInput {
  anon_serial_number: Int
  calib: CalibrationUpdateOneWithoutCupsInput
  company: CompanyUpdateOneWithoutCupsInput
  cup_app_syncs: Cup_app_syncUpdateManyWithoutSerial_numberInput
  cup_data: Cup_dataUpdateManyWithoutSerial_numberInput
  cup_data_colour_calibs: Cup_data_colour_calibUpdateManyWithoutSerial_numberInput
  cup_data_raws: Cup_data_rawUpdateManyWithoutSerial_numberInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutSerial_numberInput
  encryption_key: Int
  fw: FirmwareUpdateOneWithoutCupsInput
  hw: HardwareUpdateOneWithoutCupsInput
}

input CupUpdateWithWhereUniqueWithoutCalibInput {
  where: CupWhereUniqueInput!
  data: CupUpdateWithoutCalibDataInput!
}

input CupUpdateWithWhereUniqueWithoutCompanyInput {
  where: CupWhereUniqueInput!
  data: CupUpdateWithoutCompanyDataInput!
}

input CupUpdateWithWhereUniqueWithoutFwInput {
  where: CupWhereUniqueInput!
  data: CupUpdateWithoutFwDataInput!
}

input CupUpdateWithWhereUniqueWithoutHwInput {
  where: CupWhereUniqueInput!
  data: CupUpdateWithoutHwDataInput!
}

input CupUpsertWithoutCup_app_syncsInput {
  update: CupUpdateWithoutCup_app_syncsDataInput!
  create: CupCreateWithoutCup_app_syncsInput!
}

input CupUpsertWithoutCup_data_colour_calibsInput {
  update: CupUpdateWithoutCup_data_colour_calibsDataInput!
  create: CupCreateWithoutCup_data_colour_calibsInput!
}

input CupUpsertWithoutCup_data_rawsInput {
  update: CupUpdateWithoutCup_data_rawsDataInput!
  create: CupCreateWithoutCup_data_rawsInput!
}

input CupUpsertWithoutCup_data_user_removesInput {
  update: CupUpdateWithoutCup_data_user_removesDataInput!
  create: CupCreateWithoutCup_data_user_removesInput!
}

input CupUpsertWithoutCup_dataInput {
  update: CupUpdateWithoutCup_dataDataInput!
  create: CupCreateWithoutCup_dataInput!
}

input CupUpsertWithoutUser_cupsInput {
  update: CupUpdateWithoutUser_cupsDataInput!
  create: CupCreateWithoutUser_cupsInput!
}

input CupUpsertWithWhereUniqueWithoutCalibInput {
  where: CupWhereUniqueInput!
  update: CupUpdateWithoutCalibDataInput!
  create: CupCreateWithoutCalibInput!
}

input CupUpsertWithWhereUniqueWithoutCompanyInput {
  where: CupWhereUniqueInput!
  update: CupUpdateWithoutCompanyDataInput!
  create: CupCreateWithoutCompanyInput!
}

input CupUpsertWithWhereUniqueWithoutFwInput {
  where: CupWhereUniqueInput!
  update: CupUpdateWithoutFwDataInput!
  create: CupCreateWithoutFwInput!
}

input CupUpsertWithWhereUniqueWithoutHwInput {
  where: CupWhereUniqueInput!
  update: CupUpdateWithoutHwDataInput!
  create: CupCreateWithoutHwInput!
}

input CupWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  anon_serial_number: Int
  anon_serial_number_not: Int
  anon_serial_number_in: [Int!]
  anon_serial_number_not_in: [Int!]
  anon_serial_number_lt: Int
  anon_serial_number_lte: Int
  anon_serial_number_gt: Int
  anon_serial_number_gte: Int
  calib: CalibrationWhereInput
  company: CompanyWhereInput
  cup_app_syncs_every: Cup_app_syncWhereInput
  cup_app_syncs_some: Cup_app_syncWhereInput
  cup_app_syncs_none: Cup_app_syncWhereInput
  cup_data_every: Cup_dataWhereInput
  cup_data_some: Cup_dataWhereInput
  cup_data_none: Cup_dataWhereInput
  cup_data_colour_calibs_every: Cup_data_colour_calibWhereInput
  cup_data_colour_calibs_some: Cup_data_colour_calibWhereInput
  cup_data_colour_calibs_none: Cup_data_colour_calibWhereInput
  cup_data_raws_every: Cup_data_rawWhereInput
  cup_data_raws_some: Cup_data_rawWhereInput
  cup_data_raws_none: Cup_data_rawWhereInput
  cup_data_user_removes_every: Cup_data_user_removeWhereInput
  cup_data_user_removes_some: Cup_data_user_removeWhereInput
  cup_data_user_removes_none: Cup_data_user_removeWhereInput
  encryption_key: Int
  encryption_key_not: Int
  encryption_key_in: [Int!]
  encryption_key_not_in: [Int!]
  encryption_key_lt: Int
  encryption_key_lte: Int
  encryption_key_gt: Int
  encryption_key_gte: Int
  fw: FirmwareWhereInput
  hw: HardwareWhereInput
  user_cups_every: User_cupsWhereInput
  user_cups_some: User_cupsWhereInput
  user_cups_none: User_cupsWhereInput
  AND: [CupWhereInput!]
  OR: [CupWhereInput!]
  NOT: [CupWhereInput!]
}

input CupWhereUniqueInput {
  id: Int
}

scalar DateTime

type Ethnicity {
  id: Int!
  ethnicity: String!
  users(where: UsersWhereInput, orderBy: UsersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Users!]
}

type EthnicityConnection {
  pageInfo: PageInfo!
  edges: [EthnicityEdge]!
  aggregate: AggregateEthnicity!
}

input EthnicityCreateInput {
  id: Int
  ethnicity: String!
  users: UsersCreateManyWithoutEthnicityInput
}

input EthnicityCreateOneWithoutUsersInput {
  create: EthnicityCreateWithoutUsersInput
  connect: EthnicityWhereUniqueInput
}

input EthnicityCreateWithoutUsersInput {
  id: Int
  ethnicity: String!
}

type EthnicityEdge {
  node: Ethnicity!
  cursor: String!
}

enum EthnicityOrderByInput {
  id_ASC
  id_DESC
  ethnicity_ASC
  ethnicity_DESC
}

type EthnicityPreviousValues {
  id: Int!
  ethnicity: String!
}

type EthnicitySubscriptionPayload {
  mutation: MutationType!
  node: Ethnicity
  updatedFields: [String!]
  previousValues: EthnicityPreviousValues
}

input EthnicitySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EthnicityWhereInput
  AND: [EthnicitySubscriptionWhereInput!]
  OR: [EthnicitySubscriptionWhereInput!]
  NOT: [EthnicitySubscriptionWhereInput!]
}

input EthnicityUpdateInput {
  ethnicity: String
  users: UsersUpdateManyWithoutEthnicityInput
}

input EthnicityUpdateManyMutationInput {
  ethnicity: String
}

input EthnicityUpdateOneWithoutUsersInput {
  create: EthnicityCreateWithoutUsersInput
  update: EthnicityUpdateWithoutUsersDataInput
  upsert: EthnicityUpsertWithoutUsersInput
  delete: Boolean
  disconnect: Boolean
  connect: EthnicityWhereUniqueInput
}

input EthnicityUpdateWithoutUsersDataInput {
  ethnicity: String
}

input EthnicityUpsertWithoutUsersInput {
  update: EthnicityUpdateWithoutUsersDataInput!
  create: EthnicityCreateWithoutUsersInput!
}

input EthnicityWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  ethnicity: String
  ethnicity_not: String
  ethnicity_in: [String!]
  ethnicity_not_in: [String!]
  ethnicity_lt: String
  ethnicity_lte: String
  ethnicity_gt: String
  ethnicity_gte: String
  ethnicity_contains: String
  ethnicity_not_contains: String
  ethnicity_starts_with: String
  ethnicity_not_starts_with: String
  ethnicity_ends_with: String
  ethnicity_not_ends_with: String
  users_every: UsersWhereInput
  users_some: UsersWhereInput
  users_none: UsersWhereInput
  AND: [EthnicityWhereInput!]
  OR: [EthnicityWhereInput!]
  NOT: [EthnicityWhereInput!]
}

input EthnicityWhereUniqueInput {
  id: Int
}

type Firmware {
  id: Int!
  cups(where: CupWhereInput, orderBy: CupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup!]
  fw_version: String!
}

type FirmwareConnection {
  pageInfo: PageInfo!
  edges: [FirmwareEdge]!
  aggregate: AggregateFirmware!
}

input FirmwareCreateInput {
  id: Int
  cups: CupCreateManyWithoutFwInput
  fw_version: String!
}

input FirmwareCreateOneWithoutCupsInput {
  create: FirmwareCreateWithoutCupsInput
  connect: FirmwareWhereUniqueInput
}

input FirmwareCreateWithoutCupsInput {
  id: Int
  fw_version: String!
}

type FirmwareEdge {
  node: Firmware!
  cursor: String!
}

enum FirmwareOrderByInput {
  id_ASC
  id_DESC
  fw_version_ASC
  fw_version_DESC
}

type FirmwarePreviousValues {
  id: Int!
  fw_version: String!
}

type FirmwareSubscriptionPayload {
  mutation: MutationType!
  node: Firmware
  updatedFields: [String!]
  previousValues: FirmwarePreviousValues
}

input FirmwareSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FirmwareWhereInput
  AND: [FirmwareSubscriptionWhereInput!]
  OR: [FirmwareSubscriptionWhereInput!]
  NOT: [FirmwareSubscriptionWhereInput!]
}

input FirmwareUpdateInput {
  cups: CupUpdateManyWithoutFwInput
  fw_version: String
}

input FirmwareUpdateManyMutationInput {
  fw_version: String
}

input FirmwareUpdateOneWithoutCupsInput {
  create: FirmwareCreateWithoutCupsInput
  update: FirmwareUpdateWithoutCupsDataInput
  upsert: FirmwareUpsertWithoutCupsInput
  delete: Boolean
  disconnect: Boolean
  connect: FirmwareWhereUniqueInput
}

input FirmwareUpdateWithoutCupsDataInput {
  fw_version: String
}

input FirmwareUpsertWithoutCupsInput {
  update: FirmwareUpdateWithoutCupsDataInput!
  create: FirmwareCreateWithoutCupsInput!
}

input FirmwareWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cups_every: CupWhereInput
  cups_some: CupWhereInput
  cups_none: CupWhereInput
  fw_version: String
  fw_version_not: String
  fw_version_in: [String!]
  fw_version_not_in: [String!]
  fw_version_lt: String
  fw_version_lte: String
  fw_version_gt: String
  fw_version_gte: String
  fw_version_contains: String
  fw_version_not_contains: String
  fw_version_starts_with: String
  fw_version_not_starts_with: String
  fw_version_ends_with: String
  fw_version_not_ends_with: String
  AND: [FirmwareWhereInput!]
  OR: [FirmwareWhereInput!]
  NOT: [FirmwareWhereInput!]
}

input FirmwareWhereUniqueInput {
  id: Int
}

type Hardware {
  id: Int!
  cups(where: CupWhereInput, orderBy: CupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup!]
  hw_version: String!
}

type HardwareConnection {
  pageInfo: PageInfo!
  edges: [HardwareEdge]!
  aggregate: AggregateHardware!
}

input HardwareCreateInput {
  id: Int
  cups: CupCreateManyWithoutHwInput
  hw_version: String!
}

input HardwareCreateOneWithoutCupsInput {
  create: HardwareCreateWithoutCupsInput
  connect: HardwareWhereUniqueInput
}

input HardwareCreateWithoutCupsInput {
  id: Int
  hw_version: String!
}

type HardwareEdge {
  node: Hardware!
  cursor: String!
}

enum HardwareOrderByInput {
  id_ASC
  id_DESC
  hw_version_ASC
  hw_version_DESC
}

type HardwarePreviousValues {
  id: Int!
  hw_version: String!
}

type HardwareSubscriptionPayload {
  mutation: MutationType!
  node: Hardware
  updatedFields: [String!]
  previousValues: HardwarePreviousValues
}

input HardwareSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: HardwareWhereInput
  AND: [HardwareSubscriptionWhereInput!]
  OR: [HardwareSubscriptionWhereInput!]
  NOT: [HardwareSubscriptionWhereInput!]
}

input HardwareUpdateInput {
  cups: CupUpdateManyWithoutHwInput
  hw_version: String
}

input HardwareUpdateManyMutationInput {
  hw_version: String
}

input HardwareUpdateOneWithoutCupsInput {
  create: HardwareCreateWithoutCupsInput
  update: HardwareUpdateWithoutCupsDataInput
  upsert: HardwareUpsertWithoutCupsInput
  delete: Boolean
  disconnect: Boolean
  connect: HardwareWhereUniqueInput
}

input HardwareUpdateWithoutCupsDataInput {
  hw_version: String
}

input HardwareUpsertWithoutCupsInput {
  update: HardwareUpdateWithoutCupsDataInput!
  create: HardwareCreateWithoutCupsInput!
}

input HardwareWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cups_every: CupWhereInput
  cups_some: CupWhereInput
  cups_none: CupWhereInput
  hw_version: String
  hw_version_not: String
  hw_version_in: [String!]
  hw_version_not_in: [String!]
  hw_version_lt: String
  hw_version_lte: String
  hw_version_gt: String
  hw_version_gte: String
  hw_version_contains: String
  hw_version_not_contains: String
  hw_version_starts_with: String
  hw_version_not_starts_with: String
  hw_version_ends_with: String
  hw_version_not_ends_with: String
  AND: [HardwareWhereInput!]
  OR: [HardwareWhereInput!]
  NOT: [HardwareWhereInput!]
}

input HardwareWhereUniqueInput {
  id: Int
}

scalar Long

type Mutation {
  createAnswer_types(data: Answer_typesCreateInput!): Answer_types!
  updateAnswer_types(data: Answer_typesUpdateInput!, where: Answer_typesWhereUniqueInput!): Answer_types
  updateManyAnswer_typeses(data: Answer_typesUpdateManyMutationInput!, where: Answer_typesWhereInput): BatchPayload!
  upsertAnswer_types(where: Answer_typesWhereUniqueInput!, create: Answer_typesCreateInput!, update: Answer_typesUpdateInput!): Answer_types!
  deleteAnswer_types(where: Answer_typesWhereUniqueInput!): Answer_types
  deleteManyAnswer_typeses(where: Answer_typesWhereInput): BatchPayload!
  createApp_server_sync(data: App_server_syncCreateInput!): App_server_sync!
  updateApp_server_sync(data: App_server_syncUpdateInput!, where: App_server_syncWhereUniqueInput!): App_server_sync
  updateManyApp_server_syncs(data: App_server_syncUpdateManyMutationInput!, where: App_server_syncWhereInput): BatchPayload!
  upsertApp_server_sync(where: App_server_syncWhereUniqueInput!, create: App_server_syncCreateInput!, update: App_server_syncUpdateInput!): App_server_sync!
  deleteApp_server_sync(where: App_server_syncWhereUniqueInput!): App_server_sync
  deleteManyApp_server_syncs(where: App_server_syncWhereInput): BatchPayload!
  createCalibration(data: CalibrationCreateInput!): Calibration!
  updateCalibration(data: CalibrationUpdateInput!, where: CalibrationWhereUniqueInput!): Calibration
  updateManyCalibrations(data: CalibrationUpdateManyMutationInput!, where: CalibrationWhereInput): BatchPayload!
  upsertCalibration(where: CalibrationWhereUniqueInput!, create: CalibrationCreateInput!, update: CalibrationUpdateInput!): Calibration!
  deleteCalibration(where: CalibrationWhereUniqueInput!): Calibration
  deleteManyCalibrations(where: CalibrationWhereInput): BatchPayload!
  createCompany(data: CompanyCreateInput!): Company!
  updateCompany(data: CompanyUpdateInput!, where: CompanyWhereUniqueInput!): Company
  updateManyCompanies(data: CompanyUpdateManyMutationInput!, where: CompanyWhereInput): BatchPayload!
  upsertCompany(where: CompanyWhereUniqueInput!, create: CompanyCreateInput!, update: CompanyUpdateInput!): Company!
  deleteCompany(where: CompanyWhereUniqueInput!): Company
  deleteManyCompanies(where: CompanyWhereInput): BatchPayload!
  createCountry(data: CountryCreateInput!): Country!
  updateCountry(data: CountryUpdateInput!, where: CountryWhereUniqueInput!): Country
  updateManyCountries(data: CountryUpdateManyMutationInput!, where: CountryWhereInput): BatchPayload!
  upsertCountry(where: CountryWhereUniqueInput!, create: CountryCreateInput!, update: CountryUpdateInput!): Country!
  deleteCountry(where: CountryWhereUniqueInput!): Country
  deleteManyCountries(where: CountryWhereInput): BatchPayload!
  createCup(data: CupCreateInput!): Cup!
  updateCup(data: CupUpdateInput!, where: CupWhereUniqueInput!): Cup
  updateManyCups(data: CupUpdateManyMutationInput!, where: CupWhereInput): BatchPayload!
  upsertCup(where: CupWhereUniqueInput!, create: CupCreateInput!, update: CupUpdateInput!): Cup!
  deleteCup(where: CupWhereUniqueInput!): Cup
  deleteManyCups(where: CupWhereInput): BatchPayload!
  createCup_app_sync(data: Cup_app_syncCreateInput!): Cup_app_sync!
  updateCup_app_sync(data: Cup_app_syncUpdateInput!, where: Cup_app_syncWhereUniqueInput!): Cup_app_sync
  updateManyCup_app_syncs(data: Cup_app_syncUpdateManyMutationInput!, where: Cup_app_syncWhereInput): BatchPayload!
  upsertCup_app_sync(where: Cup_app_syncWhereUniqueInput!, create: Cup_app_syncCreateInput!, update: Cup_app_syncUpdateInput!): Cup_app_sync!
  deleteCup_app_sync(where: Cup_app_syncWhereUniqueInput!): Cup_app_sync
  deleteManyCup_app_syncs(where: Cup_app_syncWhereInput): BatchPayload!
  createCup_data(data: Cup_dataCreateInput!): Cup_data!
  updateCup_data(data: Cup_dataUpdateInput!, where: Cup_dataWhereUniqueInput!): Cup_data
  updateManyCup_datas(data: Cup_dataUpdateManyMutationInput!, where: Cup_dataWhereInput): BatchPayload!
  upsertCup_data(where: Cup_dataWhereUniqueInput!, create: Cup_dataCreateInput!, update: Cup_dataUpdateInput!): Cup_data!
  deleteCup_data(where: Cup_dataWhereUniqueInput!): Cup_data
  deleteManyCup_datas(where: Cup_dataWhereInput): BatchPayload!
  createCup_data_answer(data: Cup_data_answerCreateInput!): Cup_data_answer!
  updateCup_data_answer(data: Cup_data_answerUpdateInput!, where: Cup_data_answerWhereUniqueInput!): Cup_data_answer
  updateManyCup_data_answers(data: Cup_data_answerUpdateManyMutationInput!, where: Cup_data_answerWhereInput): BatchPayload!
  upsertCup_data_answer(where: Cup_data_answerWhereUniqueInput!, create: Cup_data_answerCreateInput!, update: Cup_data_answerUpdateInput!): Cup_data_answer!
  deleteCup_data_answer(where: Cup_data_answerWhereUniqueInput!): Cup_data_answer
  deleteManyCup_data_answers(where: Cup_data_answerWhereInput): BatchPayload!
  createCup_data_colour_calc(data: Cup_data_colour_calcCreateInput!): Cup_data_colour_calc!
  updateCup_data_colour_calc(data: Cup_data_colour_calcUpdateInput!, where: Cup_data_colour_calcWhereUniqueInput!): Cup_data_colour_calc
  updateManyCup_data_colour_calcs(data: Cup_data_colour_calcUpdateManyMutationInput!, where: Cup_data_colour_calcWhereInput): BatchPayload!
  upsertCup_data_colour_calc(where: Cup_data_colour_calcWhereUniqueInput!, create: Cup_data_colour_calcCreateInput!, update: Cup_data_colour_calcUpdateInput!): Cup_data_colour_calc!
  deleteCup_data_colour_calc(where: Cup_data_colour_calcWhereUniqueInput!): Cup_data_colour_calc
  deleteManyCup_data_colour_calcs(where: Cup_data_colour_calcWhereInput): BatchPayload!
  createCup_data_colour_calib(data: Cup_data_colour_calibCreateInput!): Cup_data_colour_calib!
  updateCup_data_colour_calib(data: Cup_data_colour_calibUpdateInput!, where: Cup_data_colour_calibWhereUniqueInput!): Cup_data_colour_calib
  updateManyCup_data_colour_calibs(data: Cup_data_colour_calibUpdateManyMutationInput!, where: Cup_data_colour_calibWhereInput): BatchPayload!
  upsertCup_data_colour_calib(where: Cup_data_colour_calibWhereUniqueInput!, create: Cup_data_colour_calibCreateInput!, update: Cup_data_colour_calibUpdateInput!): Cup_data_colour_calib!
  deleteCup_data_colour_calib(where: Cup_data_colour_calibWhereUniqueInput!): Cup_data_colour_calib
  deleteManyCup_data_colour_calibs(where: Cup_data_colour_calibWhereInput): BatchPayload!
  createCup_data_man_mdates(data: Cup_data_man_mdatesCreateInput!): Cup_data_man_mdates!
  updateCup_data_man_mdates(data: Cup_data_man_mdatesUpdateInput!, where: Cup_data_man_mdatesWhereUniqueInput!): Cup_data_man_mdates
  updateManyCup_data_man_mdateses(data: Cup_data_man_mdatesUpdateManyMutationInput!, where: Cup_data_man_mdatesWhereInput): BatchPayload!
  upsertCup_data_man_mdates(where: Cup_data_man_mdatesWhereUniqueInput!, create: Cup_data_man_mdatesCreateInput!, update: Cup_data_man_mdatesUpdateInput!): Cup_data_man_mdates!
  deleteCup_data_man_mdates(where: Cup_data_man_mdatesWhereUniqueInput!): Cup_data_man_mdates
  deleteManyCup_data_man_mdateses(where: Cup_data_man_mdatesWhereInput): BatchPayload!
  createCup_data_proc_flow(data: Cup_data_proc_flowCreateInput!): Cup_data_proc_flow!
  updateCup_data_proc_flow(data: Cup_data_proc_flowUpdateInput!, where: Cup_data_proc_flowWhereUniqueInput!): Cup_data_proc_flow
  updateManyCup_data_proc_flows(data: Cup_data_proc_flowUpdateManyMutationInput!, where: Cup_data_proc_flowWhereInput): BatchPayload!
  upsertCup_data_proc_flow(where: Cup_data_proc_flowWhereUniqueInput!, create: Cup_data_proc_flowCreateInput!, update: Cup_data_proc_flowUpdateInput!): Cup_data_proc_flow!
  deleteCup_data_proc_flow(where: Cup_data_proc_flowWhereUniqueInput!): Cup_data_proc_flow
  deleteManyCup_data_proc_flows(where: Cup_data_proc_flowWhereInput): BatchPayload!
  createCup_data_proc_mdates(data: Cup_data_proc_mdatesCreateInput!): Cup_data_proc_mdates!
  updateCup_data_proc_mdates(data: Cup_data_proc_mdatesUpdateInput!, where: Cup_data_proc_mdatesWhereUniqueInput!): Cup_data_proc_mdates
  updateManyCup_data_proc_mdateses(data: Cup_data_proc_mdatesUpdateManyMutationInput!, where: Cup_data_proc_mdatesWhereInput): BatchPayload!
  upsertCup_data_proc_mdates(where: Cup_data_proc_mdatesWhereUniqueInput!, create: Cup_data_proc_mdatesCreateInput!, update: Cup_data_proc_mdatesUpdateInput!): Cup_data_proc_mdates!
  deleteCup_data_proc_mdates(where: Cup_data_proc_mdatesWhereUniqueInput!): Cup_data_proc_mdates
  deleteManyCup_data_proc_mdateses(where: Cup_data_proc_mdatesWhereInput): BatchPayload!
  createCup_data_proc_volume(data: Cup_data_proc_volumeCreateInput!): Cup_data_proc_volume!
  updateCup_data_proc_volume(data: Cup_data_proc_volumeUpdateInput!, where: Cup_data_proc_volumeWhereUniqueInput!): Cup_data_proc_volume
  updateManyCup_data_proc_volumes(data: Cup_data_proc_volumeUpdateManyMutationInput!, where: Cup_data_proc_volumeWhereInput): BatchPayload!
  upsertCup_data_proc_volume(where: Cup_data_proc_volumeWhereUniqueInput!, create: Cup_data_proc_volumeCreateInput!, update: Cup_data_proc_volumeUpdateInput!): Cup_data_proc_volume!
  deleteCup_data_proc_volume(where: Cup_data_proc_volumeWhereUniqueInput!): Cup_data_proc_volume
  deleteManyCup_data_proc_volumes(where: Cup_data_proc_volumeWhereInput): BatchPayload!
  createCup_data_qa_response(data: Cup_data_qa_responseCreateInput!): Cup_data_qa_response!
  updateCup_data_qa_response(data: Cup_data_qa_responseUpdateInput!, where: Cup_data_qa_responseWhereUniqueInput!): Cup_data_qa_response
  updateManyCup_data_qa_responses(data: Cup_data_qa_responseUpdateManyMutationInput!, where: Cup_data_qa_responseWhereInput): BatchPayload!
  upsertCup_data_qa_response(where: Cup_data_qa_responseWhereUniqueInput!, create: Cup_data_qa_responseCreateInput!, update: Cup_data_qa_responseUpdateInput!): Cup_data_qa_response!
  deleteCup_data_qa_response(where: Cup_data_qa_responseWhereUniqueInput!): Cup_data_qa_response
  deleteManyCup_data_qa_responses(where: Cup_data_qa_responseWhereInput): BatchPayload!
  createCup_data_question(data: Cup_data_questionCreateInput!): Cup_data_question!
  updateCup_data_question(data: Cup_data_questionUpdateInput!, where: Cup_data_questionWhereUniqueInput!): Cup_data_question
  updateManyCup_data_questions(data: Cup_data_questionUpdateManyMutationInput!, where: Cup_data_questionWhereInput): BatchPayload!
  upsertCup_data_question(where: Cup_data_questionWhereUniqueInput!, create: Cup_data_questionCreateInput!, update: Cup_data_questionUpdateInput!): Cup_data_question!
  deleteCup_data_question(where: Cup_data_questionWhereUniqueInput!): Cup_data_question
  deleteManyCup_data_questions(where: Cup_data_questionWhereInput): BatchPayload!
  createCup_data_raw(data: Cup_data_rawCreateInput!): Cup_data_raw!
  updateCup_data_raw(data: Cup_data_rawUpdateInput!, where: Cup_data_rawWhereUniqueInput!): Cup_data_raw
  updateManyCup_data_raws(data: Cup_data_rawUpdateManyMutationInput!, where: Cup_data_rawWhereInput): BatchPayload!
  upsertCup_data_raw(where: Cup_data_rawWhereUniqueInput!, create: Cup_data_rawCreateInput!, update: Cup_data_rawUpdateInput!): Cup_data_raw!
  deleteCup_data_raw(where: Cup_data_rawWhereUniqueInput!): Cup_data_raw
  deleteManyCup_data_raws(where: Cup_data_rawWhereInput): BatchPayload!
  createCup_data_rejection(data: Cup_data_rejectionCreateInput!): Cup_data_rejection!
  updateCup_data_rejection(data: Cup_data_rejectionUpdateInput!, where: Cup_data_rejectionWhereUniqueInput!): Cup_data_rejection
  updateManyCup_data_rejections(data: Cup_data_rejectionUpdateManyMutationInput!, where: Cup_data_rejectionWhereInput): BatchPayload!
  upsertCup_data_rejection(where: Cup_data_rejectionWhereUniqueInput!, create: Cup_data_rejectionCreateInput!, update: Cup_data_rejectionUpdateInput!): Cup_data_rejection!
  deleteCup_data_rejection(where: Cup_data_rejectionWhereUniqueInput!): Cup_data_rejection
  deleteManyCup_data_rejections(where: Cup_data_rejectionWhereInput): BatchPayload!
  createCup_data_user_remove(data: Cup_data_user_removeCreateInput!): Cup_data_user_remove!
  updateCup_data_user_remove(data: Cup_data_user_removeUpdateInput!, where: Cup_data_user_removeWhereUniqueInput!): Cup_data_user_remove
  updateManyCup_data_user_removes(data: Cup_data_user_removeUpdateManyMutationInput!, where: Cup_data_user_removeWhereInput): BatchPayload!
  upsertCup_data_user_remove(where: Cup_data_user_removeWhereUniqueInput!, create: Cup_data_user_removeCreateInput!, update: Cup_data_user_removeUpdateInput!): Cup_data_user_remove!
  deleteCup_data_user_remove(where: Cup_data_user_removeWhereUniqueInput!): Cup_data_user_remove
  deleteManyCup_data_user_removes(where: Cup_data_user_removeWhereInput): BatchPayload!
  createCup_data_user_remove_explain(data: Cup_data_user_remove_explainCreateInput!): Cup_data_user_remove_explain!
  updateCup_data_user_remove_explain(data: Cup_data_user_remove_explainUpdateInput!, where: Cup_data_user_remove_explainWhereUniqueInput!): Cup_data_user_remove_explain
  updateManyCup_data_user_remove_explains(data: Cup_data_user_remove_explainUpdateManyMutationInput!, where: Cup_data_user_remove_explainWhereInput): BatchPayload!
  upsertCup_data_user_remove_explain(where: Cup_data_user_remove_explainWhereUniqueInput!, create: Cup_data_user_remove_explainCreateInput!, update: Cup_data_user_remove_explainUpdateInput!): Cup_data_user_remove_explain!
  deleteCup_data_user_remove_explain(where: Cup_data_user_remove_explainWhereUniqueInput!): Cup_data_user_remove_explain
  deleteManyCup_data_user_remove_explains(where: Cup_data_user_remove_explainWhereInput): BatchPayload!
  createEthnicity(data: EthnicityCreateInput!): Ethnicity!
  updateEthnicity(data: EthnicityUpdateInput!, where: EthnicityWhereUniqueInput!): Ethnicity
  updateManyEthnicities(data: EthnicityUpdateManyMutationInput!, where: EthnicityWhereInput): BatchPayload!
  upsertEthnicity(where: EthnicityWhereUniqueInput!, create: EthnicityCreateInput!, update: EthnicityUpdateInput!): Ethnicity!
  deleteEthnicity(where: EthnicityWhereUniqueInput!): Ethnicity
  deleteManyEthnicities(where: EthnicityWhereInput): BatchPayload!
  createFirmware(data: FirmwareCreateInput!): Firmware!
  updateFirmware(data: FirmwareUpdateInput!, where: FirmwareWhereUniqueInput!): Firmware
  updateManyFirmwares(data: FirmwareUpdateManyMutationInput!, where: FirmwareWhereInput): BatchPayload!
  upsertFirmware(where: FirmwareWhereUniqueInput!, create: FirmwareCreateInput!, update: FirmwareUpdateInput!): Firmware!
  deleteFirmware(where: FirmwareWhereUniqueInput!): Firmware
  deleteManyFirmwares(where: FirmwareWhereInput): BatchPayload!
  createHardware(data: HardwareCreateInput!): Hardware!
  updateHardware(data: HardwareUpdateInput!, where: HardwareWhereUniqueInput!): Hardware
  updateManyHardwares(data: HardwareUpdateManyMutationInput!, where: HardwareWhereInput): BatchPayload!
  upsertHardware(where: HardwareWhereUniqueInput!, create: HardwareCreateInput!, update: HardwareUpdateInput!): Hardware!
  deleteHardware(where: HardwareWhereUniqueInput!): Hardware
  deleteManyHardwares(where: HardwareWhereInput): BatchPayload!
  createPlatform_comp(data: Platform_compCreateInput!): Platform_comp!
  updatePlatform_comp(data: Platform_compUpdateInput!, where: Platform_compWhereUniqueInput!): Platform_comp
  updateManyPlatform_comps(data: Platform_compUpdateManyMutationInput!, where: Platform_compWhereInput): BatchPayload!
  upsertPlatform_comp(where: Platform_compWhereUniqueInput!, create: Platform_compCreateInput!, update: Platform_compUpdateInput!): Platform_comp!
  deletePlatform_comp(where: Platform_compWhereUniqueInput!): Platform_comp
  deleteManyPlatform_comps(where: Platform_compWhereInput): BatchPayload!
  createUser_coin_history(data: User_coin_historyCreateInput!): User_coin_history!
  updateUser_coin_history(data: User_coin_historyUpdateInput!, where: User_coin_historyWhereUniqueInput!): User_coin_history
  updateManyUser_coin_histories(data: User_coin_historyUpdateManyMutationInput!, where: User_coin_historyWhereInput): BatchPayload!
  upsertUser_coin_history(where: User_coin_historyWhereUniqueInput!, create: User_coin_historyCreateInput!, update: User_coin_historyUpdateInput!): User_coin_history!
  deleteUser_coin_history(where: User_coin_historyWhereUniqueInput!): User_coin_history
  deleteManyUser_coin_histories(where: User_coin_historyWhereInput): BatchPayload!
  createUser_cups(data: User_cupsCreateInput!): User_cups!
  updateUser_cups(data: User_cupsUpdateInput!, where: User_cupsWhereUniqueInput!): User_cups
  upsertUser_cups(where: User_cupsWhereUniqueInput!, create: User_cupsCreateInput!, update: User_cupsUpdateInput!): User_cups!
  deleteUser_cups(where: User_cupsWhereUniqueInput!): User_cups
  deleteManyUser_cupses(where: User_cupsWhereInput): BatchPayload!
  createUser_interview_data(data: User_interview_dataCreateInput!): User_interview_data!
  updateUser_interview_data(data: User_interview_dataUpdateInput!, where: User_interview_dataWhereUniqueInput!): User_interview_data
  updateManyUser_interview_datas(data: User_interview_dataUpdateManyMutationInput!, where: User_interview_dataWhereInput): BatchPayload!
  upsertUser_interview_data(where: User_interview_dataWhereUniqueInput!, create: User_interview_dataCreateInput!, update: User_interview_dataUpdateInput!): User_interview_data!
  deleteUser_interview_data(where: User_interview_dataWhereUniqueInput!): User_interview_data
  deleteManyUser_interview_datas(where: User_interview_dataWhereInput): BatchPayload!
  createUser_interview_questions(data: User_interview_questionsCreateInput!): User_interview_questions!
  updateUser_interview_questions(data: User_interview_questionsUpdateInput!, where: User_interview_questionsWhereUniqueInput!): User_interview_questions
  updateManyUser_interview_questionses(data: User_interview_questionsUpdateManyMutationInput!, where: User_interview_questionsWhereInput): BatchPayload!
  upsertUser_interview_questions(where: User_interview_questionsWhereUniqueInput!, create: User_interview_questionsCreateInput!, update: User_interview_questionsUpdateInput!): User_interview_questions!
  deleteUser_interview_questions(where: User_interview_questionsWhereUniqueInput!): User_interview_questions
  deleteManyUser_interview_questionses(where: User_interview_questionsWhereInput): BatchPayload!
  createUser_record_data_by_day(data: User_record_data_by_dayCreateInput!): User_record_data_by_day!
  updateUser_record_data_by_day(data: User_record_data_by_dayUpdateInput!, where: User_record_data_by_dayWhereUniqueInput!): User_record_data_by_day
  updateManyUser_record_data_by_days(data: User_record_data_by_dayUpdateManyMutationInput!, where: User_record_data_by_dayWhereInput): BatchPayload!
  upsertUser_record_data_by_day(where: User_record_data_by_dayWhereUniqueInput!, create: User_record_data_by_dayCreateInput!, update: User_record_data_by_dayUpdateInput!): User_record_data_by_day!
  deleteUser_record_data_by_day(where: User_record_data_by_dayWhereUniqueInput!): User_record_data_by_day
  deleteManyUser_record_data_by_days(where: User_record_data_by_dayWhereInput): BatchPayload!
  createUser_record_data_by_period(data: User_record_data_by_periodCreateInput!): User_record_data_by_period!
  updateUser_record_data_by_period(data: User_record_data_by_periodUpdateInput!, where: User_record_data_by_periodWhereUniqueInput!): User_record_data_by_period
  updateManyUser_record_data_by_periods(data: User_record_data_by_periodUpdateManyMutationInput!, where: User_record_data_by_periodWhereInput): BatchPayload!
  upsertUser_record_data_by_period(where: User_record_data_by_periodWhereUniqueInput!, create: User_record_data_by_periodCreateInput!, update: User_record_data_by_periodUpdateInput!): User_record_data_by_period!
  deleteUser_record_data_by_period(where: User_record_data_by_periodWhereUniqueInput!): User_record_data_by_period
  deleteManyUser_record_data_by_periods(where: User_record_data_by_periodWhereInput): BatchPayload!
  createUser_record_data_by_time(data: User_record_data_by_timeCreateInput!): User_record_data_by_time!
  updateUser_record_data_by_time(data: User_record_data_by_timeUpdateInput!, where: User_record_data_by_timeWhereUniqueInput!): User_record_data_by_time
  updateManyUser_record_data_by_times(data: User_record_data_by_timeUpdateManyMutationInput!, where: User_record_data_by_timeWhereInput): BatchPayload!
  upsertUser_record_data_by_time(where: User_record_data_by_timeWhereUniqueInput!, create: User_record_data_by_timeCreateInput!, update: User_record_data_by_timeUpdateInput!): User_record_data_by_time!
  deleteUser_record_data_by_time(where: User_record_data_by_timeWhereUniqueInput!): User_record_data_by_time
  deleteManyUser_record_data_by_times(where: User_record_data_by_timeWhereInput): BatchPayload!
  createUsers(data: UsersCreateInput!): Users!
  updateUsers(data: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users
  updateManyUserses(data: UsersUpdateManyMutationInput!, where: UsersWhereInput): BatchPayload!
  upsertUsers(where: UsersWhereUniqueInput!, create: UsersCreateInput!, update: UsersUpdateInput!): Users!
  deleteUsers(where: UsersWhereUniqueInput!): Users
  deleteManyUserses(where: UsersWhereInput): BatchPayload!
  createUsers_data_analysis(data: Users_data_analysisCreateInput!): Users_data_analysis!
  updateUsers_data_analysis(data: Users_data_analysisUpdateInput!, where: Users_data_analysisWhereUniqueInput!): Users_data_analysis
  updateManyUsers_data_analyses(data: Users_data_analysisUpdateManyMutationInput!, where: Users_data_analysisWhereInput): BatchPayload!
  upsertUsers_data_analysis(where: Users_data_analysisWhereUniqueInput!, create: Users_data_analysisCreateInput!, update: Users_data_analysisUpdateInput!): Users_data_analysis!
  deleteUsers_data_analysis(where: Users_data_analysisWhereUniqueInput!): Users_data_analysis
  deleteManyUsers_data_analyses(where: Users_data_analysisWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Platform_comp {
  id: Int!
  phone_id: Int!
  platform_id: Int!
  problem_history: Boolean
  software_id: Int!
  success_history: Boolean
}

type Platform_compConnection {
  pageInfo: PageInfo!
  edges: [Platform_compEdge]!
  aggregate: AggregatePlatform_comp!
}

input Platform_compCreateInput {
  id: Int
  phone_id: Int!
  platform_id: Int!
  problem_history: Boolean
  software_id: Int!
  success_history: Boolean
}

type Platform_compEdge {
  node: Platform_comp!
  cursor: String!
}

enum Platform_compOrderByInput {
  id_ASC
  id_DESC
  phone_id_ASC
  phone_id_DESC
  platform_id_ASC
  platform_id_DESC
  problem_history_ASC
  problem_history_DESC
  software_id_ASC
  software_id_DESC
  success_history_ASC
  success_history_DESC
}

type Platform_compPreviousValues {
  id: Int!
  phone_id: Int!
  platform_id: Int!
  problem_history: Boolean
  software_id: Int!
  success_history: Boolean
}

type Platform_compSubscriptionPayload {
  mutation: MutationType!
  node: Platform_comp
  updatedFields: [String!]
  previousValues: Platform_compPreviousValues
}

input Platform_compSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Platform_compWhereInput
  AND: [Platform_compSubscriptionWhereInput!]
  OR: [Platform_compSubscriptionWhereInput!]
  NOT: [Platform_compSubscriptionWhereInput!]
}

input Platform_compUpdateInput {
  phone_id: Int
  platform_id: Int
  problem_history: Boolean
  software_id: Int
  success_history: Boolean
}

input Platform_compUpdateManyMutationInput {
  phone_id: Int
  platform_id: Int
  problem_history: Boolean
  software_id: Int
  success_history: Boolean
}

input Platform_compWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  phone_id: Int
  phone_id_not: Int
  phone_id_in: [Int!]
  phone_id_not_in: [Int!]
  phone_id_lt: Int
  phone_id_lte: Int
  phone_id_gt: Int
  phone_id_gte: Int
  platform_id: Int
  platform_id_not: Int
  platform_id_in: [Int!]
  platform_id_not_in: [Int!]
  platform_id_lt: Int
  platform_id_lte: Int
  platform_id_gt: Int
  platform_id_gte: Int
  problem_history: Boolean
  problem_history_not: Boolean
  software_id: Int
  software_id_not: Int
  software_id_in: [Int!]
  software_id_not_in: [Int!]
  software_id_lt: Int
  software_id_lte: Int
  software_id_gt: Int
  software_id_gte: Int
  success_history: Boolean
  success_history_not: Boolean
  AND: [Platform_compWhereInput!]
  OR: [Platform_compWhereInput!]
  NOT: [Platform_compWhereInput!]
}

input Platform_compWhereUniqueInput {
  id: Int
}

type Query {
  answerTypes(where: Answer_typesWhereUniqueInput!): Answer_types
  answerTypeses(where: Answer_typesWhereInput, orderBy: Answer_typesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Answer_types]!
  answerTypesesConnection(where: Answer_typesWhereInput, orderBy: Answer_typesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Answer_typesConnection!
  appServerSync(where: App_server_syncWhereUniqueInput!): App_server_sync
  appServerSyncs(where: App_server_syncWhereInput, orderBy: App_server_syncOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [App_server_sync]!
  appServerSyncsConnection(where: App_server_syncWhereInput, orderBy: App_server_syncOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): App_server_syncConnection!
  calibration(where: CalibrationWhereUniqueInput!): Calibration
  calibrations(where: CalibrationWhereInput, orderBy: CalibrationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Calibration]!
  calibrationsConnection(where: CalibrationWhereInput, orderBy: CalibrationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CalibrationConnection!
  company(where: CompanyWhereUniqueInput!): Company
  companies(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company]!
  companiesConnection(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CompanyConnection!
  country(where: CountryWhereUniqueInput!): Country
  countries(where: CountryWhereInput, orderBy: CountryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Country]!
  countriesConnection(where: CountryWhereInput, orderBy: CountryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CountryConnection!
  cup(where: CupWhereUniqueInput!): Cup
  cups(where: CupWhereInput, orderBy: CupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup]!
  cupsConnection(where: CupWhereInput, orderBy: CupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CupConnection!
  cupAppSync(where: Cup_app_syncWhereUniqueInput!): Cup_app_sync
  cupAppSyncs(where: Cup_app_syncWhereInput, orderBy: Cup_app_syncOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_app_sync]!
  cupAppSyncsConnection(where: Cup_app_syncWhereInput, orderBy: Cup_app_syncOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_app_syncConnection!
  cupData(where: Cup_dataWhereUniqueInput!): Cup_data
  cupDatas(where: Cup_dataWhereInput, orderBy: Cup_dataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data]!
  cupDatasConnection(where: Cup_dataWhereInput, orderBy: Cup_dataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_dataConnection!
  cupDataAnswer(where: Cup_data_answerWhereUniqueInput!): Cup_data_answer
  cupDataAnswers(where: Cup_data_answerWhereInput, orderBy: Cup_data_answerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_answer]!
  cupDataAnswersConnection(where: Cup_data_answerWhereInput, orderBy: Cup_data_answerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_answerConnection!
  cupDataColourCalc(where: Cup_data_colour_calcWhereUniqueInput!): Cup_data_colour_calc
  cupDataColourCalcs(where: Cup_data_colour_calcWhereInput, orderBy: Cup_data_colour_calcOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_colour_calc]!
  cupDataColourCalcsConnection(where: Cup_data_colour_calcWhereInput, orderBy: Cup_data_colour_calcOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_colour_calcConnection!
  cupDataColourCalib(where: Cup_data_colour_calibWhereUniqueInput!): Cup_data_colour_calib
  cupDataColourCalibs(where: Cup_data_colour_calibWhereInput, orderBy: Cup_data_colour_calibOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_colour_calib]!
  cupDataColourCalibsConnection(where: Cup_data_colour_calibWhereInput, orderBy: Cup_data_colour_calibOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_colour_calibConnection!
  cupDataManMdates(where: Cup_data_man_mdatesWhereUniqueInput!): Cup_data_man_mdates
  cupDataManMdateses(where: Cup_data_man_mdatesWhereInput, orderBy: Cup_data_man_mdatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_man_mdates]!
  cupDataManMdatesesConnection(where: Cup_data_man_mdatesWhereInput, orderBy: Cup_data_man_mdatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_man_mdatesConnection!
  cupDataProcFlow(where: Cup_data_proc_flowWhereUniqueInput!): Cup_data_proc_flow
  cupDataProcFlows(where: Cup_data_proc_flowWhereInput, orderBy: Cup_data_proc_flowOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_proc_flow]!
  cupDataProcFlowsConnection(where: Cup_data_proc_flowWhereInput, orderBy: Cup_data_proc_flowOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_proc_flowConnection!
  cupDataProcMdates(where: Cup_data_proc_mdatesWhereUniqueInput!): Cup_data_proc_mdates
  cupDataProcMdateses(where: Cup_data_proc_mdatesWhereInput, orderBy: Cup_data_proc_mdatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_proc_mdates]!
  cupDataProcMdatesesConnection(where: Cup_data_proc_mdatesWhereInput, orderBy: Cup_data_proc_mdatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_proc_mdatesConnection!
  cupDataProcVolume(where: Cup_data_proc_volumeWhereUniqueInput!): Cup_data_proc_volume
  cupDataProcVolumes(where: Cup_data_proc_volumeWhereInput, orderBy: Cup_data_proc_volumeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_proc_volume]!
  cupDataProcVolumesConnection(where: Cup_data_proc_volumeWhereInput, orderBy: Cup_data_proc_volumeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_proc_volumeConnection!
  cupDataQaResponse(where: Cup_data_qa_responseWhereUniqueInput!): Cup_data_qa_response
  cupDataQaResponses(where: Cup_data_qa_responseWhereInput, orderBy: Cup_data_qa_responseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_qa_response]!
  cupDataQaResponsesConnection(where: Cup_data_qa_responseWhereInput, orderBy: Cup_data_qa_responseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_qa_responseConnection!
  cupDataQuestion(where: Cup_data_questionWhereUniqueInput!): Cup_data_question
  cupDataQuestions(where: Cup_data_questionWhereInput, orderBy: Cup_data_questionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_question]!
  cupDataQuestionsConnection(where: Cup_data_questionWhereInput, orderBy: Cup_data_questionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_questionConnection!
  cupDataRaw(where: Cup_data_rawWhereUniqueInput!): Cup_data_raw
  cupDataRaws(where: Cup_data_rawWhereInput, orderBy: Cup_data_rawOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_raw]!
  cupDataRawsConnection(where: Cup_data_rawWhereInput, orderBy: Cup_data_rawOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_rawConnection!
  cupDataRejection(where: Cup_data_rejectionWhereUniqueInput!): Cup_data_rejection
  cupDataRejections(where: Cup_data_rejectionWhereInput, orderBy: Cup_data_rejectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_rejection]!
  cupDataRejectionsConnection(where: Cup_data_rejectionWhereInput, orderBy: Cup_data_rejectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_rejectionConnection!
  cupDataUserRemove(where: Cup_data_user_removeWhereUniqueInput!): Cup_data_user_remove
  cupDataUserRemoves(where: Cup_data_user_removeWhereInput, orderBy: Cup_data_user_removeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_user_remove]!
  cupDataUserRemovesConnection(where: Cup_data_user_removeWhereInput, orderBy: Cup_data_user_removeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_user_removeConnection!
  cupDataUserRemoveExplain(where: Cup_data_user_remove_explainWhereUniqueInput!): Cup_data_user_remove_explain
  cupDataUserRemoveExplains(where: Cup_data_user_remove_explainWhereInput, orderBy: Cup_data_user_remove_explainOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_user_remove_explain]!
  cupDataUserRemoveExplainsConnection(where: Cup_data_user_remove_explainWhereInput, orderBy: Cup_data_user_remove_explainOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Cup_data_user_remove_explainConnection!
  ethnicity(where: EthnicityWhereUniqueInput!): Ethnicity
  ethnicities(where: EthnicityWhereInput, orderBy: EthnicityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ethnicity]!
  ethnicitiesConnection(where: EthnicityWhereInput, orderBy: EthnicityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EthnicityConnection!
  firmware(where: FirmwareWhereUniqueInput!): Firmware
  firmwares(where: FirmwareWhereInput, orderBy: FirmwareOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Firmware]!
  firmwaresConnection(where: FirmwareWhereInput, orderBy: FirmwareOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FirmwareConnection!
  hardware(where: HardwareWhereUniqueInput!): Hardware
  hardwares(where: HardwareWhereInput, orderBy: HardwareOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Hardware]!
  hardwaresConnection(where: HardwareWhereInput, orderBy: HardwareOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): HardwareConnection!
  platformComp(where: Platform_compWhereUniqueInput!): Platform_comp
  platformComps(where: Platform_compWhereInput, orderBy: Platform_compOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Platform_comp]!
  platformCompsConnection(where: Platform_compWhereInput, orderBy: Platform_compOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Platform_compConnection!
  userCoinHistory(where: User_coin_historyWhereUniqueInput!): User_coin_history
  userCoinHistories(where: User_coin_historyWhereInput, orderBy: User_coin_historyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_coin_history]!
  userCoinHistoriesConnection(where: User_coin_historyWhereInput, orderBy: User_coin_historyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): User_coin_historyConnection!
  userCups(where: User_cupsWhereUniqueInput!): User_cups
  userCupses(where: User_cupsWhereInput, orderBy: User_cupsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_cups]!
  userCupsesConnection(where: User_cupsWhereInput, orderBy: User_cupsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): User_cupsConnection!
  userInterviewData(where: User_interview_dataWhereUniqueInput!): User_interview_data
  userInterviewDatas(where: User_interview_dataWhereInput, orderBy: User_interview_dataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_interview_data]!
  userInterviewDatasConnection(where: User_interview_dataWhereInput, orderBy: User_interview_dataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): User_interview_dataConnection!
  userInterviewQuestions(where: User_interview_questionsWhereUniqueInput!): User_interview_questions
  userInterviewQuestionses(where: User_interview_questionsWhereInput, orderBy: User_interview_questionsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_interview_questions]!
  userInterviewQuestionsesConnection(where: User_interview_questionsWhereInput, orderBy: User_interview_questionsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): User_interview_questionsConnection!
  userRecordDataByDay(where: User_record_data_by_dayWhereUniqueInput!): User_record_data_by_day
  userRecordDataByDays(where: User_record_data_by_dayWhereInput, orderBy: User_record_data_by_dayOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_record_data_by_day]!
  userRecordDataByDaysConnection(where: User_record_data_by_dayWhereInput, orderBy: User_record_data_by_dayOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): User_record_data_by_dayConnection!
  userRecordDataByPeriod(where: User_record_data_by_periodWhereUniqueInput!): User_record_data_by_period
  userRecordDataByPeriods(where: User_record_data_by_periodWhereInput, orderBy: User_record_data_by_periodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_record_data_by_period]!
  userRecordDataByPeriodsConnection(where: User_record_data_by_periodWhereInput, orderBy: User_record_data_by_periodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): User_record_data_by_periodConnection!
  userRecordDataByTime(where: User_record_data_by_timeWhereUniqueInput!): User_record_data_by_time
  userRecordDataByTimes(where: User_record_data_by_timeWhereInput, orderBy: User_record_data_by_timeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_record_data_by_time]!
  userRecordDataByTimesConnection(where: User_record_data_by_timeWhereInput, orderBy: User_record_data_by_timeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): User_record_data_by_timeConnection!
  users(where: UsersWhereUniqueInput!): Users
  userses(where: UsersWhereInput, orderBy: UsersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Users]!
  usersesConnection(where: UsersWhereInput, orderBy: UsersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UsersConnection!
  usersDataAnalysis(where: Users_data_analysisWhereUniqueInput!): Users_data_analysis
  usersDataAnalyses(where: Users_data_analysisWhereInput, orderBy: Users_data_analysisOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Users_data_analysis]!
  usersDataAnalysesConnection(where: Users_data_analysisWhereInput, orderBy: Users_data_analysisOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): Users_data_analysisConnection!
  node(id: ID!): Node
}

type Subscription {
  answerTypes(where: Answer_typesSubscriptionWhereInput): Answer_typesSubscriptionPayload
  appServerSync(where: App_server_syncSubscriptionWhereInput): App_server_syncSubscriptionPayload
  calibration(where: CalibrationSubscriptionWhereInput): CalibrationSubscriptionPayload
  company(where: CompanySubscriptionWhereInput): CompanySubscriptionPayload
  country(where: CountrySubscriptionWhereInput): CountrySubscriptionPayload
  cup(where: CupSubscriptionWhereInput): CupSubscriptionPayload
  cupAppSync(where: Cup_app_syncSubscriptionWhereInput): Cup_app_syncSubscriptionPayload
  cupData(where: Cup_dataSubscriptionWhereInput): Cup_dataSubscriptionPayload
  cupDataAnswer(where: Cup_data_answerSubscriptionWhereInput): Cup_data_answerSubscriptionPayload
  cupDataColourCalc(where: Cup_data_colour_calcSubscriptionWhereInput): Cup_data_colour_calcSubscriptionPayload
  cupDataColourCalib(where: Cup_data_colour_calibSubscriptionWhereInput): Cup_data_colour_calibSubscriptionPayload
  cupDataManMdates(where: Cup_data_man_mdatesSubscriptionWhereInput): Cup_data_man_mdatesSubscriptionPayload
  cupDataProcFlow(where: Cup_data_proc_flowSubscriptionWhereInput): Cup_data_proc_flowSubscriptionPayload
  cupDataProcMdates(where: Cup_data_proc_mdatesSubscriptionWhereInput): Cup_data_proc_mdatesSubscriptionPayload
  cupDataProcVolume(where: Cup_data_proc_volumeSubscriptionWhereInput): Cup_data_proc_volumeSubscriptionPayload
  cupDataQaResponse(where: Cup_data_qa_responseSubscriptionWhereInput): Cup_data_qa_responseSubscriptionPayload
  cupDataQuestion(where: Cup_data_questionSubscriptionWhereInput): Cup_data_questionSubscriptionPayload
  cupDataRaw(where: Cup_data_rawSubscriptionWhereInput): Cup_data_rawSubscriptionPayload
  cupDataRejection(where: Cup_data_rejectionSubscriptionWhereInput): Cup_data_rejectionSubscriptionPayload
  cupDataUserRemove(where: Cup_data_user_removeSubscriptionWhereInput): Cup_data_user_removeSubscriptionPayload
  cupDataUserRemoveExplain(where: Cup_data_user_remove_explainSubscriptionWhereInput): Cup_data_user_remove_explainSubscriptionPayload
  ethnicity(where: EthnicitySubscriptionWhereInput): EthnicitySubscriptionPayload
  firmware(where: FirmwareSubscriptionWhereInput): FirmwareSubscriptionPayload
  hardware(where: HardwareSubscriptionWhereInput): HardwareSubscriptionPayload
  platformComp(where: Platform_compSubscriptionWhereInput): Platform_compSubscriptionPayload
  userCoinHistory(where: User_coin_historySubscriptionWhereInput): User_coin_historySubscriptionPayload
  userCups(where: User_cupsSubscriptionWhereInput): User_cupsSubscriptionPayload
  userInterviewData(where: User_interview_dataSubscriptionWhereInput): User_interview_dataSubscriptionPayload
  userInterviewQuestions(where: User_interview_questionsSubscriptionWhereInput): User_interview_questionsSubscriptionPayload
  userRecordDataByDay(where: User_record_data_by_daySubscriptionWhereInput): User_record_data_by_daySubscriptionPayload
  userRecordDataByPeriod(where: User_record_data_by_periodSubscriptionWhereInput): User_record_data_by_periodSubscriptionPayload
  userRecordDataByTime(where: User_record_data_by_timeSubscriptionWhereInput): User_record_data_by_timeSubscriptionPayload
  users(where: UsersSubscriptionWhereInput): UsersSubscriptionPayload
  usersDataAnalysis(where: Users_data_analysisSubscriptionWhereInput): Users_data_analysisSubscriptionPayload
}

type User_coin_history {
  id: Int!
  category: String!
  coin: Int!
  contents: String!
  date: DateTime!
  user: Users
  txhash: String!
  user_record_data_by_periods(where: User_record_data_by_periodWhereInput, orderBy: User_record_data_by_periodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_record_data_by_period!]
}

type User_coin_historyConnection {
  pageInfo: PageInfo!
  edges: [User_coin_historyEdge]!
  aggregate: AggregateUser_coin_history!
}

input User_coin_historyCreateInput {
  id: Int
  category: String!
  coin: Int!
  contents: String!
  date: DateTime!
  user: UsersCreateOneWithoutUser_coin_historiesInput
  txhash: String!
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutCoin_history_rowInput
}

input User_coin_historyCreateManyWithoutUserInput {
  create: [User_coin_historyCreateWithoutUserInput!]
  connect: [User_coin_historyWhereUniqueInput!]
}

input User_coin_historyCreateOneWithoutUser_record_data_by_periodsInput {
  create: User_coin_historyCreateWithoutUser_record_data_by_periodsInput
  connect: User_coin_historyWhereUniqueInput
}

input User_coin_historyCreateWithoutUser_record_data_by_periodsInput {
  id: Int
  category: String!
  coin: Int!
  contents: String!
  date: DateTime!
  user: UsersCreateOneWithoutUser_coin_historiesInput
  txhash: String!
}

input User_coin_historyCreateWithoutUserInput {
  id: Int
  category: String!
  coin: Int!
  contents: String!
  date: DateTime!
  txhash: String!
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutCoin_history_rowInput
}

type User_coin_historyEdge {
  node: User_coin_history!
  cursor: String!
}

enum User_coin_historyOrderByInput {
  id_ASC
  id_DESC
  category_ASC
  category_DESC
  coin_ASC
  coin_DESC
  contents_ASC
  contents_DESC
  date_ASC
  date_DESC
  txhash_ASC
  txhash_DESC
}

type User_coin_historyPreviousValues {
  id: Int!
  category: String!
  coin: Int!
  contents: String!
  date: DateTime!
  txhash: String!
}

input User_coin_historyScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  category: String
  category_not: String
  category_in: [String!]
  category_not_in: [String!]
  category_lt: String
  category_lte: String
  category_gt: String
  category_gte: String
  category_contains: String
  category_not_contains: String
  category_starts_with: String
  category_not_starts_with: String
  category_ends_with: String
  category_not_ends_with: String
  coin: Int
  coin_not: Int
  coin_in: [Int!]
  coin_not_in: [Int!]
  coin_lt: Int
  coin_lte: Int
  coin_gt: Int
  coin_gte: Int
  contents: String
  contents_not: String
  contents_in: [String!]
  contents_not_in: [String!]
  contents_lt: String
  contents_lte: String
  contents_gt: String
  contents_gte: String
  contents_contains: String
  contents_not_contains: String
  contents_starts_with: String
  contents_not_starts_with: String
  contents_ends_with: String
  contents_not_ends_with: String
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  txhash: String
  txhash_not: String
  txhash_in: [String!]
  txhash_not_in: [String!]
  txhash_lt: String
  txhash_lte: String
  txhash_gt: String
  txhash_gte: String
  txhash_contains: String
  txhash_not_contains: String
  txhash_starts_with: String
  txhash_not_starts_with: String
  txhash_ends_with: String
  txhash_not_ends_with: String
  AND: [User_coin_historyScalarWhereInput!]
  OR: [User_coin_historyScalarWhereInput!]
  NOT: [User_coin_historyScalarWhereInput!]
}

type User_coin_historySubscriptionPayload {
  mutation: MutationType!
  node: User_coin_history
  updatedFields: [String!]
  previousValues: User_coin_historyPreviousValues
}

input User_coin_historySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: User_coin_historyWhereInput
  AND: [User_coin_historySubscriptionWhereInput!]
  OR: [User_coin_historySubscriptionWhereInput!]
  NOT: [User_coin_historySubscriptionWhereInput!]
}

input User_coin_historyUpdateInput {
  category: String
  coin: Int
  contents: String
  date: DateTime
  user: UsersUpdateOneWithoutUser_coin_historiesInput
  txhash: String
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutCoin_history_rowInput
}

input User_coin_historyUpdateManyDataInput {
  category: String
  coin: Int
  contents: String
  date: DateTime
  txhash: String
}

input User_coin_historyUpdateManyMutationInput {
  category: String
  coin: Int
  contents: String
  date: DateTime
  txhash: String
}

input User_coin_historyUpdateManyWithoutUserInput {
  create: [User_coin_historyCreateWithoutUserInput!]
  delete: [User_coin_historyWhereUniqueInput!]
  connect: [User_coin_historyWhereUniqueInput!]
  set: [User_coin_historyWhereUniqueInput!]
  disconnect: [User_coin_historyWhereUniqueInput!]
  update: [User_coin_historyUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [User_coin_historyUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [User_coin_historyScalarWhereInput!]
  updateMany: [User_coin_historyUpdateManyWithWhereNestedInput!]
}

input User_coin_historyUpdateManyWithWhereNestedInput {
  where: User_coin_historyScalarWhereInput!
  data: User_coin_historyUpdateManyDataInput!
}

input User_coin_historyUpdateOneWithoutUser_record_data_by_periodsInput {
  create: User_coin_historyCreateWithoutUser_record_data_by_periodsInput
  update: User_coin_historyUpdateWithoutUser_record_data_by_periodsDataInput
  upsert: User_coin_historyUpsertWithoutUser_record_data_by_periodsInput
  delete: Boolean
  disconnect: Boolean
  connect: User_coin_historyWhereUniqueInput
}

input User_coin_historyUpdateWithoutUser_record_data_by_periodsDataInput {
  category: String
  coin: Int
  contents: String
  date: DateTime
  user: UsersUpdateOneWithoutUser_coin_historiesInput
  txhash: String
}

input User_coin_historyUpdateWithoutUserDataInput {
  category: String
  coin: Int
  contents: String
  date: DateTime
  txhash: String
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutCoin_history_rowInput
}

input User_coin_historyUpdateWithWhereUniqueWithoutUserInput {
  where: User_coin_historyWhereUniqueInput!
  data: User_coin_historyUpdateWithoutUserDataInput!
}

input User_coin_historyUpsertWithoutUser_record_data_by_periodsInput {
  update: User_coin_historyUpdateWithoutUser_record_data_by_periodsDataInput!
  create: User_coin_historyCreateWithoutUser_record_data_by_periodsInput!
}

input User_coin_historyUpsertWithWhereUniqueWithoutUserInput {
  where: User_coin_historyWhereUniqueInput!
  update: User_coin_historyUpdateWithoutUserDataInput!
  create: User_coin_historyCreateWithoutUserInput!
}

input User_coin_historyWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  category: String
  category_not: String
  category_in: [String!]
  category_not_in: [String!]
  category_lt: String
  category_lte: String
  category_gt: String
  category_gte: String
  category_contains: String
  category_not_contains: String
  category_starts_with: String
  category_not_starts_with: String
  category_ends_with: String
  category_not_ends_with: String
  coin: Int
  coin_not: Int
  coin_in: [Int!]
  coin_not_in: [Int!]
  coin_lt: Int
  coin_lte: Int
  coin_gt: Int
  coin_gte: Int
  contents: String
  contents_not: String
  contents_in: [String!]
  contents_not_in: [String!]
  contents_lt: String
  contents_lte: String
  contents_gt: String
  contents_gte: String
  contents_contains: String
  contents_not_contains: String
  contents_starts_with: String
  contents_not_starts_with: String
  contents_ends_with: String
  contents_not_ends_with: String
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  user: UsersWhereInput
  txhash: String
  txhash_not: String
  txhash_in: [String!]
  txhash_not_in: [String!]
  txhash_lt: String
  txhash_lte: String
  txhash_gt: String
  txhash_gte: String
  txhash_contains: String
  txhash_not_contains: String
  txhash_starts_with: String
  txhash_not_starts_with: String
  txhash_ends_with: String
  txhash_not_ends_with: String
  user_record_data_by_periods_every: User_record_data_by_periodWhereInput
  user_record_data_by_periods_some: User_record_data_by_periodWhereInput
  user_record_data_by_periods_none: User_record_data_by_periodWhereInput
  AND: [User_coin_historyWhereInput!]
  OR: [User_coin_historyWhereInput!]
  NOT: [User_coin_historyWhereInput!]
}

input User_coin_historyWhereUniqueInput {
  id: Int
}

type User_cups {
  id: Int!
  serial_number: Cup
  user: Users
}

type User_cupsConnection {
  pageInfo: PageInfo!
  edges: [User_cupsEdge]!
  aggregate: AggregateUser_cups!
}

input User_cupsCreateInput {
  id: Int
  serial_number: CupCreateOneWithoutUser_cupsInput
  user: UsersCreateOneWithoutUser_cupsInput
}

input User_cupsCreateManyWithoutSerial_numberInput {
  create: [User_cupsCreateWithoutSerial_numberInput!]
  connect: [User_cupsWhereUniqueInput!]
}

input User_cupsCreateManyWithoutUserInput {
  create: [User_cupsCreateWithoutUserInput!]
  connect: [User_cupsWhereUniqueInput!]
}

input User_cupsCreateWithoutSerial_numberInput {
  id: Int
  user: UsersCreateOneWithoutUser_cupsInput
}

input User_cupsCreateWithoutUserInput {
  id: Int
  serial_number: CupCreateOneWithoutUser_cupsInput
}

type User_cupsEdge {
  node: User_cups!
  cursor: String!
}

enum User_cupsOrderByInput {
  id_ASC
  id_DESC
}

type User_cupsPreviousValues {
  id: Int!
}

input User_cupsScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  AND: [User_cupsScalarWhereInput!]
  OR: [User_cupsScalarWhereInput!]
  NOT: [User_cupsScalarWhereInput!]
}

type User_cupsSubscriptionPayload {
  mutation: MutationType!
  node: User_cups
  updatedFields: [String!]
  previousValues: User_cupsPreviousValues
}

input User_cupsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: User_cupsWhereInput
  AND: [User_cupsSubscriptionWhereInput!]
  OR: [User_cupsSubscriptionWhereInput!]
  NOT: [User_cupsSubscriptionWhereInput!]
}

input User_cupsUpdateInput {
  serial_number: CupUpdateOneWithoutUser_cupsInput
  user: UsersUpdateOneWithoutUser_cupsInput
}

input User_cupsUpdateManyWithoutSerial_numberInput {
  create: [User_cupsCreateWithoutSerial_numberInput!]
  delete: [User_cupsWhereUniqueInput!]
  connect: [User_cupsWhereUniqueInput!]
  set: [User_cupsWhereUniqueInput!]
  disconnect: [User_cupsWhereUniqueInput!]
  update: [User_cupsUpdateWithWhereUniqueWithoutSerial_numberInput!]
  upsert: [User_cupsUpsertWithWhereUniqueWithoutSerial_numberInput!]
  deleteMany: [User_cupsScalarWhereInput!]
}

input User_cupsUpdateManyWithoutUserInput {
  create: [User_cupsCreateWithoutUserInput!]
  delete: [User_cupsWhereUniqueInput!]
  connect: [User_cupsWhereUniqueInput!]
  set: [User_cupsWhereUniqueInput!]
  disconnect: [User_cupsWhereUniqueInput!]
  update: [User_cupsUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [User_cupsUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [User_cupsScalarWhereInput!]
}

input User_cupsUpdateWithoutSerial_numberDataInput {
  user: UsersUpdateOneWithoutUser_cupsInput
}

input User_cupsUpdateWithoutUserDataInput {
  serial_number: CupUpdateOneWithoutUser_cupsInput
}

input User_cupsUpdateWithWhereUniqueWithoutSerial_numberInput {
  where: User_cupsWhereUniqueInput!
  data: User_cupsUpdateWithoutSerial_numberDataInput!
}

input User_cupsUpdateWithWhereUniqueWithoutUserInput {
  where: User_cupsWhereUniqueInput!
  data: User_cupsUpdateWithoutUserDataInput!
}

input User_cupsUpsertWithWhereUniqueWithoutSerial_numberInput {
  where: User_cupsWhereUniqueInput!
  update: User_cupsUpdateWithoutSerial_numberDataInput!
  create: User_cupsCreateWithoutSerial_numberInput!
}

input User_cupsUpsertWithWhereUniqueWithoutUserInput {
  where: User_cupsWhereUniqueInput!
  update: User_cupsUpdateWithoutUserDataInput!
  create: User_cupsCreateWithoutUserInput!
}

input User_cupsWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  serial_number: CupWhereInput
  user: UsersWhereInput
  AND: [User_cupsWhereInput!]
  OR: [User_cupsWhereInput!]
  NOT: [User_cupsWhereInput!]
}

input User_cupsWhereUniqueInput {
  id: Int
}

type User_interview_data {
  id: Int!
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime!
  question: User_interview_questions
  user: Users
}

type User_interview_dataConnection {
  pageInfo: PageInfo!
  edges: [User_interview_dataEdge]!
  aggregate: AggregateUser_interview_data!
}

input User_interview_dataCreateInput {
  id: Int
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime!
  question: User_interview_questionsCreateOneWithoutUser_interview_dataInput
  user: UsersCreateOneWithoutUser_interview_dataInput
}

input User_interview_dataCreateManyWithoutQuestionInput {
  create: [User_interview_dataCreateWithoutQuestionInput!]
  connect: [User_interview_dataWhereUniqueInput!]
}

input User_interview_dataCreateManyWithoutUserInput {
  create: [User_interview_dataCreateWithoutUserInput!]
  connect: [User_interview_dataWhereUniqueInput!]
}

input User_interview_dataCreateWithoutQuestionInput {
  id: Int
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime!
  user: UsersCreateOneWithoutUser_interview_dataInput
}

input User_interview_dataCreateWithoutUserInput {
  id: Int
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime!
  question: User_interview_questionsCreateOneWithoutUser_interview_dataInput
}

type User_interview_dataEdge {
  node: User_interview_data!
  cursor: String!
}

enum User_interview_dataOrderByInput {
  id_ASC
  id_DESC
  answer_range_ASC
  answer_range_DESC
  answer_text_ASC
  answer_text_DESC
  answer_yn_ASC
  answer_yn_DESC
  date_ASC
  date_DESC
}

type User_interview_dataPreviousValues {
  id: Int!
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime!
}

input User_interview_dataScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  answer_range: Int
  answer_range_not: Int
  answer_range_in: [Int!]
  answer_range_not_in: [Int!]
  answer_range_lt: Int
  answer_range_lte: Int
  answer_range_gt: Int
  answer_range_gte: Int
  answer_text: String
  answer_text_not: String
  answer_text_in: [String!]
  answer_text_not_in: [String!]
  answer_text_lt: String
  answer_text_lte: String
  answer_text_gt: String
  answer_text_gte: String
  answer_text_contains: String
  answer_text_not_contains: String
  answer_text_starts_with: String
  answer_text_not_starts_with: String
  answer_text_ends_with: String
  answer_text_not_ends_with: String
  answer_yn: Boolean
  answer_yn_not: Boolean
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  AND: [User_interview_dataScalarWhereInput!]
  OR: [User_interview_dataScalarWhereInput!]
  NOT: [User_interview_dataScalarWhereInput!]
}

type User_interview_dataSubscriptionPayload {
  mutation: MutationType!
  node: User_interview_data
  updatedFields: [String!]
  previousValues: User_interview_dataPreviousValues
}

input User_interview_dataSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: User_interview_dataWhereInput
  AND: [User_interview_dataSubscriptionWhereInput!]
  OR: [User_interview_dataSubscriptionWhereInput!]
  NOT: [User_interview_dataSubscriptionWhereInput!]
}

input User_interview_dataUpdateInput {
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime
  question: User_interview_questionsUpdateOneWithoutUser_interview_dataInput
  user: UsersUpdateOneWithoutUser_interview_dataInput
}

input User_interview_dataUpdateManyDataInput {
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime
}

input User_interview_dataUpdateManyMutationInput {
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime
}

input User_interview_dataUpdateManyWithoutQuestionInput {
  create: [User_interview_dataCreateWithoutQuestionInput!]
  delete: [User_interview_dataWhereUniqueInput!]
  connect: [User_interview_dataWhereUniqueInput!]
  set: [User_interview_dataWhereUniqueInput!]
  disconnect: [User_interview_dataWhereUniqueInput!]
  update: [User_interview_dataUpdateWithWhereUniqueWithoutQuestionInput!]
  upsert: [User_interview_dataUpsertWithWhereUniqueWithoutQuestionInput!]
  deleteMany: [User_interview_dataScalarWhereInput!]
  updateMany: [User_interview_dataUpdateManyWithWhereNestedInput!]
}

input User_interview_dataUpdateManyWithoutUserInput {
  create: [User_interview_dataCreateWithoutUserInput!]
  delete: [User_interview_dataWhereUniqueInput!]
  connect: [User_interview_dataWhereUniqueInput!]
  set: [User_interview_dataWhereUniqueInput!]
  disconnect: [User_interview_dataWhereUniqueInput!]
  update: [User_interview_dataUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [User_interview_dataUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [User_interview_dataScalarWhereInput!]
  updateMany: [User_interview_dataUpdateManyWithWhereNestedInput!]
}

input User_interview_dataUpdateManyWithWhereNestedInput {
  where: User_interview_dataScalarWhereInput!
  data: User_interview_dataUpdateManyDataInput!
}

input User_interview_dataUpdateWithoutQuestionDataInput {
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime
  user: UsersUpdateOneWithoutUser_interview_dataInput
}

input User_interview_dataUpdateWithoutUserDataInput {
  answer_range: Int
  answer_text: String
  answer_yn: Boolean
  date: DateTime
  question: User_interview_questionsUpdateOneWithoutUser_interview_dataInput
}

input User_interview_dataUpdateWithWhereUniqueWithoutQuestionInput {
  where: User_interview_dataWhereUniqueInput!
  data: User_interview_dataUpdateWithoutQuestionDataInput!
}

input User_interview_dataUpdateWithWhereUniqueWithoutUserInput {
  where: User_interview_dataWhereUniqueInput!
  data: User_interview_dataUpdateWithoutUserDataInput!
}

input User_interview_dataUpsertWithWhereUniqueWithoutQuestionInput {
  where: User_interview_dataWhereUniqueInput!
  update: User_interview_dataUpdateWithoutQuestionDataInput!
  create: User_interview_dataCreateWithoutQuestionInput!
}

input User_interview_dataUpsertWithWhereUniqueWithoutUserInput {
  where: User_interview_dataWhereUniqueInput!
  update: User_interview_dataUpdateWithoutUserDataInput!
  create: User_interview_dataCreateWithoutUserInput!
}

input User_interview_dataWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  answer_range: Int
  answer_range_not: Int
  answer_range_in: [Int!]
  answer_range_not_in: [Int!]
  answer_range_lt: Int
  answer_range_lte: Int
  answer_range_gt: Int
  answer_range_gte: Int
  answer_text: String
  answer_text_not: String
  answer_text_in: [String!]
  answer_text_not_in: [String!]
  answer_text_lt: String
  answer_text_lte: String
  answer_text_gt: String
  answer_text_gte: String
  answer_text_contains: String
  answer_text_not_contains: String
  answer_text_starts_with: String
  answer_text_not_starts_with: String
  answer_text_ends_with: String
  answer_text_not_ends_with: String
  answer_yn: Boolean
  answer_yn_not: Boolean
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  question: User_interview_questionsWhereInput
  user: UsersWhereInput
  AND: [User_interview_dataWhereInput!]
  OR: [User_interview_dataWhereInput!]
  NOT: [User_interview_dataWhereInput!]
}

input User_interview_dataWhereUniqueInput {
  id: Int
}

type User_interview_questions {
  id: Int!
  answer_type: Answer_types
  question: String!
  user_interview_data(where: User_interview_dataWhereInput, orderBy: User_interview_dataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_interview_data!]
}

type User_interview_questionsConnection {
  pageInfo: PageInfo!
  edges: [User_interview_questionsEdge]!
  aggregate: AggregateUser_interview_questions!
}

input User_interview_questionsCreateInput {
  id: Int
  answer_type: Answer_typesCreateOneWithoutUser_interview_questionsInput
  question: String!
  user_interview_data: User_interview_dataCreateManyWithoutQuestionInput
}

input User_interview_questionsCreateManyWithoutAnswer_typeInput {
  create: [User_interview_questionsCreateWithoutAnswer_typeInput!]
  connect: [User_interview_questionsWhereUniqueInput!]
}

input User_interview_questionsCreateOneWithoutUser_interview_dataInput {
  create: User_interview_questionsCreateWithoutUser_interview_dataInput
  connect: User_interview_questionsWhereUniqueInput
}

input User_interview_questionsCreateWithoutAnswer_typeInput {
  id: Int
  question: String!
  user_interview_data: User_interview_dataCreateManyWithoutQuestionInput
}

input User_interview_questionsCreateWithoutUser_interview_dataInput {
  id: Int
  answer_type: Answer_typesCreateOneWithoutUser_interview_questionsInput
  question: String!
}

type User_interview_questionsEdge {
  node: User_interview_questions!
  cursor: String!
}

enum User_interview_questionsOrderByInput {
  id_ASC
  id_DESC
  question_ASC
  question_DESC
}

type User_interview_questionsPreviousValues {
  id: Int!
  question: String!
}

input User_interview_questionsScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  question: String
  question_not: String
  question_in: [String!]
  question_not_in: [String!]
  question_lt: String
  question_lte: String
  question_gt: String
  question_gte: String
  question_contains: String
  question_not_contains: String
  question_starts_with: String
  question_not_starts_with: String
  question_ends_with: String
  question_not_ends_with: String
  AND: [User_interview_questionsScalarWhereInput!]
  OR: [User_interview_questionsScalarWhereInput!]
  NOT: [User_interview_questionsScalarWhereInput!]
}

type User_interview_questionsSubscriptionPayload {
  mutation: MutationType!
  node: User_interview_questions
  updatedFields: [String!]
  previousValues: User_interview_questionsPreviousValues
}

input User_interview_questionsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: User_interview_questionsWhereInput
  AND: [User_interview_questionsSubscriptionWhereInput!]
  OR: [User_interview_questionsSubscriptionWhereInput!]
  NOT: [User_interview_questionsSubscriptionWhereInput!]
}

input User_interview_questionsUpdateInput {
  answer_type: Answer_typesUpdateOneWithoutUser_interview_questionsInput
  question: String
  user_interview_data: User_interview_dataUpdateManyWithoutQuestionInput
}

input User_interview_questionsUpdateManyDataInput {
  question: String
}

input User_interview_questionsUpdateManyMutationInput {
  question: String
}

input User_interview_questionsUpdateManyWithoutAnswer_typeInput {
  create: [User_interview_questionsCreateWithoutAnswer_typeInput!]
  delete: [User_interview_questionsWhereUniqueInput!]
  connect: [User_interview_questionsWhereUniqueInput!]
  set: [User_interview_questionsWhereUniqueInput!]
  disconnect: [User_interview_questionsWhereUniqueInput!]
  update: [User_interview_questionsUpdateWithWhereUniqueWithoutAnswer_typeInput!]
  upsert: [User_interview_questionsUpsertWithWhereUniqueWithoutAnswer_typeInput!]
  deleteMany: [User_interview_questionsScalarWhereInput!]
  updateMany: [User_interview_questionsUpdateManyWithWhereNestedInput!]
}

input User_interview_questionsUpdateManyWithWhereNestedInput {
  where: User_interview_questionsScalarWhereInput!
  data: User_interview_questionsUpdateManyDataInput!
}

input User_interview_questionsUpdateOneWithoutUser_interview_dataInput {
  create: User_interview_questionsCreateWithoutUser_interview_dataInput
  update: User_interview_questionsUpdateWithoutUser_interview_dataDataInput
  upsert: User_interview_questionsUpsertWithoutUser_interview_dataInput
  delete: Boolean
  disconnect: Boolean
  connect: User_interview_questionsWhereUniqueInput
}

input User_interview_questionsUpdateWithoutAnswer_typeDataInput {
  question: String
  user_interview_data: User_interview_dataUpdateManyWithoutQuestionInput
}

input User_interview_questionsUpdateWithoutUser_interview_dataDataInput {
  answer_type: Answer_typesUpdateOneWithoutUser_interview_questionsInput
  question: String
}

input User_interview_questionsUpdateWithWhereUniqueWithoutAnswer_typeInput {
  where: User_interview_questionsWhereUniqueInput!
  data: User_interview_questionsUpdateWithoutAnswer_typeDataInput!
}

input User_interview_questionsUpsertWithoutUser_interview_dataInput {
  update: User_interview_questionsUpdateWithoutUser_interview_dataDataInput!
  create: User_interview_questionsCreateWithoutUser_interview_dataInput!
}

input User_interview_questionsUpsertWithWhereUniqueWithoutAnswer_typeInput {
  where: User_interview_questionsWhereUniqueInput!
  update: User_interview_questionsUpdateWithoutAnswer_typeDataInput!
  create: User_interview_questionsCreateWithoutAnswer_typeInput!
}

input User_interview_questionsWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  answer_type: Answer_typesWhereInput
  question: String
  question_not: String
  question_in: [String!]
  question_not_in: [String!]
  question_lt: String
  question_lte: String
  question_gt: String
  question_gte: String
  question_contains: String
  question_not_contains: String
  question_starts_with: String
  question_not_starts_with: String
  question_ends_with: String
  question_not_ends_with: String
  user_interview_data_every: User_interview_dataWhereInput
  user_interview_data_some: User_interview_dataWhereInput
  user_interview_data_none: User_interview_dataWhereInput
  AND: [User_interview_questionsWhereInput!]
  OR: [User_interview_questionsWhereInput!]
  NOT: [User_interview_questionsWhereInput!]
}

input User_interview_questionsWhereUniqueInput {
  id: Int
}

type User_record_data_by_day {
  id: Int!
  cramps_level: Int
  record_date: DateTime!
  record_period_row: User_record_data_by_period
  user_record_data_by_times(where: User_record_data_by_timeWhereInput, orderBy: User_record_data_by_timeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_record_data_by_time!]
}

type User_record_data_by_dayConnection {
  pageInfo: PageInfo!
  edges: [User_record_data_by_dayEdge]!
  aggregate: AggregateUser_record_data_by_day!
}

input User_record_data_by_dayCreateInput {
  id: Int
  cramps_level: Int
  record_date: DateTime!
  record_period_row: User_record_data_by_periodCreateOneWithoutUser_record_data_by_daysInput
  user_record_data_by_times: User_record_data_by_timeCreateManyWithoutRecord_day_rowInput
}

input User_record_data_by_dayCreateManyWithoutRecord_period_rowInput {
  create: [User_record_data_by_dayCreateWithoutRecord_period_rowInput!]
  connect: [User_record_data_by_dayWhereUniqueInput!]
}

input User_record_data_by_dayCreateOneWithoutUser_record_data_by_timesInput {
  create: User_record_data_by_dayCreateWithoutUser_record_data_by_timesInput
  connect: User_record_data_by_dayWhereUniqueInput
}

input User_record_data_by_dayCreateWithoutRecord_period_rowInput {
  id: Int
  cramps_level: Int
  record_date: DateTime!
  user_record_data_by_times: User_record_data_by_timeCreateManyWithoutRecord_day_rowInput
}

input User_record_data_by_dayCreateWithoutUser_record_data_by_timesInput {
  id: Int
  cramps_level: Int
  record_date: DateTime!
  record_period_row: User_record_data_by_periodCreateOneWithoutUser_record_data_by_daysInput
}

type User_record_data_by_dayEdge {
  node: User_record_data_by_day!
  cursor: String!
}

enum User_record_data_by_dayOrderByInput {
  id_ASC
  id_DESC
  cramps_level_ASC
  cramps_level_DESC
  record_date_ASC
  record_date_DESC
}

type User_record_data_by_dayPreviousValues {
  id: Int!
  cramps_level: Int
  record_date: DateTime!
}

input User_record_data_by_dayScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cramps_level: Int
  cramps_level_not: Int
  cramps_level_in: [Int!]
  cramps_level_not_in: [Int!]
  cramps_level_lt: Int
  cramps_level_lte: Int
  cramps_level_gt: Int
  cramps_level_gte: Int
  record_date: DateTime
  record_date_not: DateTime
  record_date_in: [DateTime!]
  record_date_not_in: [DateTime!]
  record_date_lt: DateTime
  record_date_lte: DateTime
  record_date_gt: DateTime
  record_date_gte: DateTime
  AND: [User_record_data_by_dayScalarWhereInput!]
  OR: [User_record_data_by_dayScalarWhereInput!]
  NOT: [User_record_data_by_dayScalarWhereInput!]
}

type User_record_data_by_daySubscriptionPayload {
  mutation: MutationType!
  node: User_record_data_by_day
  updatedFields: [String!]
  previousValues: User_record_data_by_dayPreviousValues
}

input User_record_data_by_daySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: User_record_data_by_dayWhereInput
  AND: [User_record_data_by_daySubscriptionWhereInput!]
  OR: [User_record_data_by_daySubscriptionWhereInput!]
  NOT: [User_record_data_by_daySubscriptionWhereInput!]
}

input User_record_data_by_dayUpdateInput {
  cramps_level: Int
  record_date: DateTime
  record_period_row: User_record_data_by_periodUpdateOneWithoutUser_record_data_by_daysInput
  user_record_data_by_times: User_record_data_by_timeUpdateManyWithoutRecord_day_rowInput
}

input User_record_data_by_dayUpdateManyDataInput {
  cramps_level: Int
  record_date: DateTime
}

input User_record_data_by_dayUpdateManyMutationInput {
  cramps_level: Int
  record_date: DateTime
}

input User_record_data_by_dayUpdateManyWithoutRecord_period_rowInput {
  create: [User_record_data_by_dayCreateWithoutRecord_period_rowInput!]
  delete: [User_record_data_by_dayWhereUniqueInput!]
  connect: [User_record_data_by_dayWhereUniqueInput!]
  set: [User_record_data_by_dayWhereUniqueInput!]
  disconnect: [User_record_data_by_dayWhereUniqueInput!]
  update: [User_record_data_by_dayUpdateWithWhereUniqueWithoutRecord_period_rowInput!]
  upsert: [User_record_data_by_dayUpsertWithWhereUniqueWithoutRecord_period_rowInput!]
  deleteMany: [User_record_data_by_dayScalarWhereInput!]
  updateMany: [User_record_data_by_dayUpdateManyWithWhereNestedInput!]
}

input User_record_data_by_dayUpdateManyWithWhereNestedInput {
  where: User_record_data_by_dayScalarWhereInput!
  data: User_record_data_by_dayUpdateManyDataInput!
}

input User_record_data_by_dayUpdateOneWithoutUser_record_data_by_timesInput {
  create: User_record_data_by_dayCreateWithoutUser_record_data_by_timesInput
  update: User_record_data_by_dayUpdateWithoutUser_record_data_by_timesDataInput
  upsert: User_record_data_by_dayUpsertWithoutUser_record_data_by_timesInput
  delete: Boolean
  disconnect: Boolean
  connect: User_record_data_by_dayWhereUniqueInput
}

input User_record_data_by_dayUpdateWithoutRecord_period_rowDataInput {
  cramps_level: Int
  record_date: DateTime
  user_record_data_by_times: User_record_data_by_timeUpdateManyWithoutRecord_day_rowInput
}

input User_record_data_by_dayUpdateWithoutUser_record_data_by_timesDataInput {
  cramps_level: Int
  record_date: DateTime
  record_period_row: User_record_data_by_periodUpdateOneWithoutUser_record_data_by_daysInput
}

input User_record_data_by_dayUpdateWithWhereUniqueWithoutRecord_period_rowInput {
  where: User_record_data_by_dayWhereUniqueInput!
  data: User_record_data_by_dayUpdateWithoutRecord_period_rowDataInput!
}

input User_record_data_by_dayUpsertWithoutUser_record_data_by_timesInput {
  update: User_record_data_by_dayUpdateWithoutUser_record_data_by_timesDataInput!
  create: User_record_data_by_dayCreateWithoutUser_record_data_by_timesInput!
}

input User_record_data_by_dayUpsertWithWhereUniqueWithoutRecord_period_rowInput {
  where: User_record_data_by_dayWhereUniqueInput!
  update: User_record_data_by_dayUpdateWithoutRecord_period_rowDataInput!
  create: User_record_data_by_dayCreateWithoutRecord_period_rowInput!
}

input User_record_data_by_dayWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  cramps_level: Int
  cramps_level_not: Int
  cramps_level_in: [Int!]
  cramps_level_not_in: [Int!]
  cramps_level_lt: Int
  cramps_level_lte: Int
  cramps_level_gt: Int
  cramps_level_gte: Int
  record_date: DateTime
  record_date_not: DateTime
  record_date_in: [DateTime!]
  record_date_not_in: [DateTime!]
  record_date_lt: DateTime
  record_date_lte: DateTime
  record_date_gt: DateTime
  record_date_gte: DateTime
  record_period_row: User_record_data_by_periodWhereInput
  user_record_data_by_times_every: User_record_data_by_timeWhereInput
  user_record_data_by_times_some: User_record_data_by_timeWhereInput
  user_record_data_by_times_none: User_record_data_by_timeWhereInput
  AND: [User_record_data_by_dayWhereInput!]
  OR: [User_record_data_by_dayWhereInput!]
  NOT: [User_record_data_by_dayWhereInput!]
}

input User_record_data_by_dayWhereUniqueInput {
  id: Int
}

type User_record_data_by_period {
  id: Int!
  coin_history_row: User_coin_history
  is_take_pill: Boolean
  mens_finish: DateTime!
  mens_start: DateTime!
  user: Users
  user_record_data_by_days(where: User_record_data_by_dayWhereInput, orderBy: User_record_data_by_dayOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_record_data_by_day!]
}

type User_record_data_by_periodConnection {
  pageInfo: PageInfo!
  edges: [User_record_data_by_periodEdge]!
  aggregate: AggregateUser_record_data_by_period!
}

input User_record_data_by_periodCreateInput {
  id: Int
  coin_history_row: User_coin_historyCreateOneWithoutUser_record_data_by_periodsInput
  is_take_pill: Boolean
  mens_finish: DateTime!
  mens_start: DateTime!
  user: UsersCreateOneWithoutUser_record_data_by_periodsInput
  user_record_data_by_days: User_record_data_by_dayCreateManyWithoutRecord_period_rowInput
}

input User_record_data_by_periodCreateManyWithoutCoin_history_rowInput {
  create: [User_record_data_by_periodCreateWithoutCoin_history_rowInput!]
  connect: [User_record_data_by_periodWhereUniqueInput!]
}

input User_record_data_by_periodCreateManyWithoutUserInput {
  create: [User_record_data_by_periodCreateWithoutUserInput!]
  connect: [User_record_data_by_periodWhereUniqueInput!]
}

input User_record_data_by_periodCreateOneWithoutUser_record_data_by_daysInput {
  create: User_record_data_by_periodCreateWithoutUser_record_data_by_daysInput
  connect: User_record_data_by_periodWhereUniqueInput
}

input User_record_data_by_periodCreateWithoutCoin_history_rowInput {
  id: Int
  is_take_pill: Boolean
  mens_finish: DateTime!
  mens_start: DateTime!
  user: UsersCreateOneWithoutUser_record_data_by_periodsInput
  user_record_data_by_days: User_record_data_by_dayCreateManyWithoutRecord_period_rowInput
}

input User_record_data_by_periodCreateWithoutUser_record_data_by_daysInput {
  id: Int
  coin_history_row: User_coin_historyCreateOneWithoutUser_record_data_by_periodsInput
  is_take_pill: Boolean
  mens_finish: DateTime!
  mens_start: DateTime!
  user: UsersCreateOneWithoutUser_record_data_by_periodsInput
}

input User_record_data_by_periodCreateWithoutUserInput {
  id: Int
  coin_history_row: User_coin_historyCreateOneWithoutUser_record_data_by_periodsInput
  is_take_pill: Boolean
  mens_finish: DateTime!
  mens_start: DateTime!
  user_record_data_by_days: User_record_data_by_dayCreateManyWithoutRecord_period_rowInput
}

type User_record_data_by_periodEdge {
  node: User_record_data_by_period!
  cursor: String!
}

enum User_record_data_by_periodOrderByInput {
  id_ASC
  id_DESC
  is_take_pill_ASC
  is_take_pill_DESC
  mens_finish_ASC
  mens_finish_DESC
  mens_start_ASC
  mens_start_DESC
}

type User_record_data_by_periodPreviousValues {
  id: Int!
  is_take_pill: Boolean
  mens_finish: DateTime!
  mens_start: DateTime!
}

input User_record_data_by_periodScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  is_take_pill: Boolean
  is_take_pill_not: Boolean
  mens_finish: DateTime
  mens_finish_not: DateTime
  mens_finish_in: [DateTime!]
  mens_finish_not_in: [DateTime!]
  mens_finish_lt: DateTime
  mens_finish_lte: DateTime
  mens_finish_gt: DateTime
  mens_finish_gte: DateTime
  mens_start: DateTime
  mens_start_not: DateTime
  mens_start_in: [DateTime!]
  mens_start_not_in: [DateTime!]
  mens_start_lt: DateTime
  mens_start_lte: DateTime
  mens_start_gt: DateTime
  mens_start_gte: DateTime
  AND: [User_record_data_by_periodScalarWhereInput!]
  OR: [User_record_data_by_periodScalarWhereInput!]
  NOT: [User_record_data_by_periodScalarWhereInput!]
}

type User_record_data_by_periodSubscriptionPayload {
  mutation: MutationType!
  node: User_record_data_by_period
  updatedFields: [String!]
  previousValues: User_record_data_by_periodPreviousValues
}

input User_record_data_by_periodSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: User_record_data_by_periodWhereInput
  AND: [User_record_data_by_periodSubscriptionWhereInput!]
  OR: [User_record_data_by_periodSubscriptionWhereInput!]
  NOT: [User_record_data_by_periodSubscriptionWhereInput!]
}

input User_record_data_by_periodUpdateInput {
  coin_history_row: User_coin_historyUpdateOneWithoutUser_record_data_by_periodsInput
  is_take_pill: Boolean
  mens_finish: DateTime
  mens_start: DateTime
  user: UsersUpdateOneWithoutUser_record_data_by_periodsInput
  user_record_data_by_days: User_record_data_by_dayUpdateManyWithoutRecord_period_rowInput
}

input User_record_data_by_periodUpdateManyDataInput {
  is_take_pill: Boolean
  mens_finish: DateTime
  mens_start: DateTime
}

input User_record_data_by_periodUpdateManyMutationInput {
  is_take_pill: Boolean
  mens_finish: DateTime
  mens_start: DateTime
}

input User_record_data_by_periodUpdateManyWithoutCoin_history_rowInput {
  create: [User_record_data_by_periodCreateWithoutCoin_history_rowInput!]
  delete: [User_record_data_by_periodWhereUniqueInput!]
  connect: [User_record_data_by_periodWhereUniqueInput!]
  set: [User_record_data_by_periodWhereUniqueInput!]
  disconnect: [User_record_data_by_periodWhereUniqueInput!]
  update: [User_record_data_by_periodUpdateWithWhereUniqueWithoutCoin_history_rowInput!]
  upsert: [User_record_data_by_periodUpsertWithWhereUniqueWithoutCoin_history_rowInput!]
  deleteMany: [User_record_data_by_periodScalarWhereInput!]
  updateMany: [User_record_data_by_periodUpdateManyWithWhereNestedInput!]
}

input User_record_data_by_periodUpdateManyWithoutUserInput {
  create: [User_record_data_by_periodCreateWithoutUserInput!]
  delete: [User_record_data_by_periodWhereUniqueInput!]
  connect: [User_record_data_by_periodWhereUniqueInput!]
  set: [User_record_data_by_periodWhereUniqueInput!]
  disconnect: [User_record_data_by_periodWhereUniqueInput!]
  update: [User_record_data_by_periodUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [User_record_data_by_periodUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [User_record_data_by_periodScalarWhereInput!]
  updateMany: [User_record_data_by_periodUpdateManyWithWhereNestedInput!]
}

input User_record_data_by_periodUpdateManyWithWhereNestedInput {
  where: User_record_data_by_periodScalarWhereInput!
  data: User_record_data_by_periodUpdateManyDataInput!
}

input User_record_data_by_periodUpdateOneWithoutUser_record_data_by_daysInput {
  create: User_record_data_by_periodCreateWithoutUser_record_data_by_daysInput
  update: User_record_data_by_periodUpdateWithoutUser_record_data_by_daysDataInput
  upsert: User_record_data_by_periodUpsertWithoutUser_record_data_by_daysInput
  delete: Boolean
  disconnect: Boolean
  connect: User_record_data_by_periodWhereUniqueInput
}

input User_record_data_by_periodUpdateWithoutCoin_history_rowDataInput {
  is_take_pill: Boolean
  mens_finish: DateTime
  mens_start: DateTime
  user: UsersUpdateOneWithoutUser_record_data_by_periodsInput
  user_record_data_by_days: User_record_data_by_dayUpdateManyWithoutRecord_period_rowInput
}

input User_record_data_by_periodUpdateWithoutUser_record_data_by_daysDataInput {
  coin_history_row: User_coin_historyUpdateOneWithoutUser_record_data_by_periodsInput
  is_take_pill: Boolean
  mens_finish: DateTime
  mens_start: DateTime
  user: UsersUpdateOneWithoutUser_record_data_by_periodsInput
}

input User_record_data_by_periodUpdateWithoutUserDataInput {
  coin_history_row: User_coin_historyUpdateOneWithoutUser_record_data_by_periodsInput
  is_take_pill: Boolean
  mens_finish: DateTime
  mens_start: DateTime
  user_record_data_by_days: User_record_data_by_dayUpdateManyWithoutRecord_period_rowInput
}

input User_record_data_by_periodUpdateWithWhereUniqueWithoutCoin_history_rowInput {
  where: User_record_data_by_periodWhereUniqueInput!
  data: User_record_data_by_periodUpdateWithoutCoin_history_rowDataInput!
}

input User_record_data_by_periodUpdateWithWhereUniqueWithoutUserInput {
  where: User_record_data_by_periodWhereUniqueInput!
  data: User_record_data_by_periodUpdateWithoutUserDataInput!
}

input User_record_data_by_periodUpsertWithoutUser_record_data_by_daysInput {
  update: User_record_data_by_periodUpdateWithoutUser_record_data_by_daysDataInput!
  create: User_record_data_by_periodCreateWithoutUser_record_data_by_daysInput!
}

input User_record_data_by_periodUpsertWithWhereUniqueWithoutCoin_history_rowInput {
  where: User_record_data_by_periodWhereUniqueInput!
  update: User_record_data_by_periodUpdateWithoutCoin_history_rowDataInput!
  create: User_record_data_by_periodCreateWithoutCoin_history_rowInput!
}

input User_record_data_by_periodUpsertWithWhereUniqueWithoutUserInput {
  where: User_record_data_by_periodWhereUniqueInput!
  update: User_record_data_by_periodUpdateWithoutUserDataInput!
  create: User_record_data_by_periodCreateWithoutUserInput!
}

input User_record_data_by_periodWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  coin_history_row: User_coin_historyWhereInput
  is_take_pill: Boolean
  is_take_pill_not: Boolean
  mens_finish: DateTime
  mens_finish_not: DateTime
  mens_finish_in: [DateTime!]
  mens_finish_not_in: [DateTime!]
  mens_finish_lt: DateTime
  mens_finish_lte: DateTime
  mens_finish_gt: DateTime
  mens_finish_gte: DateTime
  mens_start: DateTime
  mens_start_not: DateTime
  mens_start_in: [DateTime!]
  mens_start_not_in: [DateTime!]
  mens_start_lt: DateTime
  mens_start_lte: DateTime
  mens_start_gt: DateTime
  mens_start_gte: DateTime
  user: UsersWhereInput
  user_record_data_by_days_every: User_record_data_by_dayWhereInput
  user_record_data_by_days_some: User_record_data_by_dayWhereInput
  user_record_data_by_days_none: User_record_data_by_dayWhereInput
  AND: [User_record_data_by_periodWhereInput!]
  OR: [User_record_data_by_periodWhereInput!]
  NOT: [User_record_data_by_periodWhereInput!]
}

input User_record_data_by_periodWhereUniqueInput {
  id: Int
}

type User_record_data_by_time {
  id: Int!
  change_time: DateTime!
  color_b: Int
  color_g: Int
  color_r: Int
  leakage: String
  record_day_row: User_record_data_by_day
  start_time: DateTime!
  volume: Float
}

type User_record_data_by_timeConnection {
  pageInfo: PageInfo!
  edges: [User_record_data_by_timeEdge]!
  aggregate: AggregateUser_record_data_by_time!
}

input User_record_data_by_timeCreateInput {
  id: Int
  change_time: DateTime!
  color_b: Int
  color_g: Int
  color_r: Int
  leakage: String
  record_day_row: User_record_data_by_dayCreateOneWithoutUser_record_data_by_timesInput
  start_time: DateTime!
  volume: Float
}

input User_record_data_by_timeCreateManyWithoutRecord_day_rowInput {
  create: [User_record_data_by_timeCreateWithoutRecord_day_rowInput!]
  connect: [User_record_data_by_timeWhereUniqueInput!]
}

input User_record_data_by_timeCreateWithoutRecord_day_rowInput {
  id: Int
  change_time: DateTime!
  color_b: Int
  color_g: Int
  color_r: Int
  leakage: String
  start_time: DateTime!
  volume: Float
}

type User_record_data_by_timeEdge {
  node: User_record_data_by_time!
  cursor: String!
}

enum User_record_data_by_timeOrderByInput {
  id_ASC
  id_DESC
  change_time_ASC
  change_time_DESC
  color_b_ASC
  color_b_DESC
  color_g_ASC
  color_g_DESC
  color_r_ASC
  color_r_DESC
  leakage_ASC
  leakage_DESC
  start_time_ASC
  start_time_DESC
  volume_ASC
  volume_DESC
}

type User_record_data_by_timePreviousValues {
  id: Int!
  change_time: DateTime!
  color_b: Int
  color_g: Int
  color_r: Int
  leakage: String
  start_time: DateTime!
  volume: Float
}

input User_record_data_by_timeScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  change_time: DateTime
  change_time_not: DateTime
  change_time_in: [DateTime!]
  change_time_not_in: [DateTime!]
  change_time_lt: DateTime
  change_time_lte: DateTime
  change_time_gt: DateTime
  change_time_gte: DateTime
  color_b: Int
  color_b_not: Int
  color_b_in: [Int!]
  color_b_not_in: [Int!]
  color_b_lt: Int
  color_b_lte: Int
  color_b_gt: Int
  color_b_gte: Int
  color_g: Int
  color_g_not: Int
  color_g_in: [Int!]
  color_g_not_in: [Int!]
  color_g_lt: Int
  color_g_lte: Int
  color_g_gt: Int
  color_g_gte: Int
  color_r: Int
  color_r_not: Int
  color_r_in: [Int!]
  color_r_not_in: [Int!]
  color_r_lt: Int
  color_r_lte: Int
  color_r_gt: Int
  color_r_gte: Int
  leakage: String
  leakage_not: String
  leakage_in: [String!]
  leakage_not_in: [String!]
  leakage_lt: String
  leakage_lte: String
  leakage_gt: String
  leakage_gte: String
  leakage_contains: String
  leakage_not_contains: String
  leakage_starts_with: String
  leakage_not_starts_with: String
  leakage_ends_with: String
  leakage_not_ends_with: String
  start_time: DateTime
  start_time_not: DateTime
  start_time_in: [DateTime!]
  start_time_not_in: [DateTime!]
  start_time_lt: DateTime
  start_time_lte: DateTime
  start_time_gt: DateTime
  start_time_gte: DateTime
  volume: Float
  volume_not: Float
  volume_in: [Float!]
  volume_not_in: [Float!]
  volume_lt: Float
  volume_lte: Float
  volume_gt: Float
  volume_gte: Float
  AND: [User_record_data_by_timeScalarWhereInput!]
  OR: [User_record_data_by_timeScalarWhereInput!]
  NOT: [User_record_data_by_timeScalarWhereInput!]
}

type User_record_data_by_timeSubscriptionPayload {
  mutation: MutationType!
  node: User_record_data_by_time
  updatedFields: [String!]
  previousValues: User_record_data_by_timePreviousValues
}

input User_record_data_by_timeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: User_record_data_by_timeWhereInput
  AND: [User_record_data_by_timeSubscriptionWhereInput!]
  OR: [User_record_data_by_timeSubscriptionWhereInput!]
  NOT: [User_record_data_by_timeSubscriptionWhereInput!]
}

input User_record_data_by_timeUpdateInput {
  change_time: DateTime
  color_b: Int
  color_g: Int
  color_r: Int
  leakage: String
  record_day_row: User_record_data_by_dayUpdateOneWithoutUser_record_data_by_timesInput
  start_time: DateTime
  volume: Float
}

input User_record_data_by_timeUpdateManyDataInput {
  change_time: DateTime
  color_b: Int
  color_g: Int
  color_r: Int
  leakage: String
  start_time: DateTime
  volume: Float
}

input User_record_data_by_timeUpdateManyMutationInput {
  change_time: DateTime
  color_b: Int
  color_g: Int
  color_r: Int
  leakage: String
  start_time: DateTime
  volume: Float
}

input User_record_data_by_timeUpdateManyWithoutRecord_day_rowInput {
  create: [User_record_data_by_timeCreateWithoutRecord_day_rowInput!]
  delete: [User_record_data_by_timeWhereUniqueInput!]
  connect: [User_record_data_by_timeWhereUniqueInput!]
  set: [User_record_data_by_timeWhereUniqueInput!]
  disconnect: [User_record_data_by_timeWhereUniqueInput!]
  update: [User_record_data_by_timeUpdateWithWhereUniqueWithoutRecord_day_rowInput!]
  upsert: [User_record_data_by_timeUpsertWithWhereUniqueWithoutRecord_day_rowInput!]
  deleteMany: [User_record_data_by_timeScalarWhereInput!]
  updateMany: [User_record_data_by_timeUpdateManyWithWhereNestedInput!]
}

input User_record_data_by_timeUpdateManyWithWhereNestedInput {
  where: User_record_data_by_timeScalarWhereInput!
  data: User_record_data_by_timeUpdateManyDataInput!
}

input User_record_data_by_timeUpdateWithoutRecord_day_rowDataInput {
  change_time: DateTime
  color_b: Int
  color_g: Int
  color_r: Int
  leakage: String
  start_time: DateTime
  volume: Float
}

input User_record_data_by_timeUpdateWithWhereUniqueWithoutRecord_day_rowInput {
  where: User_record_data_by_timeWhereUniqueInput!
  data: User_record_data_by_timeUpdateWithoutRecord_day_rowDataInput!
}

input User_record_data_by_timeUpsertWithWhereUniqueWithoutRecord_day_rowInput {
  where: User_record_data_by_timeWhereUniqueInput!
  update: User_record_data_by_timeUpdateWithoutRecord_day_rowDataInput!
  create: User_record_data_by_timeCreateWithoutRecord_day_rowInput!
}

input User_record_data_by_timeWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  change_time: DateTime
  change_time_not: DateTime
  change_time_in: [DateTime!]
  change_time_not_in: [DateTime!]
  change_time_lt: DateTime
  change_time_lte: DateTime
  change_time_gt: DateTime
  change_time_gte: DateTime
  color_b: Int
  color_b_not: Int
  color_b_in: [Int!]
  color_b_not_in: [Int!]
  color_b_lt: Int
  color_b_lte: Int
  color_b_gt: Int
  color_b_gte: Int
  color_g: Int
  color_g_not: Int
  color_g_in: [Int!]
  color_g_not_in: [Int!]
  color_g_lt: Int
  color_g_lte: Int
  color_g_gt: Int
  color_g_gte: Int
  color_r: Int
  color_r_not: Int
  color_r_in: [Int!]
  color_r_not_in: [Int!]
  color_r_lt: Int
  color_r_lte: Int
  color_r_gt: Int
  color_r_gte: Int
  leakage: String
  leakage_not: String
  leakage_in: [String!]
  leakage_not_in: [String!]
  leakage_lt: String
  leakage_lte: String
  leakage_gt: String
  leakage_gte: String
  leakage_contains: String
  leakage_not_contains: String
  leakage_starts_with: String
  leakage_not_starts_with: String
  leakage_ends_with: String
  leakage_not_ends_with: String
  record_day_row: User_record_data_by_dayWhereInput
  start_time: DateTime
  start_time_not: DateTime
  start_time_in: [DateTime!]
  start_time_not_in: [DateTime!]
  start_time_lt: DateTime
  start_time_lte: DateTime
  start_time_gt: DateTime
  start_time_gte: DateTime
  volume: Float
  volume_not: Float
  volume_in: [Float!]
  volume_not_in: [Float!]
  volume_lt: Float
  volume_lte: Float
  volume_gt: Float
  volume_gte: Float
  AND: [User_record_data_by_timeWhereInput!]
  OR: [User_record_data_by_timeWhereInput!]
  NOT: [User_record_data_by_timeWhereInput!]
}

input User_record_data_by_timeWhereUniqueInput {
  id: Int
}

type Users {
  id: Int!
  anon_user_id: Int
  app_server_syncs(where: App_server_syncWhereInput, orderBy: App_server_syncOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [App_server_sync!]
  country: Country
  cup_data_proc_flows(where: Cup_data_proc_flowWhereInput, orderBy: Cup_data_proc_flowOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_proc_flow!]
  cup_data_proc_mdates(where: Cup_data_proc_mdatesWhereInput, orderBy: Cup_data_proc_mdatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_proc_mdates!]
  cup_data_qa_responses(where: Cup_data_qa_responseWhereInput, orderBy: Cup_data_qa_responseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_qa_response!]
  cup_data_user_removes(where: Cup_data_user_removeWhereInput, orderBy: Cup_data_user_removeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cup_data_user_remove!]
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: Ethnicity
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories(where: User_coin_historyWhereInput, orderBy: User_coin_historyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_coin_history!]
  user_cups(where: User_cupsWhereInput, orderBy: User_cupsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_cups!]
  user_interview_data(where: User_interview_dataWhereInput, orderBy: User_interview_dataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_interview_data!]
  user_record_data_by_periods(where: User_record_data_by_periodWhereInput, orderBy: User_record_data_by_periodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User_record_data_by_period!]
}

type Users_data_analysis {
  id: Int!
  email: String!
  first_name: String!
  last_name: String!
  password: String!
  user_id: String!
}

type Users_data_analysisConnection {
  pageInfo: PageInfo!
  edges: [Users_data_analysisEdge]!
  aggregate: AggregateUsers_data_analysis!
}

input Users_data_analysisCreateInput {
  id: Int
  email: String!
  first_name: String!
  last_name: String!
  password: String!
  user_id: String!
}

type Users_data_analysisEdge {
  node: Users_data_analysis!
  cursor: String!
}

enum Users_data_analysisOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  first_name_ASC
  first_name_DESC
  last_name_ASC
  last_name_DESC
  password_ASC
  password_DESC
  user_id_ASC
  user_id_DESC
}

type Users_data_analysisPreviousValues {
  id: Int!
  email: String!
  first_name: String!
  last_name: String!
  password: String!
  user_id: String!
}

type Users_data_analysisSubscriptionPayload {
  mutation: MutationType!
  node: Users_data_analysis
  updatedFields: [String!]
  previousValues: Users_data_analysisPreviousValues
}

input Users_data_analysisSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: Users_data_analysisWhereInput
  AND: [Users_data_analysisSubscriptionWhereInput!]
  OR: [Users_data_analysisSubscriptionWhereInput!]
  NOT: [Users_data_analysisSubscriptionWhereInput!]
}

input Users_data_analysisUpdateInput {
  email: String
  first_name: String
  last_name: String
  password: String
  user_id: String
}

input Users_data_analysisUpdateManyMutationInput {
  email: String
  first_name: String
  last_name: String
  password: String
  user_id: String
}

input Users_data_analysisWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  first_name: String
  first_name_not: String
  first_name_in: [String!]
  first_name_not_in: [String!]
  first_name_lt: String
  first_name_lte: String
  first_name_gt: String
  first_name_gte: String
  first_name_contains: String
  first_name_not_contains: String
  first_name_starts_with: String
  first_name_not_starts_with: String
  first_name_ends_with: String
  first_name_not_ends_with: String
  last_name: String
  last_name_not: String
  last_name_in: [String!]
  last_name_not_in: [String!]
  last_name_lt: String
  last_name_lte: String
  last_name_gt: String
  last_name_gte: String
  last_name_contains: String
  last_name_not_contains: String
  last_name_starts_with: String
  last_name_not_starts_with: String
  last_name_ends_with: String
  last_name_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  AND: [Users_data_analysisWhereInput!]
  OR: [Users_data_analysisWhereInput!]
  NOT: [Users_data_analysisWhereInput!]
}

input Users_data_analysisWhereUniqueInput {
  id: Int
}

type UsersConnection {
  pageInfo: PageInfo!
  edges: [UsersEdge]!
  aggregate: AggregateUsers!
}

input UsersCreateInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateManyWithoutCountryInput {
  create: [UsersCreateWithoutCountryInput!]
  connect: [UsersWhereUniqueInput!]
}

input UsersCreateManyWithoutEthnicityInput {
  create: [UsersCreateWithoutEthnicityInput!]
  connect: [UsersWhereUniqueInput!]
}

input UsersCreateOneWithoutApp_server_syncsInput {
  create: UsersCreateWithoutApp_server_syncsInput
  connect: UsersWhereUniqueInput
}

input UsersCreateOneWithoutCup_data_proc_flowsInput {
  create: UsersCreateWithoutCup_data_proc_flowsInput
  connect: UsersWhereUniqueInput
}

input UsersCreateOneWithoutCup_data_proc_mdatesInput {
  create: UsersCreateWithoutCup_data_proc_mdatesInput
  connect: UsersWhereUniqueInput
}

input UsersCreateOneWithoutCup_data_qa_responsesInput {
  create: UsersCreateWithoutCup_data_qa_responsesInput
  connect: UsersWhereUniqueInput
}

input UsersCreateOneWithoutCup_data_user_removesInput {
  create: UsersCreateWithoutCup_data_user_removesInput
  connect: UsersWhereUniqueInput
}

input UsersCreateOneWithoutUser_coin_historiesInput {
  create: UsersCreateWithoutUser_coin_historiesInput
  connect: UsersWhereUniqueInput
}

input UsersCreateOneWithoutUser_cupsInput {
  create: UsersCreateWithoutUser_cupsInput
  connect: UsersWhereUniqueInput
}

input UsersCreateOneWithoutUser_interview_dataInput {
  create: UsersCreateWithoutUser_interview_dataInput
  connect: UsersWhereUniqueInput
}

input UsersCreateOneWithoutUser_record_data_by_periodsInput {
  create: UsersCreateWithoutUser_record_data_by_periodsInput
  connect: UsersWhereUniqueInput
}

input UsersCreateWithoutApp_server_syncsInput {
  id: Int
  anon_user_id: Int
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutCountryInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutCup_data_proc_flowsInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutCup_data_proc_mdatesInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutCup_data_qa_responsesInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutCup_data_user_removesInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutEthnicityInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutUser_coin_historiesInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutUser_cupsInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutUser_interview_dataInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodCreateManyWithoutUserInput
}

input UsersCreateWithoutUser_record_data_by_periodsInput {
  id: Int
  anon_user_id: Int
  app_server_syncs: App_server_syncCreateManyWithoutUserInput
  country: CountryCreateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowCreateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesCreateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseCreateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeCreateManyWithoutUserInput
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  ethnicity: EthnicityCreateOneWithoutUsersInput
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
  user_coin_histories: User_coin_historyCreateManyWithoutUserInput
  user_cups: User_cupsCreateManyWithoutUserInput
  user_interview_data: User_interview_dataCreateManyWithoutUserInput
}

type UsersEdge {
  node: Users!
  cursor: String!
}

enum UsersOrderByInput {
  id_ASC
  id_DESC
  anon_user_id_ASC
  anon_user_id_DESC
  deleted_ASC
  deleted_DESC
  dob_ASC
  dob_DESC
  email_ASC
  email_DESC
  encrypt_salt_string_ASC
  encrypt_salt_string_DESC
  first_name_ASC
  first_name_DESC
  given_birth_ASC
  given_birth_DESC
  last_name_ASC
  last_name_DESC
  password_ASC
  password_DESC
}

type UsersPreviousValues {
  id: Int!
  anon_user_id: Int
  deleted: Boolean!
  dob: DateTime!
  email: String!
  encrypt_salt_string: String
  first_name: String!
  given_birth: Boolean!
  last_name: String!
  password: String!
}

input UsersScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  anon_user_id: Int
  anon_user_id_not: Int
  anon_user_id_in: [Int!]
  anon_user_id_not_in: [Int!]
  anon_user_id_lt: Int
  anon_user_id_lte: Int
  anon_user_id_gt: Int
  anon_user_id_gte: Int
  deleted: Boolean
  deleted_not: Boolean
  dob: DateTime
  dob_not: DateTime
  dob_in: [DateTime!]
  dob_not_in: [DateTime!]
  dob_lt: DateTime
  dob_lte: DateTime
  dob_gt: DateTime
  dob_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  encrypt_salt_string: String
  encrypt_salt_string_not: String
  encrypt_salt_string_in: [String!]
  encrypt_salt_string_not_in: [String!]
  encrypt_salt_string_lt: String
  encrypt_salt_string_lte: String
  encrypt_salt_string_gt: String
  encrypt_salt_string_gte: String
  encrypt_salt_string_contains: String
  encrypt_salt_string_not_contains: String
  encrypt_salt_string_starts_with: String
  encrypt_salt_string_not_starts_with: String
  encrypt_salt_string_ends_with: String
  encrypt_salt_string_not_ends_with: String
  first_name: String
  first_name_not: String
  first_name_in: [String!]
  first_name_not_in: [String!]
  first_name_lt: String
  first_name_lte: String
  first_name_gt: String
  first_name_gte: String
  first_name_contains: String
  first_name_not_contains: String
  first_name_starts_with: String
  first_name_not_starts_with: String
  first_name_ends_with: String
  first_name_not_ends_with: String
  given_birth: Boolean
  given_birth_not: Boolean
  last_name: String
  last_name_not: String
  last_name_in: [String!]
  last_name_not_in: [String!]
  last_name_lt: String
  last_name_lte: String
  last_name_gt: String
  last_name_gte: String
  last_name_contains: String
  last_name_not_contains: String
  last_name_starts_with: String
  last_name_not_starts_with: String
  last_name_ends_with: String
  last_name_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  AND: [UsersScalarWhereInput!]
  OR: [UsersScalarWhereInput!]
  NOT: [UsersScalarWhereInput!]
}

type UsersSubscriptionPayload {
  mutation: MutationType!
  node: Users
  updatedFields: [String!]
  previousValues: UsersPreviousValues
}

input UsersSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UsersWhereInput
  AND: [UsersSubscriptionWhereInput!]
  OR: [UsersSubscriptionWhereInput!]
  NOT: [UsersSubscriptionWhereInput!]
}

input UsersUpdateInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateManyDataInput {
  anon_user_id: Int
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
}

input UsersUpdateManyMutationInput {
  anon_user_id: Int
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
}

input UsersUpdateManyWithoutCountryInput {
  create: [UsersCreateWithoutCountryInput!]
  delete: [UsersWhereUniqueInput!]
  connect: [UsersWhereUniqueInput!]
  set: [UsersWhereUniqueInput!]
  disconnect: [UsersWhereUniqueInput!]
  update: [UsersUpdateWithWhereUniqueWithoutCountryInput!]
  upsert: [UsersUpsertWithWhereUniqueWithoutCountryInput!]
  deleteMany: [UsersScalarWhereInput!]
  updateMany: [UsersUpdateManyWithWhereNestedInput!]
}

input UsersUpdateManyWithoutEthnicityInput {
  create: [UsersCreateWithoutEthnicityInput!]
  delete: [UsersWhereUniqueInput!]
  connect: [UsersWhereUniqueInput!]
  set: [UsersWhereUniqueInput!]
  disconnect: [UsersWhereUniqueInput!]
  update: [UsersUpdateWithWhereUniqueWithoutEthnicityInput!]
  upsert: [UsersUpsertWithWhereUniqueWithoutEthnicityInput!]
  deleteMany: [UsersScalarWhereInput!]
  updateMany: [UsersUpdateManyWithWhereNestedInput!]
}

input UsersUpdateManyWithWhereNestedInput {
  where: UsersScalarWhereInput!
  data: UsersUpdateManyDataInput!
}

input UsersUpdateOneWithoutApp_server_syncsInput {
  create: UsersCreateWithoutApp_server_syncsInput
  update: UsersUpdateWithoutApp_server_syncsDataInput
  upsert: UsersUpsertWithoutApp_server_syncsInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateOneWithoutCup_data_proc_flowsInput {
  create: UsersCreateWithoutCup_data_proc_flowsInput
  update: UsersUpdateWithoutCup_data_proc_flowsDataInput
  upsert: UsersUpsertWithoutCup_data_proc_flowsInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateOneWithoutCup_data_proc_mdatesInput {
  create: UsersCreateWithoutCup_data_proc_mdatesInput
  update: UsersUpdateWithoutCup_data_proc_mdatesDataInput
  upsert: UsersUpsertWithoutCup_data_proc_mdatesInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateOneWithoutCup_data_qa_responsesInput {
  create: UsersCreateWithoutCup_data_qa_responsesInput
  update: UsersUpdateWithoutCup_data_qa_responsesDataInput
  upsert: UsersUpsertWithoutCup_data_qa_responsesInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateOneWithoutCup_data_user_removesInput {
  create: UsersCreateWithoutCup_data_user_removesInput
  update: UsersUpdateWithoutCup_data_user_removesDataInput
  upsert: UsersUpsertWithoutCup_data_user_removesInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateOneWithoutUser_coin_historiesInput {
  create: UsersCreateWithoutUser_coin_historiesInput
  update: UsersUpdateWithoutUser_coin_historiesDataInput
  upsert: UsersUpsertWithoutUser_coin_historiesInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateOneWithoutUser_cupsInput {
  create: UsersCreateWithoutUser_cupsInput
  update: UsersUpdateWithoutUser_cupsDataInput
  upsert: UsersUpsertWithoutUser_cupsInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateOneWithoutUser_interview_dataInput {
  create: UsersCreateWithoutUser_interview_dataInput
  update: UsersUpdateWithoutUser_interview_dataDataInput
  upsert: UsersUpsertWithoutUser_interview_dataInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateOneWithoutUser_record_data_by_periodsInput {
  create: UsersCreateWithoutUser_record_data_by_periodsInput
  update: UsersUpdateWithoutUser_record_data_by_periodsDataInput
  upsert: UsersUpsertWithoutUser_record_data_by_periodsInput
  delete: Boolean
  disconnect: Boolean
  connect: UsersWhereUniqueInput
}

input UsersUpdateWithoutApp_server_syncsDataInput {
  anon_user_id: Int
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutCountryDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutCup_data_proc_flowsDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutCup_data_proc_mdatesDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutCup_data_qa_responsesDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutCup_data_user_removesDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutEthnicityDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutUser_coin_historiesDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutUser_cupsDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutUser_interview_dataDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_record_data_by_periods: User_record_data_by_periodUpdateManyWithoutUserInput
}

input UsersUpdateWithoutUser_record_data_by_periodsDataInput {
  anon_user_id: Int
  app_server_syncs: App_server_syncUpdateManyWithoutUserInput
  country: CountryUpdateOneWithoutUsersInput
  cup_data_proc_flows: Cup_data_proc_flowUpdateManyWithoutUserInput
  cup_data_proc_mdates: Cup_data_proc_mdatesUpdateManyWithoutUserInput
  cup_data_qa_responses: Cup_data_qa_responseUpdateManyWithoutUserInput
  cup_data_user_removes: Cup_data_user_removeUpdateManyWithoutUserInput
  deleted: Boolean
  dob: DateTime
  email: String
  encrypt_salt_string: String
  ethnicity: EthnicityUpdateOneWithoutUsersInput
  first_name: String
  given_birth: Boolean
  last_name: String
  password: String
  user_coin_histories: User_coin_historyUpdateManyWithoutUserInput
  user_cups: User_cupsUpdateManyWithoutUserInput
  user_interview_data: User_interview_dataUpdateManyWithoutUserInput
}

input UsersUpdateWithWhereUniqueWithoutCountryInput {
  where: UsersWhereUniqueInput!
  data: UsersUpdateWithoutCountryDataInput!
}

input UsersUpdateWithWhereUniqueWithoutEthnicityInput {
  where: UsersWhereUniqueInput!
  data: UsersUpdateWithoutEthnicityDataInput!
}

input UsersUpsertWithoutApp_server_syncsInput {
  update: UsersUpdateWithoutApp_server_syncsDataInput!
  create: UsersCreateWithoutApp_server_syncsInput!
}

input UsersUpsertWithoutCup_data_proc_flowsInput {
  update: UsersUpdateWithoutCup_data_proc_flowsDataInput!
  create: UsersCreateWithoutCup_data_proc_flowsInput!
}

input UsersUpsertWithoutCup_data_proc_mdatesInput {
  update: UsersUpdateWithoutCup_data_proc_mdatesDataInput!
  create: UsersCreateWithoutCup_data_proc_mdatesInput!
}

input UsersUpsertWithoutCup_data_qa_responsesInput {
  update: UsersUpdateWithoutCup_data_qa_responsesDataInput!
  create: UsersCreateWithoutCup_data_qa_responsesInput!
}

input UsersUpsertWithoutCup_data_user_removesInput {
  update: UsersUpdateWithoutCup_data_user_removesDataInput!
  create: UsersCreateWithoutCup_data_user_removesInput!
}

input UsersUpsertWithoutUser_coin_historiesInput {
  update: UsersUpdateWithoutUser_coin_historiesDataInput!
  create: UsersCreateWithoutUser_coin_historiesInput!
}

input UsersUpsertWithoutUser_cupsInput {
  update: UsersUpdateWithoutUser_cupsDataInput!
  create: UsersCreateWithoutUser_cupsInput!
}

input UsersUpsertWithoutUser_interview_dataInput {
  update: UsersUpdateWithoutUser_interview_dataDataInput!
  create: UsersCreateWithoutUser_interview_dataInput!
}

input UsersUpsertWithoutUser_record_data_by_periodsInput {
  update: UsersUpdateWithoutUser_record_data_by_periodsDataInput!
  create: UsersCreateWithoutUser_record_data_by_periodsInput!
}

input UsersUpsertWithWhereUniqueWithoutCountryInput {
  where: UsersWhereUniqueInput!
  update: UsersUpdateWithoutCountryDataInput!
  create: UsersCreateWithoutCountryInput!
}

input UsersUpsertWithWhereUniqueWithoutEthnicityInput {
  where: UsersWhereUniqueInput!
  update: UsersUpdateWithoutEthnicityDataInput!
  create: UsersCreateWithoutEthnicityInput!
}

input UsersWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  anon_user_id: Int
  anon_user_id_not: Int
  anon_user_id_in: [Int!]
  anon_user_id_not_in: [Int!]
  anon_user_id_lt: Int
  anon_user_id_lte: Int
  anon_user_id_gt: Int
  anon_user_id_gte: Int
  app_server_syncs_every: App_server_syncWhereInput
  app_server_syncs_some: App_server_syncWhereInput
  app_server_syncs_none: App_server_syncWhereInput
  country: CountryWhereInput
  cup_data_proc_flows_every: Cup_data_proc_flowWhereInput
  cup_data_proc_flows_some: Cup_data_proc_flowWhereInput
  cup_data_proc_flows_none: Cup_data_proc_flowWhereInput
  cup_data_proc_mdates_every: Cup_data_proc_mdatesWhereInput
  cup_data_proc_mdates_some: Cup_data_proc_mdatesWhereInput
  cup_data_proc_mdates_none: Cup_data_proc_mdatesWhereInput
  cup_data_qa_responses_every: Cup_data_qa_responseWhereInput
  cup_data_qa_responses_some: Cup_data_qa_responseWhereInput
  cup_data_qa_responses_none: Cup_data_qa_responseWhereInput
  cup_data_user_removes_every: Cup_data_user_removeWhereInput
  cup_data_user_removes_some: Cup_data_user_removeWhereInput
  cup_data_user_removes_none: Cup_data_user_removeWhereInput
  deleted: Boolean
  deleted_not: Boolean
  dob: DateTime
  dob_not: DateTime
  dob_in: [DateTime!]
  dob_not_in: [DateTime!]
  dob_lt: DateTime
  dob_lte: DateTime
  dob_gt: DateTime
  dob_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  encrypt_salt_string: String
  encrypt_salt_string_not: String
  encrypt_salt_string_in: [String!]
  encrypt_salt_string_not_in: [String!]
  encrypt_salt_string_lt: String
  encrypt_salt_string_lte: String
  encrypt_salt_string_gt: String
  encrypt_salt_string_gte: String
  encrypt_salt_string_contains: String
  encrypt_salt_string_not_contains: String
  encrypt_salt_string_starts_with: String
  encrypt_salt_string_not_starts_with: String
  encrypt_salt_string_ends_with: String
  encrypt_salt_string_not_ends_with: String
  ethnicity: EthnicityWhereInput
  first_name: String
  first_name_not: String
  first_name_in: [String!]
  first_name_not_in: [String!]
  first_name_lt: String
  first_name_lte: String
  first_name_gt: String
  first_name_gte: String
  first_name_contains: String
  first_name_not_contains: String
  first_name_starts_with: String
  first_name_not_starts_with: String
  first_name_ends_with: String
  first_name_not_ends_with: String
  given_birth: Boolean
  given_birth_not: Boolean
  last_name: String
  last_name_not: String
  last_name_in: [String!]
  last_name_not_in: [String!]
  last_name_lt: String
  last_name_lte: String
  last_name_gt: String
  last_name_gte: String
  last_name_contains: String
  last_name_not_contains: String
  last_name_starts_with: String
  last_name_not_starts_with: String
  last_name_ends_with: String
  last_name_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  user_coin_histories_every: User_coin_historyWhereInput
  user_coin_histories_some: User_coin_historyWhereInput
  user_coin_histories_none: User_coin_historyWhereInput
  user_cups_every: User_cupsWhereInput
  user_cups_some: User_cupsWhereInput
  user_cups_none: User_cupsWhereInput
  user_interview_data_every: User_interview_dataWhereInput
  user_interview_data_some: User_interview_dataWhereInput
  user_interview_data_none: User_interview_dataWhereInput
  user_record_data_by_periods_every: User_record_data_by_periodWhereInput
  user_record_data_by_periods_some: User_record_data_by_periodWhereInput
  user_record_data_by_periods_none: User_record_data_by_periodWhereInput
  AND: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
}

input UsersWhereUniqueInput {
  id: Int
}
`
      }
    