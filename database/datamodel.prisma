type AnswerType @pgTable(name: "answer_types") {
  id: Int! @pgColumn(name: "answer_type_id") @unique
  answerType: String! @pgColumn(name: "answer_type") @unique
  userInterviewQuestions: [UserInterviewQuestion] @pgColumn(name: "user_interview_questions")
}

type AppServerSync @pgTable(name: "app_server_sync") {
  id: Int! @pgColumn(name: "app_server_sync_id") @unique
  serverSynchTime: DateTime! @pgColumn(name: "server_synch_time")
  userId: User! @pgColumn(name: "user_id")
}

type AuthToken @pgTable(name: "auth_token") {
  id: Int! @pgColumn(name: "user_id") @unique
}

type Calibration @pgTable(name: "calibration") {
  id: Int! @pgColumn(name: "calib_id") @unique
  # describes method of calibration
  calibVersion: String! @pgColumn(name: "calib_version") @unique
  cup: [Cup]
}

type Company @pgTable(name: "company") {
  id: Int! @pgColumn(name: "company_id") @unique
  companyName: String! @pgColumn(name: "company_name") @unique
  cup: [Cup]
}

type Country @pgTable(name: "country") {
  id: Int! @pgColumn(name: "country_id") @unique
  countryName: String! @pgColumn(name: "country_name") @unique
  users: [User]
}

type Cup @pgTable(name: "cup") {
  id: Int! @pgColumn(name: "serial_number") @unique
  anonSerialNumber: Int! @pgColumn(name: "anon_serial_number")
  calibId: Calibration @pgColumn(name: "calib_id")
  companyId: Company @pgColumn(name: "company_id")
  cupAppSync: [CupAppSync] @pgColumn(name: "cup_app_sync")
  cupData: [CupDatum] @pgColumn(name: "cup_data")
  cupDataColourCalib: [CupDataColourCalib] @pgColumn(name: "cup_data_colour_calib")
  cupDataRaw: [CupDataRaw] @pgColumn(name: "cup_data_raw")
  cupDataUserRemove: [CupDataUserRemove] @pgColumn(name: "cup_data_user_remove")
  encryptionKey: Int! @pgColumn(name: "encryption_key")
  fwId: Firmware @pgColumn(name: "fw_id")
  hwId: Hardware @pgColumn(name: "hw_id")
  userCups: [UserCup] @pgColumn(name: "user_cups")
}

type CupAppSync @pgTable(name: "cup_app_sync") {
  id: Int! @pgColumn(name: "cup_app_sync_id") @unique
  appSynchTime: DateTime! @pgColumn(name: "app_synch_time")
  serialNumber: Cup! @pgColumn(name: "serial_number")
}

type CupDataAnswer @pgTable(name: "cup_data_answer") {
  id: Int! @pgColumn(name: "answer_id") @unique
  answerText: String! @pgColumn(name: "answer_text")
  cupDataQaResponse: [CupDataQaResponse] @pgColumn(name: "cup_data_qa_response")
  questionId: CupDataQuestion! @pgColumn(name: "question_id")
}

type CupDataColourCalc @pgTable(name: "cup_data_colour_calc") {
  id: Int! @pgColumn(name: "row_id") @unique
  blue: Int!
  cupDataRowId: CupDatum! @pgColumn(name: "cup_data_row_id")
  green: Int!
  red: Int!
}

type CupDataColourCalib @pgTable(name: "cup_data_colour_calib") {
  id: Int! @pgColumn(name: "cup_data_colour_calib_id") @unique
  blue: Int!
  c: Int!
  green: Int!
  red: Int!
  serialNumber: Cup! @pgColumn(name: "serial_number")
}

type CupDataManMdate @pgTable(name: "cup_data_man_mdates") {
  id: Int! @pgColumn(name: "row_id") @unique
  mdateRowId: CupDataProcMdate! @pgColumn(name: "mdate_row_id")
  menFinish: DateTime @pgColumn(name: "men_finish")
  menStart: DateTime @pgColumn(name: "men_start")
}

type CupDataProcFlow @pgTable(name: "cup_data_proc_flow") {
  id: Int! @pgColumn(name: "row_id") @unique
  date: DateTime!
  # the flow is x 10 (the volume is also x 10) which allows us to avoid decimals and use smallint
  hourlyFlow: Int! @pgColumn(name: "hourly_flow")
  mdateRowId: CupDataProcMdate! @pgColumn(name: "mdate_row_id")
  userId: User! @pgColumn(name: "user_id")
}

type CupDataProcMdate @pgTable(name: "cup_data_proc_mdates") {
  id: Int! @pgColumn(name: "mdate_row_id") @unique
  cupDataManMdates: [CupDataManMdate] @pgColumn(name: "cup_data_man_mdates")
  cupDataProcFlow: [CupDataProcFlow] @pgColumn(name: "cup_data_proc_flow")
  dataRejected: Boolean @pgColumn(name: "data_rejected")
  dataVerified: Boolean! @pgColumn(name: "data_verified")
  menFinish: DateTime! @pgColumn(name: "men_finish")
  menStart: DateTime! @pgColumn(name: "men_start")
  rejectId: CupDataRejection @pgColumn(name: "reject_id")
  rewardAmount: Int @pgColumn(name: "reward_amount")
  userId: User! @pgColumn(name: "user_id")
}

type CupDataProcVolume @pgTable(name: "cup_data_proc_volume") {
  id: Int! @pgColumn(name: "row_id") @unique
  confidenceL: Int @pgColumn(name: "confidence_l")
  confidenceR: Int @pgColumn(name: "confidence_r")
  cupDataRowId: CupDatum! @pgColumn(name: "cup_data_row_id")
  inVitro: Boolean! @default(value: false) @pgColumn(name: "in_vitro")
  volume: Int
  volumeAdj: Int @pgColumn(name: "volume_adj")
  volumeL: Int @pgColumn(name: "volume_l")
  volumeR: Int @pgColumn(name: "volume_r")
}

type CupDataQaResponse @pgTable(name: "cup_data_qa_response") {
  id: Int! @pgColumn(name: "cup_data_qa_response_id") @unique
  answerId: CupDataAnswer! @pgColumn(name: "answer_id")
  qaDate: DateTime! @pgColumn(name: "qa_date")
  questionId: CupDataQuestion! @pgColumn(name: "question_id")
  userId: User! @pgColumn(name: "user_id")
}

type CupDataQuestion @pgTable(name: "cup_data_question") {
  id: Int! @pgColumn(name: "question_id") @unique
  cupDataAnswer: [CupDataAnswer] @pgColumn(name: "cup_data_answer")
  cupDataQaResponse: [CupDataQaResponse] @pgColumn(name: "cup_data_qa_response")
  questionText: String! @pgColumn(name: "question_text")
}

type CupDataRaw @pgTable(name: "cup_data_raw") {
  id: Int! @pgColumn(name: "row_id") @unique
  pageData: String! @pgColumn(name: "page_data")
  serialNumber: Cup @pgColumn(name: "serial_number")
}

type CupDataRejection @pgTable(name: "cup_data_rejection") {
  id: Int! @pgColumn(name: "reject_id") @unique
  cupDataProcMdates: [CupDataProcMdate] @pgColumn(name: "cup_data_proc_mdates")
  rejectionDescription: String! @pgColumn(name: "rejection_description") @unique
}

type CupDataUserRemove @pgTable(name: "cup_data_user_remove") {
  id: Int! @pgColumn(name: "row_id") @unique
  changeTime: DateTime! @pgColumn(name: "change_time")
  explainId: CupDataUserRemoveExplain! @pgColumn(name: "explain_id")
  serialNumber: Cup! @pgColumn(name: "serial_number")
  userId: User! @pgColumn(name: "user_id")
}

type CupDataUserRemoveExplain @pgTable(name: "cup_data_user_remove_explain") {
  id: Int! @pgColumn(name: "explain_id") @unique
  cupDataUserRemove: [CupDataUserRemove] @pgColumn(name: "cup_data_user_remove")
  explain: String!
}

type CupDatum @pgTable(name: "cup_data") {
  id: Int! @pgColumn(name: "row_id") @unique
  battery: Int!
  calibFlag: Boolean! @pgColumn(name: "calib_flag")
  ch1: Int!
  ch10: Int!
  ch11: Int!
  ch12: Int!
  ch13: Int!
  ch14: Int!
  ch2: Int!
  ch3: Int!
  ch4: Int!
  ch5: Int!
  ch6: Int!
  ch7: Int!
  ch8: Int!
  ch9: Int!
  colourB: Int! @pgColumn(name: "colour_b")
  colourC: Int! @pgColumn(name: "colour_c")
  colourG: Int! @pgColumn(name: "colour_g")
  colourR: Int! @pgColumn(name: "colour_r")
  cupDataColourCalc: [CupDataColourCalc] @pgColumn(name: "cup_data_colour_calc")
  cupDataProcVolume: [CupDataProcVolume] @pgColumn(name: "cup_data_proc_volume")
  date: DateTime!
  day: Int!
  hour: Int!
  line: Int!
  minute: Int!
  month: Int!
  page: Int!
  rawTotalVolume: Int @pgColumn(name: "raw_total_volume")
  rawVolumeL: Int @pgColumn(name: "raw_volume_l")
  rawVolumeR: Int @pgColumn(name: "raw_volume_r")
  serialNumber: Cup @pgColumn(name: "serial_number")
  temperature: Int!
  x: Int!
  y: Int!
  year: Int!
  z: Int!
}

type Ethnicity @pgTable(name: "ethnicity") {
  id: Int! @pgColumn(name: "ethnicity_id") @unique
  ethnicity: String! @unique
  users: [User]
}

type Firmware @pgTable(name: "firmware") {
  id: Int! @pgColumn(name: "fw_id") @unique
  cup: [Cup]
  fwVersion: String! @pgColumn(name: "fw_version") @unique
}

type Hardware @pgTable(name: "hardware") {
  id: Int! @pgColumn(name: "hw_id") @unique
  cup: [Cup]
  hwVersion: String! @pgColumn(name: "hw_version") @unique
}

type PlatformComp @pgTable(name: "platform_comp") {
  id: Int! @pgColumn(name: "row_id") @unique
  phoneId: Int! @pgColumn(name: "phone_id")
  platformId: Int! @pgColumn(name: "platform_id")
  problemHistory: Boolean @pgColumn(name: "problem_history")
  softwareId: Int! @pgColumn(name: "software_id")
  successHistory: Boolean @pgColumn(name: "success_history")
}

type User @pgTable(name: "users") {
  id: Int! @pgColumn(name: "user_id") @unique
  anonUserId: Int @pgColumn(name: "anon_user_id") @unique
  appServerSync: [AppServerSync] @pgColumn(name: "app_server_sync")
  countryId: Country @pgColumn(name: "country_id")
  cupDataProcFlow: [CupDataProcFlow] @pgColumn(name: "cup_data_proc_flow")
  cupDataProcMdates: [CupDataProcMdate] @pgColumn(name: "cup_data_proc_mdates")
  cupDataQaResponse: [CupDataQaResponse] @pgColumn(name: "cup_data_qa_response")
  cupDataUserRemove: [CupDataUserRemove] @pgColumn(name: "cup_data_user_remove")
  deleted: Boolean! @default(value: false)
  dob: DateTime!
  email: String! @unique
  # NULL
  encryptSaltString: String @pgColumn(name: "encrypt_salt_string")
  ethnicityId: Ethnicity @pgColumn(name: "ethnicity_id")
  firstName: String! @pgColumn(name: "first_name")
  givenBirth: Boolean! @pgColumn(name: "given_birth")
  lastName: String! @pgColumn(name: "last_name")
  password: String!
  userCoinHistory: [UserCoinHistory] @pgColumn(name: "user_coin_history")
  userCups: [UserCup] @pgColumn(name: "user_cups")
  userInterviewData: [UserInterviewDatum] @pgColumn(name: "user_interview_data")
  userRecordDataByPeriod: [UserRecordDataByPeriod] @pgColumn(name: "user_record_data_by_period")
}

type UserCoinHistory @pgTable(name: "user_coin_history") {
  id: Int! @pgColumn(name: "row_id") @unique
  category: String!
  coin: Int!
  contents: String!
  date: DateTime!
  txhash: String!
  userId: User @pgColumn(name: "user_id")
  userRecordDataByPeriod: [UserRecordDataByPeriod] @pgColumn(name: "user_record_data_by_period")
}

type UserCup @linkTable @pgTable(name: "user_cups") {
  id: Int! @pgColumn(name: "row_id") @unique
  serialNumber: Cup @pgColumn(name: "serial_number")
  userId: User @pgColumn(name: "user_id")
}

type UserInterviewDatum @pgTable(name: "user_interview_data") {
  id: Int! @pgColumn(name: "row_id") @unique
  answerRange: Int @pgColumn(name: "answer_range")
  answerText: String @pgColumn(name: "answer_text")
  answerYn: Boolean @pgColumn(name: "answer_yn")
  date: DateTime!
  questionId: UserInterviewQuestion! @pgColumn(name: "question_id")
  userId: User! @pgColumn(name: "user_id")
}

type UserInterviewQuestion @pgTable(name: "user_interview_questions") {
  id: Int! @pgColumn(name: "question_id") @unique
  answerTypeId: AnswerType! @pgColumn(name: "answer_type_id")
  question: String! @unique
  userInterviewData: [UserInterviewDatum] @pgColumn(name: "user_interview_data")
}

type UserRecordDataByDay @pgTable(name: "user_record_data_by_day") {
  id: Int! @pgColumn(name: "row_id") @unique
  crampsLevel: Int @pgColumn(name: "cramps_level")
  recordDate: DateTime! @pgColumn(name: "record_date")
  recordPeriodRowId: UserRecordDataByPeriod @pgColumn(name: "record_period_row_id")
  userRecordDataByTime: [UserRecordDataByTime] @pgColumn(name: "user_record_data_by_time")
}

type UserRecordDataByPeriod @pgTable(name: "user_record_data_by_period") {
  id: Int! @pgColumn(name: "row_id") @unique
  coinHistoryRowId: UserCoinHistory @pgColumn(name: "coin_history_row_id")
  isTakePill: Boolean @pgColumn(name: "is_take_pill")
  mensFinish: DateTime @pgColumn(name: "mens_finish")
  mensStart: DateTime @pgColumn(name: "mens_start")
  userId: User @pgColumn(name: "user_id")
  userRecordDataByDay: [UserRecordDataByDay] @pgColumn(name: "user_record_data_by_day")
}

type UserRecordDataByTime @pgTable(name: "user_record_data_by_time") {
  id: Int! @pgColumn(name: "row_id") @unique
  changeTime: DateTime! @pgColumn(name: "change_time")
  colorB: Int @pgColumn(name: "color_b")
  colorG: Int @pgColumn(name: "color_g")
  colorR: Int @pgColumn(name: "color_r")
  leakage: String
  recordDayRowId: UserRecordDataByDay @pgColumn(name: "record_day_row_id")
  startTime: DateTime @pgColumn(name: "start_time")
  volume: Float
}

type UsersDataAnalysis @pgTable(name: "users_data_analysis") {
  id: Int! @pgColumn(name: "idx") @unique
  email: String!
  firstName: String! @pgColumn(name: "first_name")
  lastName: String! @pgColumn(name: "last_name")
  password: String!
  userId: String! @pgColumn(name: "user_id")
}
